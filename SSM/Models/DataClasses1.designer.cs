#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSM.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SCFV4")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAgent(Agent instance);
    partial void UpdateAgent(Agent instance);
    partial void DeleteAgent(Agent instance);
    partial void InsertWarehouse(Warehouse instance);
    partial void UpdateWarehouse(Warehouse instance);
    partial void DeleteWarehouse(Warehouse instance);
    partial void InsertArea(Area instance);
    partial void UpdateArea(Area instance);
    partial void DeleteArea(Area instance);
    partial void InsertArriveNotice(ArriveNotice instance);
    partial void UpdateArriveNotice(ArriveNotice instance);
    partial void DeleteArriveNotice(ArriveNotice instance);
    partial void InsertAuthorLetter(AuthorLetter instance);
    partial void UpdateAuthorLetter(AuthorLetter instance);
    partial void DeleteAuthorLetter(AuthorLetter instance);
    partial void InsertBillDetail(BillDetail instance);
    partial void UpdateBillDetail(BillDetail instance);
    partial void DeleteBillDetail(BillDetail instance);
    partial void InsertBillLanding(BillLanding instance);
    partial void UpdateBillLanding(BillLanding instance);
    partial void DeleteBillLanding(BillLanding instance);
    partial void InsertBookingConfirm(BookingConfirm instance);
    partial void UpdateBookingConfirm(BookingConfirm instance);
    partial void DeleteBookingConfirm(BookingConfirm instance);
    partial void InsertBookingNote(BookingNote instance);
    partial void UpdateBookingNote(BookingNote instance);
    partial void DeleteBookingNote(BookingNote instance);
    partial void InsertBookingRequest(BookingRequest instance);
    partial void UpdateBookingRequest(BookingRequest instance);
    partial void DeleteBookingRequest(BookingRequest instance);
    partial void InsertCarrierAirLine(CarrierAirLine instance);
    partial void UpdateCarrierAirLine(CarrierAirLine instance);
    partial void DeleteCarrierAirLine(CarrierAirLine instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertControlCompany(ControlCompany instance);
    partial void UpdateControlCompany(ControlCompany instance);
    partial void DeleteControlCompany(ControlCompany instance);
    partial void InsertCurency(Curency instance);
    partial void UpdateCurency(Curency instance);
    partial void DeleteCurency(Curency instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertDebitNote(DebitNote instance);
    partial void UpdateDebitNote(DebitNote instance);
    partial void DeleteDebitNote(DebitNote instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertDT81(DT81 instance);
    partial void UpdateDT81(DT81 instance);
    partial void DeleteDT81(DT81 instance);
    partial void InsertFreight(Freight instance);
    partial void UpdateFreight(Freight instance);
    partial void DeleteFreight(Freight instance);
    partial void InsertHAirWayBill(HAirWayBill instance);
    partial void UpdateHAirWayBill(HAirWayBill instance);
    partial void DeleteHAirWayBill(HAirWayBill instance);
    partial void InsertInvoideIssued(InvoideIssued instance);
    partial void UpdateInvoideIssued(InvoideIssued instance);
    partial void DeleteInvoideIssued(InvoideIssued instance);
    partial void InsertManifest(Manifest instance);
    partial void UpdateManifest(Manifest instance);
    partial void DeleteManifest(Manifest instance);
    partial void InsertMT72(MT72 instance);
    partial void UpdateMT72(MT72 instance);
    partial void DeleteMT72(MT72 instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertPaymentVoucher(PaymentVoucher instance);
    partial void UpdatePaymentVoucher(PaymentVoucher instance);
    partial void DeletePaymentVoucher(PaymentVoucher instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertRequestPayment(RequestPayment instance);
    partial void UpdateRequestPayment(RequestPayment instance);
    partial void DeleteRequestPayment(RequestPayment instance);
    partial void InsertRevenue(Revenue instance);
    partial void UpdateRevenue(Revenue instance);
    partial void DeleteRevenue(Revenue instance);
    partial void InsertSalePlan(SalePlan instance);
    partial void UpdateSalePlan(SalePlan instance);
    partial void DeleteSalePlan(SalePlan instance);
    partial void InsertSaleType(SaleType instance);
    partial void UpdateSaleType(SaleType instance);
    partial void DeleteSaleType(SaleType instance);
    partial void InsertServerFile(ServerFile instance);
    partial void UpdateServerFile(ServerFile instance);
    partial void DeleteServerFile(ServerFile instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertShipment(Shipment instance);
    partial void UpdateShipment(Shipment instance);
    partial void DeleteShipment(Shipment instance);
    partial void InsertSOAInvoice(SOAInvoice instance);
    partial void UpdateSOAInvoice(SOAInvoice instance);
    partial void DeleteSOAInvoice(SOAInvoice instance);
    partial void InsertSOAStatistic(SOAStatistic instance);
    partial void UpdateSOAStatistic(SOAStatistic instance);
    partial void DeleteSOAStatistic(SOAStatistic instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertTransitmentAdvised(TransitmentAdvised instance);
    partial void UpdateTransitmentAdvised(TransitmentAdvised instance);
    partial void DeleteTransitmentAdvised(TransitmentAdvised instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertVoucher(Voucher instance);
    partial void UpdateVoucher(Voucher instance);
    partial void DeleteVoucher(Voucher instance);
    partial void InsertMT81(MT81 instance);
    partial void UpdateMT81(MT81 instance);
    partial void DeleteMT81(MT81 instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertStockCard(StockCard instance);
    partial void UpdateStockCard(StockCard instance);
    partial void DeleteStockCard(StockCard instance);
    partial void InsertDT72(DT72 instance);
    partial void UpdateDT72(DT72 instance);
    partial void DeleteDT72(DT72 instance);
    partial void InsertServicesType(ServicesType instance);
    partial void UpdateServicesType(ServicesType instance);
    partial void DeleteServicesType(ServicesType instance);
    partial void InsertCatelory(Catelory instance);
    partial void UpdateCatelory(Catelory instance);
    partial void DeleteCatelory(Catelory instance);
    partial void InsertHistory(History instance);
    partial void UpdateHistory(History instance);
    partial void DeleteHistory(History instance);
    partial void InsertUserGroup(UserGroup instance);
    partial void UpdateUserGroup(UserGroup instance);
    partial void DeleteUserGroup(UserGroup instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertGroupAccessPermission(GroupAccessPermission instance);
    partial void UpdateGroupAccessPermission(GroupAccessPermission instance);
    partial void DeleteGroupAccessPermission(GroupAccessPermission instance);
    partial void InsertScfNew(ScfNew instance);
    partial void UpdateScfNew(ScfNew instance);
    partial void DeleteScfNew(ScfNew instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCRMContact(CRMContact instance);
    partial void UpdateCRMContact(CRMContact instance);
    partial void DeleteCRMContact(CRMContact instance);
    partial void InsertCRMGroup(CRMGroup instance);
    partial void UpdateCRMGroup(CRMGroup instance);
    partial void DeleteCRMGroup(CRMGroup instance);
    partial void InsertCRMJobCategory(CRMJobCategory instance);
    partial void UpdateCRMJobCategory(CRMJobCategory instance);
    partial void DeleteCRMJobCategory(CRMJobCategory instance);
    partial void InsertCRMSource(CRMSource instance);
    partial void UpdateCRMSource(CRMSource instance);
    partial void DeleteCRMSource(CRMSource instance);
    partial void InsertCRMStatus(CRMStatus instance);
    partial void UpdateCRMStatus(CRMStatus instance);
    partial void DeleteCRMStatus(CRMStatus instance);
    partial void InsertCRMEmailHistory(CRMEmailHistory instance);
    partial void UpdateCRMEmailHistory(CRMEmailHistory instance);
    partial void DeleteCRMEmailHistory(CRMEmailHistory instance);
    partial void InsertCRMEventType(CRMEventType instance);
    partial void UpdateCRMEventType(CRMEventType instance);
    partial void DeleteCRMEventType(CRMEventType instance);
    partial void InsertCRMPriceQuotation(CRMPriceQuotation instance);
    partial void UpdateCRMPriceQuotation(CRMPriceQuotation instance);
    partial void DeleteCRMPriceQuotation(CRMPriceQuotation instance);
    partial void InsertCRMCusDocument(CRMCusDocument instance);
    partial void UpdateCRMCusDocument(CRMCusDocument instance);
    partial void DeleteCRMCusDocument(CRMCusDocument instance);
    partial void InsertCRMSchedule(CRMSchedule instance);
    partial void UpdateCRMSchedule(CRMSchedule instance);
    partial void DeleteCRMSchedule(CRMSchedule instance);
    partial void InsertCRMPLanSale(CRMPLanSale instance);
    partial void UpdateCRMPLanSale(CRMPLanSale instance);
    partial void DeleteCRMPLanSale(CRMPLanSale instance);
    partial void InsertCRMPlanProgram(CRMPlanProgram instance);
    partial void UpdateCRMPlanProgram(CRMPlanProgram instance);
    partial void DeleteCRMPlanProgram(CRMPlanProgram instance);
    partial void InsertCRMPlanProgMonth(CRMPlanProgMonth instance);
    partial void UpdateCRMPlanProgMonth(CRMPlanProgMonth instance);
    partial void DeleteCRMPlanProgMonth(CRMPlanProgMonth instance);
    partial void InsertCRMPlanMonth(CRMPlanMonth instance);
    partial void UpdateCRMPlanMonth(CRMPlanMonth instance);
    partial void DeleteCRMPlanMonth(CRMPlanMonth instance);
    partial void InsertCRMCustomer(CRMCustomer instance);
    partial void UpdateCRMCustomer(CRMCustomer instance);
    partial void DeleteCRMCustomer(CRMCustomer instance);
    partial void InsertProvince(Province instance);
    partial void UpdateProvince(Province instance);
    partial void DeleteProvince(Province instance);
    partial void InsertCRMPriceStatus(CRMPriceStatus instance);
    partial void UpdateCRMPriceStatus(CRMPriceStatus instance);
    partial void DeleteCRMPriceStatus(CRMPriceStatus instance);
    partial void InsertCRMFollowCusUser(CRMFollowCusUser instance);
    partial void UpdateCRMFollowCusUser(CRMFollowCusUser instance);
    partial void DeleteCRMFollowCusUser(CRMFollowCusUser instance);
    partial void InsertCRMFollowEventUser(CRMFollowEventUser instance);
    partial void UpdateCRMFollowEventUser(CRMFollowEventUser instance);
    partial void DeleteCRMFollowEventUser(CRMFollowEventUser instance);
    partial void InsertCRMVisit(CRMVisit instance);
    partial void UpdateCRMVisit(CRMVisit instance);
    partial void DeleteCRMVisit(CRMVisit instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SSMConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Agent> Agents
		{
			get
			{
				return this.GetTable<Agent>();
			}
		}
		
		public System.Data.Linq.Table<Warehouse> Warehouses
		{
			get
			{
				return this.GetTable<Warehouse>();
			}
		}
		
		public System.Data.Linq.Table<Area> Areas
		{
			get
			{
				return this.GetTable<Area>();
			}
		}
		
		public System.Data.Linq.Table<ArriveNotice> ArriveNotices
		{
			get
			{
				return this.GetTable<ArriveNotice>();
			}
		}
		
		public System.Data.Linq.Table<AuthorLetter> AuthorLetters
		{
			get
			{
				return this.GetTable<AuthorLetter>();
			}
		}
		
		public System.Data.Linq.Table<BillDetail> BillDetails
		{
			get
			{
				return this.GetTable<BillDetail>();
			}
		}
		
		public System.Data.Linq.Table<BillLanding> BillLandings
		{
			get
			{
				return this.GetTable<BillLanding>();
			}
		}
		
		public System.Data.Linq.Table<BookingConfirm> BookingConfirms
		{
			get
			{
				return this.GetTable<BookingConfirm>();
			}
		}
		
		public System.Data.Linq.Table<BookingNote> BookingNotes
		{
			get
			{
				return this.GetTable<BookingNote>();
			}
		}
		
		public System.Data.Linq.Table<BookingRequest> BookingRequests
		{
			get
			{
				return this.GetTable<BookingRequest>();
			}
		}
		
		public System.Data.Linq.Table<CarrierAirLine> CarrierAirLines
		{
			get
			{
				return this.GetTable<CarrierAirLine>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<ControlCompany> ControlCompanies
		{
			get
			{
				return this.GetTable<ControlCompany>();
			}
		}
		
		public System.Data.Linq.Table<Curency> Curencies
		{
			get
			{
				return this.GetTable<Curency>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<DebitNote> DebitNotes
		{
			get
			{
				return this.GetTable<DebitNote>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<DT81> DT81s
		{
			get
			{
				return this.GetTable<DT81>();
			}
		}
		
		public System.Data.Linq.Table<Freight> Freights
		{
			get
			{
				return this.GetTable<Freight>();
			}
		}
		
		public System.Data.Linq.Table<HAirWayBill> HAirWayBills
		{
			get
			{
				return this.GetTable<HAirWayBill>();
			}
		}
		
		public System.Data.Linq.Table<InvoideIssued> InvoideIssueds
		{
			get
			{
				return this.GetTable<InvoideIssued>();
			}
		}
		
		public System.Data.Linq.Table<Manifest> Manifests
		{
			get
			{
				return this.GetTable<Manifest>();
			}
		}
		
		public System.Data.Linq.Table<MT72> MT72s
		{
			get
			{
				return this.GetTable<MT72>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<PaymentVoucher> PaymentVouchers
		{
			get
			{
				return this.GetTable<PaymentVoucher>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<RequestPayment> RequestPayments
		{
			get
			{
				return this.GetTable<RequestPayment>();
			}
		}
		
		public System.Data.Linq.Table<Revenue> Revenues
		{
			get
			{
				return this.GetTable<Revenue>();
			}
		}
		
		public System.Data.Linq.Table<SalePlan> SalePlans
		{
			get
			{
				return this.GetTable<SalePlan>();
			}
		}
		
		public System.Data.Linq.Table<SaleType> SaleTypes
		{
			get
			{
				return this.GetTable<SaleType>();
			}
		}
		
		public System.Data.Linq.Table<ServerFile> ServerFiles
		{
			get
			{
				return this.GetTable<ServerFile>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<Shipment> Shipments
		{
			get
			{
				return this.GetTable<Shipment>();
			}
		}
		
		public System.Data.Linq.Table<SOAInvoice> SOAInvoices
		{
			get
			{
				return this.GetTable<SOAInvoice>();
			}
		}
		
		public System.Data.Linq.Table<SOAStatistic> SOAStatistics
		{
			get
			{
				return this.GetTable<SOAStatistic>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<TransitmentAdvised> TransitmentAdviseds
		{
			get
			{
				return this.GetTable<TransitmentAdvised>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<Voucher> Vouchers
		{
			get
			{
				return this.GetTable<Voucher>();
			}
		}
		
		public System.Data.Linq.Table<MT81> MT81s
		{
			get
			{
				return this.GetTable<MT81>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<StockCard> StockCards
		{
			get
			{
				return this.GetTable<StockCard>();
			}
		}
		
		public System.Data.Linq.Table<DT72> DT72s
		{
			get
			{
				return this.GetTable<DT72>();
			}
		}
		
		public System.Data.Linq.Table<ServicesType> ServicesTypes
		{
			get
			{
				return this.GetTable<ServicesType>();
			}
		}
		
		public System.Data.Linq.Table<Catelory> Catelories
		{
			get
			{
				return this.GetTable<Catelory>();
			}
		}
		
		public System.Data.Linq.Table<History> Histories
		{
			get
			{
				return this.GetTable<History>();
			}
		}
		
		public System.Data.Linq.Table<UserGroup> UserGroups
		{
			get
			{
				return this.GetTable<UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<GroupAccessPermission> GroupAccessPermissions
		{
			get
			{
				return this.GetTable<GroupAccessPermission>();
			}
		}
		
		public System.Data.Linq.Table<ScfNew> ScfNews
		{
			get
			{
				return this.GetTable<ScfNew>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<CRMContact> CRMContacts
		{
			get
			{
				return this.GetTable<CRMContact>();
			}
		}
		
		public System.Data.Linq.Table<CRMGroup> CRMGroups
		{
			get
			{
				return this.GetTable<CRMGroup>();
			}
		}
		
		public System.Data.Linq.Table<CRMJobCategory> CRMJobCategories
		{
			get
			{
				return this.GetTable<CRMJobCategory>();
			}
		}
		
		public System.Data.Linq.Table<CRMSource> CRMSources
		{
			get
			{
				return this.GetTable<CRMSource>();
			}
		}
		
		public System.Data.Linq.Table<CRMStatus> CRMStatus
		{
			get
			{
				return this.GetTable<CRMStatus>();
			}
		}
		
		public System.Data.Linq.Table<CRMEmailHistory> CRMEmailHistories
		{
			get
			{
				return this.GetTable<CRMEmailHistory>();
			}
		}
		
		public System.Data.Linq.Table<CRMEventType> CRMEventTypes
		{
			get
			{
				return this.GetTable<CRMEventType>();
			}
		}
		
		public System.Data.Linq.Table<CRMPriceQuotation> CRMPriceQuotations
		{
			get
			{
				return this.GetTable<CRMPriceQuotation>();
			}
		}
		
		public System.Data.Linq.Table<CRMCusDocument> CRMCusDocuments
		{
			get
			{
				return this.GetTable<CRMCusDocument>();
			}
		}
		
		public System.Data.Linq.Table<CRMSchedule> CRMSchedules
		{
			get
			{
				return this.GetTable<CRMSchedule>();
			}
		}
		
		public System.Data.Linq.Table<CRMPLanSale> CRMPLanSales
		{
			get
			{
				return this.GetTable<CRMPLanSale>();
			}
		}
		
		public System.Data.Linq.Table<CRMPlanProgram> CRMPlanPrograms
		{
			get
			{
				return this.GetTable<CRMPlanProgram>();
			}
		}
		
		public System.Data.Linq.Table<CRMPlanProgMonth> CRMPlanProgMonths
		{
			get
			{
				return this.GetTable<CRMPlanProgMonth>();
			}
		}
		
		public System.Data.Linq.Table<CRMPlanMonth> CRMPlanMonths
		{
			get
			{
				return this.GetTable<CRMPlanMonth>();
			}
		}
		
		public System.Data.Linq.Table<CRMCustomer> CRMCustomers
		{
			get
			{
				return this.GetTable<CRMCustomer>();
			}
		}
		
		public System.Data.Linq.Table<Province> Provinces
		{
			get
			{
				return this.GetTable<Province>();
			}
		}
		
		public System.Data.Linq.Table<CRMPriceStatus> CRMPriceStatus
		{
			get
			{
				return this.GetTable<CRMPriceStatus>();
			}
		}
		
		public System.Data.Linq.Table<CRMFollowCusUser> CRMFollowCusUsers
		{
			get
			{
				return this.GetTable<CRMFollowCusUser>();
			}
		}
		
		public System.Data.Linq.Table<CRMFollowEventUser> CRMFollowEventUsers
		{
			get
			{
				return this.GetTable<CRMFollowEventUser>();
			}
		}
		
		public System.Data.Linq.Table<CRMVisit> CRMVisits
		{
			get
			{
				return this.GetTable<CRMVisit>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_postpv")]
		public int sp_postpv([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cVoucherID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cVoucherID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_postsv")]
		public int sp_postsv([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cVoucherID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cVoucherID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp15_CalcFIFOPrice", IsComposable=true)]
		public object sp15_CalcFIFOPrice([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> nMF, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> nMT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> nYear)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nMF, nMT, nYear).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agent")]
	public partial class Agent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _AgentName;
		
		private string _PhoneNumber;
		
		private string _Address;
		
		private string _Email;
		
		private string _Description1;
		
		private string _AbbName;
		
		private string _CountryName;
		
		private string _GroupType;
		
		private System.Nullable<long> _UserId;
		
		private string _Description;
		
		private bool _IsActive;
		
		private bool _IsSee;
		
		private bool _IsHideUser;
		
		private EntitySet<Freight> _Freights;
		
		private EntitySet<Revenue> _Revenues;
		
		private EntitySet<Revenue> _Revenues1;
		
		private EntitySet<Shipment> _Shipments;
		
		private EntitySet<SOAInvoice> _SOAInvoices;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAgentNameChanging(string value);
    partial void OnAgentNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDescription1Changing(string value);
    partial void OnDescription1Changed();
    partial void OnAbbNameChanging(string value);
    partial void OnAbbNameChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnGroupTypeChanging(string value);
    partial void OnGroupTypeChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsSeeChanging(bool value);
    partial void OnIsSeeChanged();
    partial void OnIsHideUserChanging(bool value);
    partial void OnIsHideUserChanged();
    #endregion
		
		public Agent()
		{
			this._Freights = new EntitySet<Freight>(new Action<Freight>(this.attach_Freights), new Action<Freight>(this.detach_Freights));
			this._Revenues = new EntitySet<Revenue>(new Action<Revenue>(this.attach_Revenues), new Action<Revenue>(this.detach_Revenues));
			this._Revenues1 = new EntitySet<Revenue>(new Action<Revenue>(this.attach_Revenues1), new Action<Revenue>(this.detach_Revenues1));
			this._Shipments = new EntitySet<Shipment>(new Action<Shipment>(this.attach_Shipments), new Action<Shipment>(this.detach_Shipments));
			this._SOAInvoices = new EntitySet<SOAInvoice>(new Action<SOAInvoice>(this.attach_SOAInvoices), new Action<SOAInvoice>(this.detach_SOAInvoices));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentName", DbType="NVarChar(200)")]
		public string AgentName
		{
			get
			{
				return this._AgentName;
			}
			set
			{
				if ((this._AgentName != value))
				{
					this.OnAgentNameChanging(value);
					this.SendPropertyChanging();
					this._AgentName = value;
					this.SendPropertyChanged("AgentName");
					this.OnAgentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(100)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description1", DbType="NVarChar(500)")]
		public string Description1
		{
			get
			{
				return this._Description1;
			}
			set
			{
				if ((this._Description1 != value))
				{
					this.OnDescription1Changing(value);
					this.SendPropertyChanging();
					this._Description1 = value;
					this.SendPropertyChanged("Description1");
					this.OnDescription1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbbName", DbType="NVarChar(50)")]
		public string AbbName
		{
			get
			{
				return this._AbbName;
			}
			set
			{
				if ((this._AbbName != value))
				{
					this.OnAbbNameChanging(value);
					this.SendPropertyChanging();
					this._AbbName = value;
					this.SendPropertyChanged("AbbName");
					this.OnAbbNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(100)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupType", DbType="NVarChar(50)")]
		public string GroupType
		{
			get
			{
				return this._GroupType;
			}
			set
			{
				if ((this._GroupType != value))
				{
					this.OnGroupTypeChanging(value);
					this.SendPropertyChanging();
					this._GroupType = value;
					this.SendPropertyChanged("GroupType");
					this.OnGroupTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSee", DbType="Bit")]
		public bool IsSee
		{
			get
			{
				return this._IsSee;
			}
			set
			{
				if ((this._IsSee != value))
				{
					this.OnIsSeeChanging(value);
					this.SendPropertyChanging();
					this._IsSee = value;
					this.SendPropertyChanged("IsSee");
					this.OnIsSeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHideUser", DbType="Bit")]
		public bool IsHideUser
		{
			get
			{
				return this._IsHideUser;
			}
			set
			{
				if ((this._IsHideUser != value))
				{
					this.OnIsHideUserChanging(value);
					this.SendPropertyChanging();
					this._IsHideUser = value;
					this.SendPropertyChanged("IsHideUser");
					this.OnIsHideUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Freight", Storage="_Freights", ThisKey="Id", OtherKey="AgentId")]
		public EntitySet<Freight> Freights
		{
			get
			{
				return this._Freights;
			}
			set
			{
				this._Freights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Revenue", Storage="_Revenues", ThisKey="Id", OtherKey="InvAgentId1")]
		public EntitySet<Revenue> Revenues
		{
			get
			{
				return this._Revenues;
			}
			set
			{
				this._Revenues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Revenue1", Storage="_Revenues1", ThisKey="Id", OtherKey="InvAgentId2")]
		public EntitySet<Revenue> Revenues1
		{
			get
			{
				return this._Revenues1;
			}
			set
			{
				this._Revenues1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Shipment", Storage="_Shipments", ThisKey="Id", OtherKey="AgentId")]
		public EntitySet<Shipment> Shipments
		{
			get
			{
				return this._Shipments;
			}
			set
			{
				this._Shipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_SOAInvoice", Storage="_SOAInvoices", ThisKey="Id", OtherKey="AgentId")]
		public EntitySet<SOAInvoice> SOAInvoices
		{
			get
			{
				return this._SOAInvoices;
			}
			set
			{
				this._SOAInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Agent", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Agents.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Agents.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.Agent = this;
		}
		
		private void detach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.Agent = null;
		}
		
		private void attach_Revenues(Revenue entity)
		{
			this.SendPropertyChanging();
			entity.Agent = this;
		}
		
		private void detach_Revenues(Revenue entity)
		{
			this.SendPropertyChanging();
			entity.Agent = null;
		}
		
		private void attach_Revenues1(Revenue entity)
		{
			this.SendPropertyChanging();
			entity.Agent1 = this;
		}
		
		private void detach_Revenues1(Revenue entity)
		{
			this.SendPropertyChanging();
			entity.Agent1 = null;
		}
		
		private void attach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Agent = this;
		}
		
		private void detach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Agent = null;
		}
		
		private void attach_SOAInvoices(SOAInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Agent = this;
		}
		
		private void detach_SOAInvoices(SOAInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Agent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Warehouse")]
	public partial class Warehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _Address;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _Fax;
		
		private string _Description;
		
		private System.Nullable<long> _AreaId;
		
		private System.Nullable<long> _CreatedBy;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<System.DateTime> _DateModify;
		
		private EntitySet<DT81> _DT81s;
		
		private EntitySet<StockCard> _StockCards;
		
		private EntitySet<DT72> _DT72s;
		
		private EntityRef<Area> _Area;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAreaIdChanging(System.Nullable<long> value);
    partial void OnAreaIdChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnDateModifyChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifyChanged();
    #endregion
		
		public Warehouse()
		{
			this._DT81s = new EntitySet<DT81>(new Action<DT81>(this.attach_DT81s), new Action<DT81>(this.detach_DT81s));
			this._StockCards = new EntitySet<StockCard>(new Action<StockCard>(this.attach_StockCards), new Action<StockCard>(this.detach_StockCards));
			this._DT72s = new EntitySet<DT72>(new Action<DT72>(this.attach_DT72s), new Action<DT72>(this.detach_DT72s));
			this._Area = default(EntityRef<Area>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(16)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="BigInt")]
		public System.Nullable<long> AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					if (this._Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
		public System.Nullable<long> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModify", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModify
		{
			get
			{
				return this._DateModify;
			}
			set
			{
				if ((this._DateModify != value))
				{
					this.OnDateModifyChanging(value);
					this.SendPropertyChanging();
					this._DateModify = value;
					this.SendPropertyChanged("DateModify");
					this.OnDateModifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_DT81", Storage="_DT81s", ThisKey="Id", OtherKey="WarehouseID")]
		public EntitySet<DT81> DT81s
		{
			get
			{
				return this._DT81s;
			}
			set
			{
				this._DT81s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_StockCard", Storage="_StockCards", ThisKey="Id", OtherKey="WarehouseID")]
		public EntitySet<StockCard> StockCards
		{
			get
			{
				return this._StockCards;
			}
			set
			{
				this._StockCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_DT72", Storage="_DT72s", ThisKey="Id", OtherKey="WarehouseID")]
		public EntitySet<DT72> DT72s
		{
			get
			{
				return this._DT72s;
			}
			set
			{
				this._DT72s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Warehouse", Storage="_Area", ThisKey="AreaId", OtherKey="Id", IsForeignKey=true)]
		public Area Area
		{
			get
			{
				return this._Area.Entity;
			}
			set
			{
				Area previousValue = this._Area.Entity;
				if (((previousValue != value) 
							|| (this._Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area.Entity = null;
						previousValue.Warehouses.Remove(this);
					}
					this._Area.Entity = value;
					if ((value != null))
					{
						value.Warehouses.Add(this);
						this._AreaId = value.Id;
					}
					else
					{
						this._AreaId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Area");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DT81s(DT81 entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = this;
		}
		
		private void detach_DT81s(DT81 entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = null;
		}
		
		private void attach_StockCards(StockCard entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = this;
		}
		
		private void detach_StockCards(StockCard entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = null;
		}
		
		private void attach_DT72s(DT72 entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = this;
		}
		
		private void detach_DT72s(DT72 entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Area")]
	public partial class Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _AreaAddress;
		
		private string _Description;
		
		private string _CountryName;
		
		private System.Nullable<long> _CountryId;
		
		private System.Nullable<bool> _trading_yn;
		
		private bool _IsHideUser;
		
		private bool _IsSee;
		
		private EntitySet<Warehouse> _Warehouses;
		
		private EntitySet<Freight> _Freights;
		
		private EntitySet<Freight> _Freights1;
		
		private EntitySet<Shipment> _Shipments;
		
		private EntitySet<Shipment> _Shipments1;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAreaAddressChanging(string value);
    partial void OnAreaAddressChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnCountryIdChanging(System.Nullable<long> value);
    partial void OnCountryIdChanged();
    partial void Ontrading_ynChanging(System.Nullable<bool> value);
    partial void Ontrading_ynChanged();
    partial void OnIsHideUserChanging(bool value);
    partial void OnIsHideUserChanged();
    partial void OnIsSeeChanging(bool value);
    partial void OnIsSeeChanged();
    #endregion
		
		public Area()
		{
			this._Warehouses = new EntitySet<Warehouse>(new Action<Warehouse>(this.attach_Warehouses), new Action<Warehouse>(this.detach_Warehouses));
			this._Freights = new EntitySet<Freight>(new Action<Freight>(this.attach_Freights), new Action<Freight>(this.detach_Freights));
			this._Freights1 = new EntitySet<Freight>(new Action<Freight>(this.attach_Freights1), new Action<Freight>(this.detach_Freights1));
			this._Shipments = new EntitySet<Shipment>(new Action<Shipment>(this.attach_Shipments), new Action<Shipment>(this.detach_Shipments));
			this._Shipments1 = new EntitySet<Shipment>(new Action<Shipment>(this.attach_Shipments1), new Action<Shipment>(this.detach_Shipments1));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaAddress", DbType="NVarChar(20)")]
		public string AreaAddress
		{
			get
			{
				return this._AreaAddress;
			}
			set
			{
				if ((this._AreaAddress != value))
				{
					this.OnAreaAddressChanging(value);
					this.SendPropertyChanging();
					this._AreaAddress = value;
					this.SendPropertyChanged("AreaAddress");
					this.OnAreaAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(100)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="BigInt")]
		public System.Nullable<long> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trading_yn", DbType="Bit")]
		public System.Nullable<bool> trading_yn
		{
			get
			{
				return this._trading_yn;
			}
			set
			{
				if ((this._trading_yn != value))
				{
					this.Ontrading_ynChanging(value);
					this.SendPropertyChanging();
					this._trading_yn = value;
					this.SendPropertyChanged("trading_yn");
					this.Ontrading_ynChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHideUser", DbType="Bit")]
		public bool IsHideUser
		{
			get
			{
				return this._IsHideUser;
			}
			set
			{
				if ((this._IsHideUser != value))
				{
					this.OnIsHideUserChanging(value);
					this.SendPropertyChanging();
					this._IsHideUser = value;
					this.SendPropertyChanged("IsHideUser");
					this.OnIsHideUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSee", DbType="Bit")]
		public bool IsSee
		{
			get
			{
				return this._IsSee;
			}
			set
			{
				if ((this._IsSee != value))
				{
					this.OnIsSeeChanging(value);
					this.SendPropertyChanging();
					this._IsSee = value;
					this.SendPropertyChanged("IsSee");
					this.OnIsSeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Warehouse", Storage="_Warehouses", ThisKey="Id", OtherKey="AreaId")]
		public EntitySet<Warehouse> Warehouses
		{
			get
			{
				return this._Warehouses;
			}
			set
			{
				this._Warehouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Freight", Storage="_Freights", ThisKey="Id", OtherKey="DepartureId")]
		public EntitySet<Freight> Freights
		{
			get
			{
				return this._Freights;
			}
			set
			{
				this._Freights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Freight1", Storage="_Freights1", ThisKey="Id", OtherKey="DestinationId")]
		public EntitySet<Freight> Freights1
		{
			get
			{
				return this._Freights1;
			}
			set
			{
				this._Freights1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Shipment", Storage="_Shipments", ThisKey="Id", OtherKey="DepartureId")]
		public EntitySet<Shipment> Shipments
		{
			get
			{
				return this._Shipments;
			}
			set
			{
				this._Shipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Shipment1", Storage="_Shipments1", ThisKey="Id", OtherKey="DestinationId")]
		public EntitySet<Shipment> Shipments1
		{
			get
			{
				return this._Shipments1;
			}
			set
			{
				this._Shipments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Area", Storage="_Country", ThisKey="CountryId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Areas.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Areas.Add(this);
						this._CountryId = value.Id;
					}
					else
					{
						this._CountryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.Area = this;
		}
		
		private void detach_Warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.Area = null;
		}
		
		private void attach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.Area = this;
		}
		
		private void detach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.Area = null;
		}
		
		private void attach_Freights1(Freight entity)
		{
			this.SendPropertyChanging();
			entity.Area1 = this;
		}
		
		private void detach_Freights1(Freight entity)
		{
			this.SendPropertyChanging();
			entity.Area1 = null;
		}
		
		private void attach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Area = this;
		}
		
		private void detach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Area = null;
		}
		
		private void attach_Shipments1(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Area1 = this;
		}
		
		private void detach_Shipments1(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Area1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArriveNotice")]
	public partial class ArriveNotice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _ShipmentId;
		
		private string _CompanyName;
		
		private string _BillNumber;
		
		private string _ShiperName;
		
		private string _ShiperNumber;
		
		private System.Nullable<System.DateTime> _ETA;
		
		private string _PortTo;
		
		private bool _ShipperNote;
		
		private bool _IntroducePaper;
		
		private bool _ArrivePaper;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private string _Tel;
		
		private string _Attn;
		
		private string _ShippingMark;
		
		private string _NoCTNS;
		
		private string _GoodsDescription;
		
		private string _GrossWeight;
		
		private string _CBM;
		
		private string _Notification;
		
		private string _SignatureName;
		
		private bool _Logo;
		
		private bool _Header;
		
		private bool _Footer;
		
		private string _DeliveryDate;
		
		private string _CompanyAddress;
		
		private string _DOAddress;
		
		private string _DOCompanyAddress;
		
		private bool _DOFootera;
		
		private string _DOVNTitlea;
		
		private string _DOVNTitle;
		
		private string _DOENTitle;
		
		private string _ToVN;
		
		private string _ToEN;
		
		private string _AddressOfSign;
		
		private bool _DOLogo;
		
		private bool _DOHeader;
		
		private bool _DOFooter;
		
		private EntitySet<BillDetail> _BillDetails;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnShipmentIdChanging(System.Nullable<long> value);
    partial void OnShipmentIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnBillNumberChanging(string value);
    partial void OnBillNumberChanged();
    partial void OnShiperNameChanging(string value);
    partial void OnShiperNameChanged();
    partial void OnShiperNumberChanging(string value);
    partial void OnShiperNumberChanged();
    partial void OnETAChanging(System.Nullable<System.DateTime> value);
    partial void OnETAChanged();
    partial void OnPortToChanging(string value);
    partial void OnPortToChanged();
    partial void OnShipperNoteChanging(bool value);
    partial void OnShipperNoteChanged();
    partial void OnIntroducePaperChanging(bool value);
    partial void OnIntroducePaperChanged();
    partial void OnArrivePaperChanging(bool value);
    partial void OnArrivePaperChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnAttnChanging(string value);
    partial void OnAttnChanged();
    partial void OnShippingMarkChanging(string value);
    partial void OnShippingMarkChanged();
    partial void OnNoCTNSChanging(string value);
    partial void OnNoCTNSChanged();
    partial void OnGoodsDescriptionChanging(string value);
    partial void OnGoodsDescriptionChanged();
    partial void OnGrossWeightChanging(string value);
    partial void OnGrossWeightChanged();
    partial void OnCBMChanging(string value);
    partial void OnCBMChanged();
    partial void OnNotificationChanging(string value);
    partial void OnNotificationChanged();
    partial void OnSignatureNameChanging(string value);
    partial void OnSignatureNameChanged();
    partial void OnLogoChanging(bool value);
    partial void OnLogoChanged();
    partial void OnHeaderChanging(bool value);
    partial void OnHeaderChanged();
    partial void OnFooterChanging(bool value);
    partial void OnFooterChanged();
    partial void OnDeliveryDateChanging(string value);
    partial void OnDeliveryDateChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnDOAddressChanging(string value);
    partial void OnDOAddressChanged();
    partial void OnDOCompanyAddressChanging(string value);
    partial void OnDOCompanyAddressChanged();
    partial void OnDOFooteraChanging(bool value);
    partial void OnDOFooteraChanged();
    partial void OnDOVNTitleaChanging(string value);
    partial void OnDOVNTitleaChanged();
    partial void OnDOVNTitleChanging(string value);
    partial void OnDOVNTitleChanged();
    partial void OnDOENTitleChanging(string value);
    partial void OnDOENTitleChanged();
    partial void OnToVNChanging(string value);
    partial void OnToVNChanged();
    partial void OnToENChanging(string value);
    partial void OnToENChanged();
    partial void OnAddressOfSignChanging(string value);
    partial void OnAddressOfSignChanged();
    partial void OnDOLogoChanging(bool value);
    partial void OnDOLogoChanged();
    partial void OnDOHeaderChanging(bool value);
    partial void OnDOHeaderChanged();
    partial void OnDOFooterChanging(bool value);
    partial void OnDOFooterChanged();
    #endregion
		
		public ArriveNotice()
		{
			this._BillDetails = new EntitySet<BillDetail>(new Action<BillDetail>(this.attach_BillDetails), new Action<BillDetail>(this.detach_BillDetails));
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt")]
		public System.Nullable<long> ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(500)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNumber", DbType="NVarChar(100)")]
		public string BillNumber
		{
			get
			{
				return this._BillNumber;
			}
			set
			{
				if ((this._BillNumber != value))
				{
					this.OnBillNumberChanging(value);
					this.SendPropertyChanging();
					this._BillNumber = value;
					this.SendPropertyChanged("BillNumber");
					this.OnBillNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiperName", DbType="NVarChar(100)")]
		public string ShiperName
		{
			get
			{
				return this._ShiperName;
			}
			set
			{
				if ((this._ShiperName != value))
				{
					this.OnShiperNameChanging(value);
					this.SendPropertyChanging();
					this._ShiperName = value;
					this.SendPropertyChanged("ShiperName");
					this.OnShiperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiperNumber", DbType="NVarChar(100)")]
		public string ShiperNumber
		{
			get
			{
				return this._ShiperNumber;
			}
			set
			{
				if ((this._ShiperNumber != value))
				{
					this.OnShiperNumberChanging(value);
					this.SendPropertyChanging();
					this._ShiperNumber = value;
					this.SendPropertyChanged("ShiperNumber");
					this.OnShiperNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETA", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETA
		{
			get
			{
				return this._ETA;
			}
			set
			{
				if ((this._ETA != value))
				{
					this.OnETAChanging(value);
					this.SendPropertyChanging();
					this._ETA = value;
					this.SendPropertyChanged("ETA");
					this.OnETAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortTo", DbType="NVarChar(100)")]
		public string PortTo
		{
			get
			{
				return this._PortTo;
			}
			set
			{
				if ((this._PortTo != value))
				{
					this.OnPortToChanging(value);
					this.SendPropertyChanging();
					this._PortTo = value;
					this.SendPropertyChanged("PortTo");
					this.OnPortToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipperNote", DbType="Bit NOT NULL")]
		public bool ShipperNote
		{
			get
			{
				return this._ShipperNote;
			}
			set
			{
				if ((this._ShipperNote != value))
				{
					this.OnShipperNoteChanging(value);
					this.SendPropertyChanging();
					this._ShipperNote = value;
					this.SendPropertyChanged("ShipperNote");
					this.OnShipperNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroducePaper", DbType="Bit NOT NULL")]
		public bool IntroducePaper
		{
			get
			{
				return this._IntroducePaper;
			}
			set
			{
				if ((this._IntroducePaper != value))
				{
					this.OnIntroducePaperChanging(value);
					this.SendPropertyChanging();
					this._IntroducePaper = value;
					this.SendPropertyChanged("IntroducePaper");
					this.OnIntroducePaperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivePaper", DbType="Bit NOT NULL")]
		public bool ArrivePaper
		{
			get
			{
				return this._ArrivePaper;
			}
			set
			{
				if ((this._ArrivePaper != value))
				{
					this.OnArrivePaperChanging(value);
					this.SendPropertyChanging();
					this._ArrivePaper = value;
					this.SendPropertyChanged("ArrivePaper");
					this.OnArrivePaperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attn", DbType="NVarChar(50)")]
		public string Attn
		{
			get
			{
				return this._Attn;
			}
			set
			{
				if ((this._Attn != value))
				{
					this.OnAttnChanging(value);
					this.SendPropertyChanging();
					this._Attn = value;
					this.SendPropertyChanged("Attn");
					this.OnAttnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingMark", DbType="NVarChar(500)")]
		public string ShippingMark
		{
			get
			{
				return this._ShippingMark;
			}
			set
			{
				if ((this._ShippingMark != value))
				{
					this.OnShippingMarkChanging(value);
					this.SendPropertyChanging();
					this._ShippingMark = value;
					this.SendPropertyChanged("ShippingMark");
					this.OnShippingMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoCTNS", DbType="NVarChar(200)")]
		public string NoCTNS
		{
			get
			{
				return this._NoCTNS;
			}
			set
			{
				if ((this._NoCTNS != value))
				{
					this.OnNoCTNSChanging(value);
					this.SendPropertyChanging();
					this._NoCTNS = value;
					this.SendPropertyChanged("NoCTNS");
					this.OnNoCTNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsDescription", DbType="NVarChar(500)")]
		public string GoodsDescription
		{
			get
			{
				return this._GoodsDescription;
			}
			set
			{
				if ((this._GoodsDescription != value))
				{
					this.OnGoodsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GoodsDescription = value;
					this.SendPropertyChanged("GoodsDescription");
					this.OnGoodsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="NVarChar(200)")]
		public string GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CBM", DbType="NVarChar(200)")]
		public string CBM
		{
			get
			{
				return this._CBM;
			}
			set
			{
				if ((this._CBM != value))
				{
					this.OnCBMChanging(value);
					this.SendPropertyChanging();
					this._CBM = value;
					this.SendPropertyChanged("CBM");
					this.OnCBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notification", DbType="NVarChar(1024)")]
		public string Notification
		{
			get
			{
				return this._Notification;
			}
			set
			{
				if ((this._Notification != value))
				{
					this.OnNotificationChanging(value);
					this.SendPropertyChanging();
					this._Notification = value;
					this.SendPropertyChanged("Notification");
					this.OnNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureName", DbType="NVarChar(100)")]
		public string SignatureName
		{
			get
			{
				return this._SignatureName;
			}
			set
			{
				if ((this._SignatureName != value))
				{
					this.OnSignatureNameChanging(value);
					this.SendPropertyChanging();
					this._SignatureName = value;
					this.SendPropertyChanged("SignatureName");
					this.OnSignatureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Bit NOT NULL")]
		public bool Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="Bit NOT NULL")]
		public bool Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Footer", DbType="Bit NOT NULL")]
		public bool Footer
		{
			get
			{
				return this._Footer;
			}
			set
			{
				if ((this._Footer != value))
				{
					this.OnFooterChanging(value);
					this.SendPropertyChanging();
					this._Footer = value;
					this.SendPropertyChanged("Footer");
					this.OnFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="NVarChar(50)")]
		public string DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="NVarChar(200)")]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOAddress", DbType="NVarChar(500)")]
		public string DOAddress
		{
			get
			{
				return this._DOAddress;
			}
			set
			{
				if ((this._DOAddress != value))
				{
					this.OnDOAddressChanging(value);
					this.SendPropertyChanging();
					this._DOAddress = value;
					this.SendPropertyChanged("DOAddress");
					this.OnDOAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCompanyAddress", DbType="NVarChar(200)")]
		public string DOCompanyAddress
		{
			get
			{
				return this._DOCompanyAddress;
			}
			set
			{
				if ((this._DOCompanyAddress != value))
				{
					this.OnDOCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._DOCompanyAddress = value;
					this.SendPropertyChanged("DOCompanyAddress");
					this.OnDOCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOFootera", DbType="Bit NOT NULL")]
		public bool DOFootera
		{
			get
			{
				return this._DOFootera;
			}
			set
			{
				if ((this._DOFootera != value))
				{
					this.OnDOFooteraChanging(value);
					this.SendPropertyChanging();
					this._DOFootera = value;
					this.SendPropertyChanged("DOFootera");
					this.OnDOFooteraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOVNTitlea", DbType="NVarChar(255)")]
		public string DOVNTitlea
		{
			get
			{
				return this._DOVNTitlea;
			}
			set
			{
				if ((this._DOVNTitlea != value))
				{
					this.OnDOVNTitleaChanging(value);
					this.SendPropertyChanging();
					this._DOVNTitlea = value;
					this.SendPropertyChanged("DOVNTitlea");
					this.OnDOVNTitleaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOVNTitle", DbType="NVarChar(255)")]
		public string DOVNTitle
		{
			get
			{
				return this._DOVNTitle;
			}
			set
			{
				if ((this._DOVNTitle != value))
				{
					this.OnDOVNTitleChanging(value);
					this.SendPropertyChanging();
					this._DOVNTitle = value;
					this.SendPropertyChanged("DOVNTitle");
					this.OnDOVNTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOENTitle", DbType="NVarChar(255)")]
		public string DOENTitle
		{
			get
			{
				return this._DOENTitle;
			}
			set
			{
				if ((this._DOENTitle != value))
				{
					this.OnDOENTitleChanging(value);
					this.SendPropertyChanging();
					this._DOENTitle = value;
					this.SendPropertyChanged("DOENTitle");
					this.OnDOENTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToVN", DbType="NVarChar(255)")]
		public string ToVN
		{
			get
			{
				return this._ToVN;
			}
			set
			{
				if ((this._ToVN != value))
				{
					this.OnToVNChanging(value);
					this.SendPropertyChanging();
					this._ToVN = value;
					this.SendPropertyChanged("ToVN");
					this.OnToVNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToEN", DbType="NVarChar(255)")]
		public string ToEN
		{
			get
			{
				return this._ToEN;
			}
			set
			{
				if ((this._ToEN != value))
				{
					this.OnToENChanging(value);
					this.SendPropertyChanging();
					this._ToEN = value;
					this.SendPropertyChanged("ToEN");
					this.OnToENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressOfSign", DbType="NVarChar(255)")]
		public string AddressOfSign
		{
			get
			{
				return this._AddressOfSign;
			}
			set
			{
				if ((this._AddressOfSign != value))
				{
					this.OnAddressOfSignChanging(value);
					this.SendPropertyChanging();
					this._AddressOfSign = value;
					this.SendPropertyChanged("AddressOfSign");
					this.OnAddressOfSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOLogo", DbType="Bit NOT NULL")]
		public bool DOLogo
		{
			get
			{
				return this._DOLogo;
			}
			set
			{
				if ((this._DOLogo != value))
				{
					this.OnDOLogoChanging(value);
					this.SendPropertyChanging();
					this._DOLogo = value;
					this.SendPropertyChanged("DOLogo");
					this.OnDOLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOHeader", DbType="Bit NOT NULL")]
		public bool DOHeader
		{
			get
			{
				return this._DOHeader;
			}
			set
			{
				if ((this._DOHeader != value))
				{
					this.OnDOHeaderChanging(value);
					this.SendPropertyChanging();
					this._DOHeader = value;
					this.SendPropertyChanged("DOHeader");
					this.OnDOHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOFooter", DbType="Bit NOT NULL")]
		public bool DOFooter
		{
			get
			{
				return this._DOFooter;
			}
			set
			{
				if ((this._DOFooter != value))
				{
					this.OnDOFooterChanging(value);
					this.SendPropertyChanging();
					this._DOFooter = value;
					this.SendPropertyChanged("DOFooter");
					this.OnDOFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArriveNotice_BillDetail", Storage="_BillDetails", ThisKey="Id", OtherKey="ArriveNoticeId")]
		public EntitySet<BillDetail> BillDetails
		{
			get
			{
				return this._BillDetails;
			}
			set
			{
				this._BillDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_ArriveNotice", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.ArriveNotices.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.ArriveNotices.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDetails(BillDetail entity)
		{
			this.SendPropertyChanging();
			entity.ArriveNotice = this;
		}
		
		private void detach_BillDetails(BillDetail entity)
		{
			this.SendPropertyChanging();
			entity.ArriveNotice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorLetter")]
	public partial class AuthorLetter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ShipmentId;
		
		private string _DearTo;
		
		private string _BenA;
		
		private string _BenB;
		
		private string _MAWBNo;
		
		private string _HAWNNo;
		
		private string _Flight;
		
		private string _Weight;
		
		private string _NoOfPackage;
		
		private string _DescriptionOfGoods;
		
		private string _FlightDate;
		
		private string _CompanyAddress;
		
		private string _PublicTitle;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnDearToChanging(string value);
    partial void OnDearToChanged();
    partial void OnBenAChanging(string value);
    partial void OnBenAChanged();
    partial void OnBenBChanging(string value);
    partial void OnBenBChanged();
    partial void OnMAWBNoChanging(string value);
    partial void OnMAWBNoChanged();
    partial void OnHAWNNoChanging(string value);
    partial void OnHAWNNoChanged();
    partial void OnFlightChanging(string value);
    partial void OnFlightChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnNoOfPackageChanging(string value);
    partial void OnNoOfPackageChanged();
    partial void OnDescriptionOfGoodsChanging(string value);
    partial void OnDescriptionOfGoodsChanged();
    partial void OnFlightDateChanging(string value);
    partial void OnFlightDateChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnPublicTitleChanging(string value);
    partial void OnPublicTitleChanged();
    #endregion
		
		public AuthorLetter()
		{
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DearTo", DbType="NVarChar(4000)")]
		public string DearTo
		{
			get
			{
				return this._DearTo;
			}
			set
			{
				if ((this._DearTo != value))
				{
					this.OnDearToChanging(value);
					this.SendPropertyChanging();
					this._DearTo = value;
					this.SendPropertyChanged("DearTo");
					this.OnDearToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenA", DbType="NVarChar(4000)")]
		public string BenA
		{
			get
			{
				return this._BenA;
			}
			set
			{
				if ((this._BenA != value))
				{
					this.OnBenAChanging(value);
					this.SendPropertyChanging();
					this._BenA = value;
					this.SendPropertyChanged("BenA");
					this.OnBenAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenB", DbType="NVarChar(4000)")]
		public string BenB
		{
			get
			{
				return this._BenB;
			}
			set
			{
				if ((this._BenB != value))
				{
					this.OnBenBChanging(value);
					this.SendPropertyChanging();
					this._BenB = value;
					this.SendPropertyChanged("BenB");
					this.OnBenBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAWBNo", DbType="NVarChar(50)")]
		public string MAWBNo
		{
			get
			{
				return this._MAWBNo;
			}
			set
			{
				if ((this._MAWBNo != value))
				{
					this.OnMAWBNoChanging(value);
					this.SendPropertyChanging();
					this._MAWBNo = value;
					this.SendPropertyChanged("MAWBNo");
					this.OnMAWBNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAWNNo", DbType="NVarChar(50)")]
		public string HAWNNo
		{
			get
			{
				return this._HAWNNo;
			}
			set
			{
				if ((this._HAWNNo != value))
				{
					this.OnHAWNNoChanging(value);
					this.SendPropertyChanging();
					this._HAWNNo = value;
					this.SendPropertyChanged("HAWNNo");
					this.OnHAWNNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flight", DbType="NVarChar(50)")]
		public string Flight
		{
			get
			{
				return this._Flight;
			}
			set
			{
				if ((this._Flight != value))
				{
					this.OnFlightChanging(value);
					this.SendPropertyChanging();
					this._Flight = value;
					this.SendPropertyChanged("Flight");
					this.OnFlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfPackage", DbType="NVarChar(50)")]
		public string NoOfPackage
		{
			get
			{
				return this._NoOfPackage;
			}
			set
			{
				if ((this._NoOfPackage != value))
				{
					this.OnNoOfPackageChanging(value);
					this.SendPropertyChanging();
					this._NoOfPackage = value;
					this.SendPropertyChanged("NoOfPackage");
					this.OnNoOfPackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionOfGoods", DbType="NVarChar(200)")]
		public string DescriptionOfGoods
		{
			get
			{
				return this._DescriptionOfGoods;
			}
			set
			{
				if ((this._DescriptionOfGoods != value))
				{
					this.OnDescriptionOfGoodsChanging(value);
					this.SendPropertyChanging();
					this._DescriptionOfGoods = value;
					this.SendPropertyChanged("DescriptionOfGoods");
					this.OnDescriptionOfGoodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightDate", DbType="NVarChar(50)")]
		public string FlightDate
		{
			get
			{
				return this._FlightDate;
			}
			set
			{
				if ((this._FlightDate != value))
				{
					this.OnFlightDateChanging(value);
					this.SendPropertyChanging();
					this._FlightDate = value;
					this.SendPropertyChanged("FlightDate");
					this.OnFlightDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="NVarChar(200)")]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicTitle", DbType="NVarChar(500)")]
		public string PublicTitle
		{
			get
			{
				return this._PublicTitle;
			}
			set
			{
				if ((this._PublicTitle != value))
				{
					this.OnPublicTitleChanging(value);
					this.SendPropertyChanging();
					this._PublicTitle = value;
					this.SendPropertyChanged("PublicTitle");
					this.OnPublicTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_AuthorLetter", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.AuthorLetters.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.AuthorLetters.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDetail")]
	public partial class BillDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _ArriveNoticeId;
		
		private System.Nullable<long> _BookingNoteId;
		
		private string _ShippingMark;
		
		private string _NoCTNS;
		
		private string _GoodsDescription;
		
		private string _GrossWeight;
		
		private string _CBM;
		
		private EntityRef<ArriveNotice> _ArriveNotice;
		
		private EntityRef<BookingNote> _BookingNote;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnArriveNoticeIdChanging(System.Nullable<long> value);
    partial void OnArriveNoticeIdChanged();
    partial void OnBookingNoteIdChanging(System.Nullable<long> value);
    partial void OnBookingNoteIdChanged();
    partial void OnShippingMarkChanging(string value);
    partial void OnShippingMarkChanged();
    partial void OnNoCTNSChanging(string value);
    partial void OnNoCTNSChanged();
    partial void OnGoodsDescriptionChanging(string value);
    partial void OnGoodsDescriptionChanged();
    partial void OnGrossWeightChanging(string value);
    partial void OnGrossWeightChanged();
    partial void OnCBMChanging(string value);
    partial void OnCBMChanged();
    #endregion
		
		public BillDetail()
		{
			this._ArriveNotice = default(EntityRef<ArriveNotice>);
			this._BookingNote = default(EntityRef<BookingNote>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArriveNoticeId", DbType="BigInt")]
		public System.Nullable<long> ArriveNoticeId
		{
			get
			{
				return this._ArriveNoticeId;
			}
			set
			{
				if ((this._ArriveNoticeId != value))
				{
					if (this._ArriveNotice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArriveNoticeIdChanging(value);
					this.SendPropertyChanging();
					this._ArriveNoticeId = value;
					this.SendPropertyChanged("ArriveNoticeId");
					this.OnArriveNoticeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingNoteId", DbType="BigInt")]
		public System.Nullable<long> BookingNoteId
		{
			get
			{
				return this._BookingNoteId;
			}
			set
			{
				if ((this._BookingNoteId != value))
				{
					if (this._BookingNote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingNoteIdChanging(value);
					this.SendPropertyChanging();
					this._BookingNoteId = value;
					this.SendPropertyChanged("BookingNoteId");
					this.OnBookingNoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingMark", DbType="NVarChar(100)")]
		public string ShippingMark
		{
			get
			{
				return this._ShippingMark;
			}
			set
			{
				if ((this._ShippingMark != value))
				{
					this.OnShippingMarkChanging(value);
					this.SendPropertyChanging();
					this._ShippingMark = value;
					this.SendPropertyChanged("ShippingMark");
					this.OnShippingMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoCTNS", DbType="NVarChar(100)")]
		public string NoCTNS
		{
			get
			{
				return this._NoCTNS;
			}
			set
			{
				if ((this._NoCTNS != value))
				{
					this.OnNoCTNSChanging(value);
					this.SendPropertyChanging();
					this._NoCTNS = value;
					this.SendPropertyChanged("NoCTNS");
					this.OnNoCTNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsDescription", DbType="NVarChar(100)")]
		public string GoodsDescription
		{
			get
			{
				return this._GoodsDescription;
			}
			set
			{
				if ((this._GoodsDescription != value))
				{
					this.OnGoodsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GoodsDescription = value;
					this.SendPropertyChanged("GoodsDescription");
					this.OnGoodsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="NVarChar(100)")]
		public string GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CBM", DbType="NVarChar(100)")]
		public string CBM
		{
			get
			{
				return this._CBM;
			}
			set
			{
				if ((this._CBM != value))
				{
					this.OnCBMChanging(value);
					this.SendPropertyChanging();
					this._CBM = value;
					this.SendPropertyChanged("CBM");
					this.OnCBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArriveNotice_BillDetail", Storage="_ArriveNotice", ThisKey="ArriveNoticeId", OtherKey="Id", IsForeignKey=true)]
		public ArriveNotice ArriveNotice
		{
			get
			{
				return this._ArriveNotice.Entity;
			}
			set
			{
				ArriveNotice previousValue = this._ArriveNotice.Entity;
				if (((previousValue != value) 
							|| (this._ArriveNotice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArriveNotice.Entity = null;
						previousValue.BillDetails.Remove(this);
					}
					this._ArriveNotice.Entity = value;
					if ((value != null))
					{
						value.BillDetails.Add(this);
						this._ArriveNoticeId = value.Id;
					}
					else
					{
						this._ArriveNoticeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ArriveNotice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingNote_BillDetail", Storage="_BookingNote", ThisKey="BookingNoteId", OtherKey="Id", IsForeignKey=true)]
		public BookingNote BookingNote
		{
			get
			{
				return this._BookingNote.Entity;
			}
			set
			{
				BookingNote previousValue = this._BookingNote.Entity;
				if (((previousValue != value) 
							|| (this._BookingNote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingNote.Entity = null;
						previousValue.BillDetails.Remove(this);
					}
					this._BookingNote.Entity = value;
					if ((value != null))
					{
						value.BillDetails.Add(this);
						this._BookingNoteId = value.Id;
					}
					else
					{
						this._BookingNoteId = default(Nullable<long>);
					}
					this.SendPropertyChanged("BookingNote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillLanding")]
	public partial class BillLanding : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ShipmentId;
		
		private string _PhipperName;
		
		private string _ConsignedOrder;
		
		private string _NotifyAddress;
		
		private string _PlaceOfReceipt;
		
		private string _OceanVessel;
		
		private string _VoyNo;
		
		private string _BillLandingNo;
		
		private string _ForRelease;
		
		private string _PortLoading;
		
		private string _PortDischarge;
		
		private string _PlaceDelivery;
		
		private string _MarksNos;
		
		private string _QuanlityDescription;
		
		private string _GrossWeight;
		
		private string _Measurement;
		
		private string _FreightCharge;
		
		private string _PlaceDateIssue;
		
		private string _FreightPayable;
		
		private string _NumberOriginal;
		
		private string _BillTo;
		
		private string _BKG;
		
		private string _FinalDestination;
		
		private string _StampAuthorized;
		
		private bool _Logo;
		
		private bool _Header;
		
		private bool _Footer;
		
		private string _Original;
		
		private string _BLComAddress;
		
		private string _BillFrom;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnPhipperNameChanging(string value);
    partial void OnPhipperNameChanged();
    partial void OnConsignedOrderChanging(string value);
    partial void OnConsignedOrderChanged();
    partial void OnNotifyAddressChanging(string value);
    partial void OnNotifyAddressChanged();
    partial void OnPlaceOfReceiptChanging(string value);
    partial void OnPlaceOfReceiptChanged();
    partial void OnOceanVesselChanging(string value);
    partial void OnOceanVesselChanged();
    partial void OnVoyNoChanging(string value);
    partial void OnVoyNoChanged();
    partial void OnBillLandingNoChanging(string value);
    partial void OnBillLandingNoChanged();
    partial void OnForReleaseChanging(string value);
    partial void OnForReleaseChanged();
    partial void OnPortLoadingChanging(string value);
    partial void OnPortLoadingChanged();
    partial void OnPortDischargeChanging(string value);
    partial void OnPortDischargeChanged();
    partial void OnPlaceDeliveryChanging(string value);
    partial void OnPlaceDeliveryChanged();
    partial void OnMarksNosChanging(string value);
    partial void OnMarksNosChanged();
    partial void OnQuanlityDescriptionChanging(string value);
    partial void OnQuanlityDescriptionChanged();
    partial void OnGrossWeightChanging(string value);
    partial void OnGrossWeightChanged();
    partial void OnMeasurementChanging(string value);
    partial void OnMeasurementChanged();
    partial void OnFreightChargeChanging(string value);
    partial void OnFreightChargeChanged();
    partial void OnPlaceDateIssueChanging(string value);
    partial void OnPlaceDateIssueChanged();
    partial void OnFreightPayableChanging(string value);
    partial void OnFreightPayableChanged();
    partial void OnNumberOriginalChanging(string value);
    partial void OnNumberOriginalChanged();
    partial void OnBillToChanging(string value);
    partial void OnBillToChanged();
    partial void OnBKGChanging(string value);
    partial void OnBKGChanged();
    partial void OnFinalDestinationChanging(string value);
    partial void OnFinalDestinationChanged();
    partial void OnStampAuthorizedChanging(string value);
    partial void OnStampAuthorizedChanged();
    partial void OnLogoChanging(bool value);
    partial void OnLogoChanged();
    partial void OnHeaderChanging(bool value);
    partial void OnHeaderChanged();
    partial void OnFooterChanging(bool value);
    partial void OnFooterChanged();
    partial void OnOriginalChanging(string value);
    partial void OnOriginalChanged();
    partial void OnBLComAddressChanging(string value);
    partial void OnBLComAddressChanged();
    partial void OnBillFromChanging(string value);
    partial void OnBillFromChanged();
    #endregion
		
		public BillLanding()
		{
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhipperName", DbType="NVarChar(500)")]
		public string PhipperName
		{
			get
			{
				return this._PhipperName;
			}
			set
			{
				if ((this._PhipperName != value))
				{
					this.OnPhipperNameChanging(value);
					this.SendPropertyChanging();
					this._PhipperName = value;
					this.SendPropertyChanged("PhipperName");
					this.OnPhipperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignedOrder", DbType="NVarChar(500)")]
		public string ConsignedOrder
		{
			get
			{
				return this._ConsignedOrder;
			}
			set
			{
				if ((this._ConsignedOrder != value))
				{
					this.OnConsignedOrderChanging(value);
					this.SendPropertyChanging();
					this._ConsignedOrder = value;
					this.SendPropertyChanged("ConsignedOrder");
					this.OnConsignedOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyAddress", DbType="NVarChar(500)")]
		public string NotifyAddress
		{
			get
			{
				return this._NotifyAddress;
			}
			set
			{
				if ((this._NotifyAddress != value))
				{
					this.OnNotifyAddressChanging(value);
					this.SendPropertyChanging();
					this._NotifyAddress = value;
					this.SendPropertyChanged("NotifyAddress");
					this.OnNotifyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfReceipt", DbType="NVarChar(200)")]
		public string PlaceOfReceipt
		{
			get
			{
				return this._PlaceOfReceipt;
			}
			set
			{
				if ((this._PlaceOfReceipt != value))
				{
					this.OnPlaceOfReceiptChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfReceipt = value;
					this.SendPropertyChanged("PlaceOfReceipt");
					this.OnPlaceOfReceiptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OceanVessel", DbType="NVarChar(200)")]
		public string OceanVessel
		{
			get
			{
				return this._OceanVessel;
			}
			set
			{
				if ((this._OceanVessel != value))
				{
					this.OnOceanVesselChanging(value);
					this.SendPropertyChanging();
					this._OceanVessel = value;
					this.SendPropertyChanged("OceanVessel");
					this.OnOceanVesselChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoyNo", DbType="NVarChar(200)")]
		public string VoyNo
		{
			get
			{
				return this._VoyNo;
			}
			set
			{
				if ((this._VoyNo != value))
				{
					this.OnVoyNoChanging(value);
					this.SendPropertyChanging();
					this._VoyNo = value;
					this.SendPropertyChanged("VoyNo");
					this.OnVoyNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillLandingNo", DbType="NVarChar(200)")]
		public string BillLandingNo
		{
			get
			{
				return this._BillLandingNo;
			}
			set
			{
				if ((this._BillLandingNo != value))
				{
					this.OnBillLandingNoChanging(value);
					this.SendPropertyChanging();
					this._BillLandingNo = value;
					this.SendPropertyChanged("BillLandingNo");
					this.OnBillLandingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForRelease", DbType="NVarChar(500)")]
		public string ForRelease
		{
			get
			{
				return this._ForRelease;
			}
			set
			{
				if ((this._ForRelease != value))
				{
					this.OnForReleaseChanging(value);
					this.SendPropertyChanging();
					this._ForRelease = value;
					this.SendPropertyChanged("ForRelease");
					this.OnForReleaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortLoading", DbType="NVarChar(200)")]
		public string PortLoading
		{
			get
			{
				return this._PortLoading;
			}
			set
			{
				if ((this._PortLoading != value))
				{
					this.OnPortLoadingChanging(value);
					this.SendPropertyChanging();
					this._PortLoading = value;
					this.SendPropertyChanged("PortLoading");
					this.OnPortLoadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortDischarge", DbType="NVarChar(200)")]
		public string PortDischarge
		{
			get
			{
				return this._PortDischarge;
			}
			set
			{
				if ((this._PortDischarge != value))
				{
					this.OnPortDischargeChanging(value);
					this.SendPropertyChanging();
					this._PortDischarge = value;
					this.SendPropertyChanged("PortDischarge");
					this.OnPortDischargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceDelivery", DbType="NVarChar(200)")]
		public string PlaceDelivery
		{
			get
			{
				return this._PlaceDelivery;
			}
			set
			{
				if ((this._PlaceDelivery != value))
				{
					this.OnPlaceDeliveryChanging(value);
					this.SendPropertyChanging();
					this._PlaceDelivery = value;
					this.SendPropertyChanged("PlaceDelivery");
					this.OnPlaceDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarksNos", DbType="NVarChar(500)")]
		public string MarksNos
		{
			get
			{
				return this._MarksNos;
			}
			set
			{
				if ((this._MarksNos != value))
				{
					this.OnMarksNosChanging(value);
					this.SendPropertyChanging();
					this._MarksNos = value;
					this.SendPropertyChanged("MarksNos");
					this.OnMarksNosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanlityDescription", DbType="NVarChar(900)")]
		public string QuanlityDescription
		{
			get
			{
				return this._QuanlityDescription;
			}
			set
			{
				if ((this._QuanlityDescription != value))
				{
					this.OnQuanlityDescriptionChanging(value);
					this.SendPropertyChanging();
					this._QuanlityDescription = value;
					this.SendPropertyChanged("QuanlityDescription");
					this.OnQuanlityDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="NVarChar(200)")]
		public string GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measurement", DbType="NVarChar(200)")]
		public string Measurement
		{
			get
			{
				return this._Measurement;
			}
			set
			{
				if ((this._Measurement != value))
				{
					this.OnMeasurementChanging(value);
					this.SendPropertyChanging();
					this._Measurement = value;
					this.SendPropertyChanged("Measurement");
					this.OnMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreightCharge", DbType="NVarChar(200)")]
		public string FreightCharge
		{
			get
			{
				return this._FreightCharge;
			}
			set
			{
				if ((this._FreightCharge != value))
				{
					this.OnFreightChargeChanging(value);
					this.SendPropertyChanging();
					this._FreightCharge = value;
					this.SendPropertyChanged("FreightCharge");
					this.OnFreightChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceDateIssue", DbType="NVarChar(200)")]
		public string PlaceDateIssue
		{
			get
			{
				return this._PlaceDateIssue;
			}
			set
			{
				if ((this._PlaceDateIssue != value))
				{
					this.OnPlaceDateIssueChanging(value);
					this.SendPropertyChanging();
					this._PlaceDateIssue = value;
					this.SendPropertyChanged("PlaceDateIssue");
					this.OnPlaceDateIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreightPayable", DbType="NVarChar(200)")]
		public string FreightPayable
		{
			get
			{
				return this._FreightPayable;
			}
			set
			{
				if ((this._FreightPayable != value))
				{
					this.OnFreightPayableChanging(value);
					this.SendPropertyChanging();
					this._FreightPayable = value;
					this.SendPropertyChanged("FreightPayable");
					this.OnFreightPayableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOriginal", DbType="NVarChar(200)")]
		public string NumberOriginal
		{
			get
			{
				return this._NumberOriginal;
			}
			set
			{
				if ((this._NumberOriginal != value))
				{
					this.OnNumberOriginalChanging(value);
					this.SendPropertyChanging();
					this._NumberOriginal = value;
					this.SendPropertyChanged("NumberOriginal");
					this.OnNumberOriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillTo", DbType="NVarChar(200)")]
		public string BillTo
		{
			get
			{
				return this._BillTo;
			}
			set
			{
				if ((this._BillTo != value))
				{
					this.OnBillToChanging(value);
					this.SendPropertyChanging();
					this._BillTo = value;
					this.SendPropertyChanged("BillTo");
					this.OnBillToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BKG", DbType="NVarChar(200)")]
		public string BKG
		{
			get
			{
				return this._BKG;
			}
			set
			{
				if ((this._BKG != value))
				{
					this.OnBKGChanging(value);
					this.SendPropertyChanging();
					this._BKG = value;
					this.SendPropertyChanged("BKG");
					this.OnBKGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDestination", DbType="NVarChar(100)")]
		public string FinalDestination
		{
			get
			{
				return this._FinalDestination;
			}
			set
			{
				if ((this._FinalDestination != value))
				{
					this.OnFinalDestinationChanging(value);
					this.SendPropertyChanging();
					this._FinalDestination = value;
					this.SendPropertyChanged("FinalDestination");
					this.OnFinalDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StampAuthorized", DbType="NVarChar(50)")]
		public string StampAuthorized
		{
			get
			{
				return this._StampAuthorized;
			}
			set
			{
				if ((this._StampAuthorized != value))
				{
					this.OnStampAuthorizedChanging(value);
					this.SendPropertyChanging();
					this._StampAuthorized = value;
					this.SendPropertyChanged("StampAuthorized");
					this.OnStampAuthorizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Bit NOT NULL")]
		public bool Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="Bit NOT NULL")]
		public bool Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Footer", DbType="Bit NOT NULL")]
		public bool Footer
		{
			get
			{
				return this._Footer;
			}
			set
			{
				if ((this._Footer != value))
				{
					this.OnFooterChanging(value);
					this.SendPropertyChanging();
					this._Footer = value;
					this.SendPropertyChanged("Footer");
					this.OnFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Original", DbType="NVarChar(200)")]
		public string Original
		{
			get
			{
				return this._Original;
			}
			set
			{
				if ((this._Original != value))
				{
					this.OnOriginalChanging(value);
					this.SendPropertyChanging();
					this._Original = value;
					this.SendPropertyChanged("Original");
					this.OnOriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLComAddress", DbType="NVarChar(500)")]
		public string BLComAddress
		{
			get
			{
				return this._BLComAddress;
			}
			set
			{
				if ((this._BLComAddress != value))
				{
					this.OnBLComAddressChanging(value);
					this.SendPropertyChanging();
					this._BLComAddress = value;
					this.SendPropertyChanged("BLComAddress");
					this.OnBLComAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillFrom", DbType="NVarChar(100)")]
		public string BillFrom
		{
			get
			{
				return this._BillFrom;
			}
			set
			{
				if ((this._BillFrom != value))
				{
					this.OnBillFromChanging(value);
					this.SendPropertyChanging();
					this._BillFrom = value;
					this.SendPropertyChanged("BillFrom");
					this.OnBillFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_BillLanding", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.BillLandings.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.BillLandings.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingConfirm")]
	public partial class BookingConfirm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ShipmentId;
		
		private string _RefNo;
		
		private string _BookDate;
		
		private string _BookTo;
		
		private string _BookFrom;
		
		private string _Destination;
		
		private string _Commodity;
		
		private string _Quantity;
		
		private string _FlightDate;
		
		private string _LoadingDate;
		
		private string _ClosingDate;
		
		private string _AirportCharge;
		
		private string _XPray;
		
		private string _AWBFee;
		
		private string _HandingCharge;
		
		private string _Contact;
		
		private string _AuthoWord;
		
		private string _AMSCharge;
		
		private string _FlyNo;
		
		private string _Wearehouse;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnRefNoChanging(string value);
    partial void OnRefNoChanged();
    partial void OnBookDateChanging(string value);
    partial void OnBookDateChanged();
    partial void OnBookToChanging(string value);
    partial void OnBookToChanged();
    partial void OnBookFromChanging(string value);
    partial void OnBookFromChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnCommodityChanging(string value);
    partial void OnCommodityChanged();
    partial void OnQuantityChanging(string value);
    partial void OnQuantityChanged();
    partial void OnFlightDateChanging(string value);
    partial void OnFlightDateChanged();
    partial void OnLoadingDateChanging(string value);
    partial void OnLoadingDateChanged();
    partial void OnClosingDateChanging(string value);
    partial void OnClosingDateChanged();
    partial void OnAirportChargeChanging(string value);
    partial void OnAirportChargeChanged();
    partial void OnXPrayChanging(string value);
    partial void OnXPrayChanged();
    partial void OnAWBFeeChanging(string value);
    partial void OnAWBFeeChanged();
    partial void OnHandingChargeChanging(string value);
    partial void OnHandingChargeChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnAuthoWordChanging(string value);
    partial void OnAuthoWordChanged();
    partial void OnAMSChargeChanging(string value);
    partial void OnAMSChargeChanged();
    partial void OnFlyNoChanging(string value);
    partial void OnFlyNoChanged();
    partial void OnWearehouseChanging(string value);
    partial void OnWearehouseChanged();
    #endregion
		
		public BookingConfirm()
		{
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefNo", DbType="NVarChar(50)")]
		public string RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if ((this._RefNo != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDate", DbType="NVarChar(50)")]
		public string BookDate
		{
			get
			{
				return this._BookDate;
			}
			set
			{
				if ((this._BookDate != value))
				{
					this.OnBookDateChanging(value);
					this.SendPropertyChanging();
					this._BookDate = value;
					this.SendPropertyChanged("BookDate");
					this.OnBookDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookTo", DbType="NVarChar(500)")]
		public string BookTo
		{
			get
			{
				return this._BookTo;
			}
			set
			{
				if ((this._BookTo != value))
				{
					this.OnBookToChanging(value);
					this.SendPropertyChanging();
					this._BookTo = value;
					this.SendPropertyChanged("BookTo");
					this.OnBookToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookFrom", DbType="NVarChar(500)")]
		public string BookFrom
		{
			get
			{
				return this._BookFrom;
			}
			set
			{
				if ((this._BookFrom != value))
				{
					this.OnBookFromChanging(value);
					this.SendPropertyChanging();
					this._BookFrom = value;
					this.SendPropertyChanged("BookFrom");
					this.OnBookFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(50)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity", DbType="NVarChar(50)")]
		public string Commodity
		{
			get
			{
				return this._Commodity;
			}
			set
			{
				if ((this._Commodity != value))
				{
					this.OnCommodityChanging(value);
					this.SendPropertyChanging();
					this._Commodity = value;
					this.SendPropertyChanged("Commodity");
					this.OnCommodityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="NVarChar(60)")]
		public string Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightDate", DbType="NVarChar(50)")]
		public string FlightDate
		{
			get
			{
				return this._FlightDate;
			}
			set
			{
				if ((this._FlightDate != value))
				{
					this.OnFlightDateChanging(value);
					this.SendPropertyChanging();
					this._FlightDate = value;
					this.SendPropertyChanged("FlightDate");
					this.OnFlightDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadingDate", DbType="NVarChar(50)")]
		public string LoadingDate
		{
			get
			{
				return this._LoadingDate;
			}
			set
			{
				if ((this._LoadingDate != value))
				{
					this.OnLoadingDateChanging(value);
					this.SendPropertyChanging();
					this._LoadingDate = value;
					this.SendPropertyChanged("LoadingDate");
					this.OnLoadingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingDate", DbType="NVarChar(50)")]
		public string ClosingDate
		{
			get
			{
				return this._ClosingDate;
			}
			set
			{
				if ((this._ClosingDate != value))
				{
					this.OnClosingDateChanging(value);
					this.SendPropertyChanging();
					this._ClosingDate = value;
					this.SendPropertyChanged("ClosingDate");
					this.OnClosingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirportCharge", DbType="NVarChar(50)")]
		public string AirportCharge
		{
			get
			{
				return this._AirportCharge;
			}
			set
			{
				if ((this._AirportCharge != value))
				{
					this.OnAirportChargeChanging(value);
					this.SendPropertyChanging();
					this._AirportCharge = value;
					this.SendPropertyChanged("AirportCharge");
					this.OnAirportChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XPray", DbType="NVarChar(50)")]
		public string XPray
		{
			get
			{
				return this._XPray;
			}
			set
			{
				if ((this._XPray != value))
				{
					this.OnXPrayChanging(value);
					this.SendPropertyChanging();
					this._XPray = value;
					this.SendPropertyChanged("XPray");
					this.OnXPrayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AWBFee", DbType="NVarChar(50)")]
		public string AWBFee
		{
			get
			{
				return this._AWBFee;
			}
			set
			{
				if ((this._AWBFee != value))
				{
					this.OnAWBFeeChanging(value);
					this.SendPropertyChanging();
					this._AWBFee = value;
					this.SendPropertyChanged("AWBFee");
					this.OnAWBFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandingCharge", DbType="NVarChar(50)")]
		public string HandingCharge
		{
			get
			{
				return this._HandingCharge;
			}
			set
			{
				if ((this._HandingCharge != value))
				{
					this.OnHandingChargeChanging(value);
					this.SendPropertyChanging();
					this._HandingCharge = value;
					this.SendPropertyChanged("HandingCharge");
					this.OnHandingChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(200)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthoWord", DbType="NVarChar(100)")]
		public string AuthoWord
		{
			get
			{
				return this._AuthoWord;
			}
			set
			{
				if ((this._AuthoWord != value))
				{
					this.OnAuthoWordChanging(value);
					this.SendPropertyChanging();
					this._AuthoWord = value;
					this.SendPropertyChanged("AuthoWord");
					this.OnAuthoWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMSCharge", DbType="NVarChar(100)")]
		public string AMSCharge
		{
			get
			{
				return this._AMSCharge;
			}
			set
			{
				if ((this._AMSCharge != value))
				{
					this.OnAMSChargeChanging(value);
					this.SendPropertyChanging();
					this._AMSCharge = value;
					this.SendPropertyChanged("AMSCharge");
					this.OnAMSChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlyNo", DbType="NVarChar(255)")]
		public string FlyNo
		{
			get
			{
				return this._FlyNo;
			}
			set
			{
				if ((this._FlyNo != value))
				{
					this.OnFlyNoChanging(value);
					this.SendPropertyChanging();
					this._FlyNo = value;
					this.SendPropertyChanged("FlyNo");
					this.OnFlyNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wearehouse", DbType="NVarChar(255)")]
		public string Wearehouse
		{
			get
			{
				return this._Wearehouse;
			}
			set
			{
				if ((this._Wearehouse != value))
				{
					this.OnWearehouseChanging(value);
					this.SendPropertyChanging();
					this._Wearehouse = value;
					this.SendPropertyChanged("Wearehouse");
					this.OnWearehouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_BookingConfirm", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.BookingConfirms.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.BookingConfirms.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingNote")]
	public partial class BookingNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ShipmentId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _ShipperName;
		
		private string _Consignee;
		
		private string _NotifyAddress;
		
		private string _PlaceOfReceipt;
		
		private System.Nullable<System.DateTime> _ETD;
		
		private string _BookingNo;
		
		private string _PortToLoading;
		
		private string _Vesel;
		
		private string _PortOfDestination;
		
		private string _PlaceOfDelivery;
		
		private string _PlaceOfStuffing;
		
		private string _PersonInCharge;
		
		private string _ClosingTime;
		
		private string _ShippingMark;
		
		private string _NoCTNS;
		
		private string _GoodsDescription;
		
		private string _GrossWeight;
		
		private string _CBM;
		
		private string _Shipper;
		
		private string _SancoFreight;
		
		private bool _Logo;
		
		private bool _Header;
		
		private bool _Footer;
		
		private EntitySet<BillDetail> _BillDetails;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnShipperNameChanging(string value);
    partial void OnShipperNameChanged();
    partial void OnConsigneeChanging(string value);
    partial void OnConsigneeChanged();
    partial void OnNotifyAddressChanging(string value);
    partial void OnNotifyAddressChanged();
    partial void OnPlaceOfReceiptChanging(string value);
    partial void OnPlaceOfReceiptChanged();
    partial void OnETDChanging(System.Nullable<System.DateTime> value);
    partial void OnETDChanged();
    partial void OnBookingNoChanging(string value);
    partial void OnBookingNoChanged();
    partial void OnPortToLoadingChanging(string value);
    partial void OnPortToLoadingChanged();
    partial void OnVeselChanging(string value);
    partial void OnVeselChanged();
    partial void OnPortOfDestinationChanging(string value);
    partial void OnPortOfDestinationChanged();
    partial void OnPlaceOfDeliveryChanging(string value);
    partial void OnPlaceOfDeliveryChanged();
    partial void OnPlaceOfStuffingChanging(string value);
    partial void OnPlaceOfStuffingChanged();
    partial void OnPersonInChargeChanging(string value);
    partial void OnPersonInChargeChanged();
    partial void OnClosingTimeChanging(string value);
    partial void OnClosingTimeChanged();
    partial void OnShippingMarkChanging(string value);
    partial void OnShippingMarkChanged();
    partial void OnNoCTNSChanging(string value);
    partial void OnNoCTNSChanged();
    partial void OnGoodsDescriptionChanging(string value);
    partial void OnGoodsDescriptionChanged();
    partial void OnGrossWeightChanging(string value);
    partial void OnGrossWeightChanged();
    partial void OnCBMChanging(string value);
    partial void OnCBMChanged();
    partial void OnShipperChanging(string value);
    partial void OnShipperChanged();
    partial void OnSancoFreightChanging(string value);
    partial void OnSancoFreightChanged();
    partial void OnLogoChanging(bool value);
    partial void OnLogoChanged();
    partial void OnHeaderChanging(bool value);
    partial void OnHeaderChanged();
    partial void OnFooterChanging(bool value);
    partial void OnFooterChanged();
    #endregion
		
		public BookingNote()
		{
			this._BillDetails = new EntitySet<BillDetail>(new Action<BillDetail>(this.attach_BillDetails), new Action<BillDetail>(this.detach_BillDetails));
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipperName", DbType="NVarChar(500)")]
		public string ShipperName
		{
			get
			{
				return this._ShipperName;
			}
			set
			{
				if ((this._ShipperName != value))
				{
					this.OnShipperNameChanging(value);
					this.SendPropertyChanging();
					this._ShipperName = value;
					this.SendPropertyChanged("ShipperName");
					this.OnShipperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consignee", DbType="NVarChar(500)")]
		public string Consignee
		{
			get
			{
				return this._Consignee;
			}
			set
			{
				if ((this._Consignee != value))
				{
					this.OnConsigneeChanging(value);
					this.SendPropertyChanging();
					this._Consignee = value;
					this.SendPropertyChanged("Consignee");
					this.OnConsigneeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyAddress", DbType="NVarChar(500)")]
		public string NotifyAddress
		{
			get
			{
				return this._NotifyAddress;
			}
			set
			{
				if ((this._NotifyAddress != value))
				{
					this.OnNotifyAddressChanging(value);
					this.SendPropertyChanging();
					this._NotifyAddress = value;
					this.SendPropertyChanged("NotifyAddress");
					this.OnNotifyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfReceipt", DbType="NVarChar(200)")]
		public string PlaceOfReceipt
		{
			get
			{
				return this._PlaceOfReceipt;
			}
			set
			{
				if ((this._PlaceOfReceipt != value))
				{
					this.OnPlaceOfReceiptChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfReceipt = value;
					this.SendPropertyChanged("PlaceOfReceipt");
					this.OnPlaceOfReceiptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETD", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETD
		{
			get
			{
				return this._ETD;
			}
			set
			{
				if ((this._ETD != value))
				{
					this.OnETDChanging(value);
					this.SendPropertyChanging();
					this._ETD = value;
					this.SendPropertyChanged("ETD");
					this.OnETDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingNo", DbType="NVarChar(100)")]
		public string BookingNo
		{
			get
			{
				return this._BookingNo;
			}
			set
			{
				if ((this._BookingNo != value))
				{
					this.OnBookingNoChanging(value);
					this.SendPropertyChanging();
					this._BookingNo = value;
					this.SendPropertyChanged("BookingNo");
					this.OnBookingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortToLoading", DbType="NVarChar(200)")]
		public string PortToLoading
		{
			get
			{
				return this._PortToLoading;
			}
			set
			{
				if ((this._PortToLoading != value))
				{
					this.OnPortToLoadingChanging(value);
					this.SendPropertyChanging();
					this._PortToLoading = value;
					this.SendPropertyChanged("PortToLoading");
					this.OnPortToLoadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vesel", DbType="NVarChar(200)")]
		public string Vesel
		{
			get
			{
				return this._Vesel;
			}
			set
			{
				if ((this._Vesel != value))
				{
					this.OnVeselChanging(value);
					this.SendPropertyChanging();
					this._Vesel = value;
					this.SendPropertyChanged("Vesel");
					this.OnVeselChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortOfDestination", DbType="NVarChar(200)")]
		public string PortOfDestination
		{
			get
			{
				return this._PortOfDestination;
			}
			set
			{
				if ((this._PortOfDestination != value))
				{
					this.OnPortOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._PortOfDestination = value;
					this.SendPropertyChanged("PortOfDestination");
					this.OnPortOfDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfDelivery", DbType="NVarChar(200)")]
		public string PlaceOfDelivery
		{
			get
			{
				return this._PlaceOfDelivery;
			}
			set
			{
				if ((this._PlaceOfDelivery != value))
				{
					this.OnPlaceOfDeliveryChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfDelivery = value;
					this.SendPropertyChanged("PlaceOfDelivery");
					this.OnPlaceOfDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfStuffing", DbType="NVarChar(200)")]
		public string PlaceOfStuffing
		{
			get
			{
				return this._PlaceOfStuffing;
			}
			set
			{
				if ((this._PlaceOfStuffing != value))
				{
					this.OnPlaceOfStuffingChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfStuffing = value;
					this.SendPropertyChanged("PlaceOfStuffing");
					this.OnPlaceOfStuffingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInCharge", DbType="NVarChar(200)")]
		public string PersonInCharge
		{
			get
			{
				return this._PersonInCharge;
			}
			set
			{
				if ((this._PersonInCharge != value))
				{
					this.OnPersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._PersonInCharge = value;
					this.SendPropertyChanged("PersonInCharge");
					this.OnPersonInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingTime", DbType="NVarChar(200)")]
		public string ClosingTime
		{
			get
			{
				return this._ClosingTime;
			}
			set
			{
				if ((this._ClosingTime != value))
				{
					this.OnClosingTimeChanging(value);
					this.SendPropertyChanging();
					this._ClosingTime = value;
					this.SendPropertyChanged("ClosingTime");
					this.OnClosingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingMark", DbType="NVarChar(500)")]
		public string ShippingMark
		{
			get
			{
				return this._ShippingMark;
			}
			set
			{
				if ((this._ShippingMark != value))
				{
					this.OnShippingMarkChanging(value);
					this.SendPropertyChanging();
					this._ShippingMark = value;
					this.SendPropertyChanged("ShippingMark");
					this.OnShippingMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoCTNS", DbType="NVarChar(200)")]
		public string NoCTNS
		{
			get
			{
				return this._NoCTNS;
			}
			set
			{
				if ((this._NoCTNS != value))
				{
					this.OnNoCTNSChanging(value);
					this.SendPropertyChanging();
					this._NoCTNS = value;
					this.SendPropertyChanged("NoCTNS");
					this.OnNoCTNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsDescription", DbType="NVarChar(500)")]
		public string GoodsDescription
		{
			get
			{
				return this._GoodsDescription;
			}
			set
			{
				if ((this._GoodsDescription != value))
				{
					this.OnGoodsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GoodsDescription = value;
					this.SendPropertyChanged("GoodsDescription");
					this.OnGoodsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="NVarChar(200)")]
		public string GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CBM", DbType="NVarChar(200)")]
		public string CBM
		{
			get
			{
				return this._CBM;
			}
			set
			{
				if ((this._CBM != value))
				{
					this.OnCBMChanging(value);
					this.SendPropertyChanging();
					this._CBM = value;
					this.SendPropertyChanged("CBM");
					this.OnCBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shipper", DbType="NVarChar(100)")]
		public string Shipper
		{
			get
			{
				return this._Shipper;
			}
			set
			{
				if ((this._Shipper != value))
				{
					this.OnShipperChanging(value);
					this.SendPropertyChanging();
					this._Shipper = value;
					this.SendPropertyChanged("Shipper");
					this.OnShipperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SancoFreight", DbType="NVarChar(100)")]
		public string SancoFreight
		{
			get
			{
				return this._SancoFreight;
			}
			set
			{
				if ((this._SancoFreight != value))
				{
					this.OnSancoFreightChanging(value);
					this.SendPropertyChanging();
					this._SancoFreight = value;
					this.SendPropertyChanged("SancoFreight");
					this.OnSancoFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Bit NOT NULL")]
		public bool Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="Bit NOT NULL")]
		public bool Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Footer", DbType="Bit NOT NULL")]
		public bool Footer
		{
			get
			{
				return this._Footer;
			}
			set
			{
				if ((this._Footer != value))
				{
					this.OnFooterChanging(value);
					this.SendPropertyChanging();
					this._Footer = value;
					this.SendPropertyChanged("Footer");
					this.OnFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingNote_BillDetail", Storage="_BillDetails", ThisKey="Id", OtherKey="BookingNoteId")]
		public EntitySet<BillDetail> BillDetails
		{
			get
			{
				return this._BillDetails;
			}
			set
			{
				this._BillDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_BookingNote", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.BookingNotes.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.BookingNotes.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDetails(BillDetail entity)
		{
			this.SendPropertyChanging();
			entity.BookingNote = this;
		}
		
		private void detach_BillDetails(BillDetail entity)
		{
			this.SendPropertyChanging();
			entity.BookingNote = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingRequest")]
	public partial class BookingRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ShipperName;
		
		private string _CneeName;
		
		private string _PlaceDelivery;
		
		private System.Nullable<int> _MainContract;
		
		private System.Nullable<int> _SubContract;
		
		private System.Nullable<int> _MainInvoice;
		
		private System.Nullable<int> _SubInvoice;
		
		private System.Nullable<int> _MainPL;
		
		private System.Nullable<int> _SubPL;
		
		private System.Nullable<int> _MainBL;
		
		private System.Nullable<int> _SubBL;
		
		private System.Nullable<int> _MainExtend1;
		
		private System.Nullable<int> _MainExtend2;
		
		private System.Nullable<int> _SubExtend1;
		
		private System.Nullable<int> _SubExtend2;
		
		private string _Commodity1;
		
		private string _Commodity2;
		
		private string _Commodity3;
		
		private string _Commodity4;
		
		private string _Commodity5;
		
		private string _Commodity6;
		
		private string _Commodity7;
		
		private string _Commodity8;
		
		private string _Commodity9;
		
		private string _Commodity10;
		
		private string _FreightFee;
		
		private string _DocFee;
		
		private string _CFSFee;
		
		private string _Tax;
		
		private string _OtherFee;
		
		private string _TotalFee;
		
		private long _Id;
		
		private long _ShipmentId;
		
		private string _PortFrom;
		
		private string _PortTo;
		
		private string _THCFee;
		
		private string _HSCode1;
		
		private string _HSCode2;
		
		private string _HSCode3;
		
		private string _HSCode4;
		
		private string _HSCode5;
		
		private string _HSCode6;
		
		private string _HSCode7;
		
		private string _HSCode8;
		
		private string _HSCode9;
		
		private string _HSCode10;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShipperNameChanging(string value);
    partial void OnShipperNameChanged();
    partial void OnCneeNameChanging(string value);
    partial void OnCneeNameChanged();
    partial void OnPlaceDeliveryChanging(string value);
    partial void OnPlaceDeliveryChanged();
    partial void OnMainContractChanging(System.Nullable<int> value);
    partial void OnMainContractChanged();
    partial void OnSubContractChanging(System.Nullable<int> value);
    partial void OnSubContractChanged();
    partial void OnMainInvoiceChanging(System.Nullable<int> value);
    partial void OnMainInvoiceChanged();
    partial void OnSubInvoiceChanging(System.Nullable<int> value);
    partial void OnSubInvoiceChanged();
    partial void OnMainPLChanging(System.Nullable<int> value);
    partial void OnMainPLChanged();
    partial void OnSubPLChanging(System.Nullable<int> value);
    partial void OnSubPLChanged();
    partial void OnMainBLChanging(System.Nullable<int> value);
    partial void OnMainBLChanged();
    partial void OnSubBLChanging(System.Nullable<int> value);
    partial void OnSubBLChanged();
    partial void OnMainExtend1Changing(System.Nullable<int> value);
    partial void OnMainExtend1Changed();
    partial void OnMainExtend2Changing(System.Nullable<int> value);
    partial void OnMainExtend2Changed();
    partial void OnSubExtend1Changing(System.Nullable<int> value);
    partial void OnSubExtend1Changed();
    partial void OnSubExtend2Changing(System.Nullable<int> value);
    partial void OnSubExtend2Changed();
    partial void OnCommodity1Changing(string value);
    partial void OnCommodity1Changed();
    partial void OnCommodity2Changing(string value);
    partial void OnCommodity2Changed();
    partial void OnCommodity3Changing(string value);
    partial void OnCommodity3Changed();
    partial void OnCommodity4Changing(string value);
    partial void OnCommodity4Changed();
    partial void OnCommodity5Changing(string value);
    partial void OnCommodity5Changed();
    partial void OnCommodity6Changing(string value);
    partial void OnCommodity6Changed();
    partial void OnCommodity7Changing(string value);
    partial void OnCommodity7Changed();
    partial void OnCommodity8Changing(string value);
    partial void OnCommodity8Changed();
    partial void OnCommodity9Changing(string value);
    partial void OnCommodity9Changed();
    partial void OnCommodity10Changing(string value);
    partial void OnCommodity10Changed();
    partial void OnFreightFeeChanging(string value);
    partial void OnFreightFeeChanged();
    partial void OnDocFeeChanging(string value);
    partial void OnDocFeeChanged();
    partial void OnCFSFeeChanging(string value);
    partial void OnCFSFeeChanged();
    partial void OnTaxChanging(string value);
    partial void OnTaxChanged();
    partial void OnOtherFeeChanging(string value);
    partial void OnOtherFeeChanged();
    partial void OnTotalFeeChanging(string value);
    partial void OnTotalFeeChanged();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnPortFromChanging(string value);
    partial void OnPortFromChanged();
    partial void OnPortToChanging(string value);
    partial void OnPortToChanged();
    partial void OnTHCFeeChanging(string value);
    partial void OnTHCFeeChanged();
    partial void OnHSCode1Changing(string value);
    partial void OnHSCode1Changed();
    partial void OnHSCode2Changing(string value);
    partial void OnHSCode2Changed();
    partial void OnHSCode3Changing(string value);
    partial void OnHSCode3Changed();
    partial void OnHSCode4Changing(string value);
    partial void OnHSCode4Changed();
    partial void OnHSCode5Changing(string value);
    partial void OnHSCode5Changed();
    partial void OnHSCode6Changing(string value);
    partial void OnHSCode6Changed();
    partial void OnHSCode7Changing(string value);
    partial void OnHSCode7Changed();
    partial void OnHSCode8Changing(string value);
    partial void OnHSCode8Changed();
    partial void OnHSCode9Changing(string value);
    partial void OnHSCode9Changed();
    partial void OnHSCode10Changing(string value);
    partial void OnHSCode10Changed();
    #endregion
		
		public BookingRequest()
		{
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipperName", DbType="NVarChar(4000)")]
		public string ShipperName
		{
			get
			{
				return this._ShipperName;
			}
			set
			{
				if ((this._ShipperName != value))
				{
					this.OnShipperNameChanging(value);
					this.SendPropertyChanging();
					this._ShipperName = value;
					this.SendPropertyChanged("ShipperName");
					this.OnShipperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CneeName", DbType="NVarChar(4000)")]
		public string CneeName
		{
			get
			{
				return this._CneeName;
			}
			set
			{
				if ((this._CneeName != value))
				{
					this.OnCneeNameChanging(value);
					this.SendPropertyChanging();
					this._CneeName = value;
					this.SendPropertyChanged("CneeName");
					this.OnCneeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceDelivery", DbType="NVarChar(4000)")]
		public string PlaceDelivery
		{
			get
			{
				return this._PlaceDelivery;
			}
			set
			{
				if ((this._PlaceDelivery != value))
				{
					this.OnPlaceDeliveryChanging(value);
					this.SendPropertyChanging();
					this._PlaceDelivery = value;
					this.SendPropertyChanged("PlaceDelivery");
					this.OnPlaceDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainContract", DbType="Int")]
		public System.Nullable<int> MainContract
		{
			get
			{
				return this._MainContract;
			}
			set
			{
				if ((this._MainContract != value))
				{
					this.OnMainContractChanging(value);
					this.SendPropertyChanging();
					this._MainContract = value;
					this.SendPropertyChanged("MainContract");
					this.OnMainContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubContract", DbType="Int")]
		public System.Nullable<int> SubContract
		{
			get
			{
				return this._SubContract;
			}
			set
			{
				if ((this._SubContract != value))
				{
					this.OnSubContractChanging(value);
					this.SendPropertyChanging();
					this._SubContract = value;
					this.SendPropertyChanged("SubContract");
					this.OnSubContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainInvoice", DbType="Int")]
		public System.Nullable<int> MainInvoice
		{
			get
			{
				return this._MainInvoice;
			}
			set
			{
				if ((this._MainInvoice != value))
				{
					this.OnMainInvoiceChanging(value);
					this.SendPropertyChanging();
					this._MainInvoice = value;
					this.SendPropertyChanged("MainInvoice");
					this.OnMainInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubInvoice", DbType="Int")]
		public System.Nullable<int> SubInvoice
		{
			get
			{
				return this._SubInvoice;
			}
			set
			{
				if ((this._SubInvoice != value))
				{
					this.OnSubInvoiceChanging(value);
					this.SendPropertyChanging();
					this._SubInvoice = value;
					this.SendPropertyChanged("SubInvoice");
					this.OnSubInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainPL", DbType="Int")]
		public System.Nullable<int> MainPL
		{
			get
			{
				return this._MainPL;
			}
			set
			{
				if ((this._MainPL != value))
				{
					this.OnMainPLChanging(value);
					this.SendPropertyChanging();
					this._MainPL = value;
					this.SendPropertyChanged("MainPL");
					this.OnMainPLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubPL", DbType="Int")]
		public System.Nullable<int> SubPL
		{
			get
			{
				return this._SubPL;
			}
			set
			{
				if ((this._SubPL != value))
				{
					this.OnSubPLChanging(value);
					this.SendPropertyChanging();
					this._SubPL = value;
					this.SendPropertyChanged("SubPL");
					this.OnSubPLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainBL", DbType="Int")]
		public System.Nullable<int> MainBL
		{
			get
			{
				return this._MainBL;
			}
			set
			{
				if ((this._MainBL != value))
				{
					this.OnMainBLChanging(value);
					this.SendPropertyChanging();
					this._MainBL = value;
					this.SendPropertyChanged("MainBL");
					this.OnMainBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubBL", DbType="Int")]
		public System.Nullable<int> SubBL
		{
			get
			{
				return this._SubBL;
			}
			set
			{
				if ((this._SubBL != value))
				{
					this.OnSubBLChanging(value);
					this.SendPropertyChanging();
					this._SubBL = value;
					this.SendPropertyChanged("SubBL");
					this.OnSubBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainExtend1", DbType="Int")]
		public System.Nullable<int> MainExtend1
		{
			get
			{
				return this._MainExtend1;
			}
			set
			{
				if ((this._MainExtend1 != value))
				{
					this.OnMainExtend1Changing(value);
					this.SendPropertyChanging();
					this._MainExtend1 = value;
					this.SendPropertyChanged("MainExtend1");
					this.OnMainExtend1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainExtend2", DbType="Int")]
		public System.Nullable<int> MainExtend2
		{
			get
			{
				return this._MainExtend2;
			}
			set
			{
				if ((this._MainExtend2 != value))
				{
					this.OnMainExtend2Changing(value);
					this.SendPropertyChanging();
					this._MainExtend2 = value;
					this.SendPropertyChanged("MainExtend2");
					this.OnMainExtend2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubExtend1", DbType="Int")]
		public System.Nullable<int> SubExtend1
		{
			get
			{
				return this._SubExtend1;
			}
			set
			{
				if ((this._SubExtend1 != value))
				{
					this.OnSubExtend1Changing(value);
					this.SendPropertyChanging();
					this._SubExtend1 = value;
					this.SendPropertyChanged("SubExtend1");
					this.OnSubExtend1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubExtend2", DbType="Int")]
		public System.Nullable<int> SubExtend2
		{
			get
			{
				return this._SubExtend2;
			}
			set
			{
				if ((this._SubExtend2 != value))
				{
					this.OnSubExtend2Changing(value);
					this.SendPropertyChanging();
					this._SubExtend2 = value;
					this.SendPropertyChanged("SubExtend2");
					this.OnSubExtend2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity1", DbType="NVarChar(100)")]
		public string Commodity1
		{
			get
			{
				return this._Commodity1;
			}
			set
			{
				if ((this._Commodity1 != value))
				{
					this.OnCommodity1Changing(value);
					this.SendPropertyChanging();
					this._Commodity1 = value;
					this.SendPropertyChanged("Commodity1");
					this.OnCommodity1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity2", DbType="NVarChar(100)")]
		public string Commodity2
		{
			get
			{
				return this._Commodity2;
			}
			set
			{
				if ((this._Commodity2 != value))
				{
					this.OnCommodity2Changing(value);
					this.SendPropertyChanging();
					this._Commodity2 = value;
					this.SendPropertyChanged("Commodity2");
					this.OnCommodity2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity3", DbType="NVarChar(100)")]
		public string Commodity3
		{
			get
			{
				return this._Commodity3;
			}
			set
			{
				if ((this._Commodity3 != value))
				{
					this.OnCommodity3Changing(value);
					this.SendPropertyChanging();
					this._Commodity3 = value;
					this.SendPropertyChanged("Commodity3");
					this.OnCommodity3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity4", DbType="NVarChar(100)")]
		public string Commodity4
		{
			get
			{
				return this._Commodity4;
			}
			set
			{
				if ((this._Commodity4 != value))
				{
					this.OnCommodity4Changing(value);
					this.SendPropertyChanging();
					this._Commodity4 = value;
					this.SendPropertyChanged("Commodity4");
					this.OnCommodity4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity5", DbType="NVarChar(100)")]
		public string Commodity5
		{
			get
			{
				return this._Commodity5;
			}
			set
			{
				if ((this._Commodity5 != value))
				{
					this.OnCommodity5Changing(value);
					this.SendPropertyChanging();
					this._Commodity5 = value;
					this.SendPropertyChanged("Commodity5");
					this.OnCommodity5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity6", DbType="NVarChar(100)")]
		public string Commodity6
		{
			get
			{
				return this._Commodity6;
			}
			set
			{
				if ((this._Commodity6 != value))
				{
					this.OnCommodity6Changing(value);
					this.SendPropertyChanging();
					this._Commodity6 = value;
					this.SendPropertyChanged("Commodity6");
					this.OnCommodity6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity7", DbType="NVarChar(100)")]
		public string Commodity7
		{
			get
			{
				return this._Commodity7;
			}
			set
			{
				if ((this._Commodity7 != value))
				{
					this.OnCommodity7Changing(value);
					this.SendPropertyChanging();
					this._Commodity7 = value;
					this.SendPropertyChanged("Commodity7");
					this.OnCommodity7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity8", DbType="NVarChar(100)")]
		public string Commodity8
		{
			get
			{
				return this._Commodity8;
			}
			set
			{
				if ((this._Commodity8 != value))
				{
					this.OnCommodity8Changing(value);
					this.SendPropertyChanging();
					this._Commodity8 = value;
					this.SendPropertyChanged("Commodity8");
					this.OnCommodity8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity9", DbType="NVarChar(100)")]
		public string Commodity9
		{
			get
			{
				return this._Commodity9;
			}
			set
			{
				if ((this._Commodity9 != value))
				{
					this.OnCommodity9Changing(value);
					this.SendPropertyChanging();
					this._Commodity9 = value;
					this.SendPropertyChanged("Commodity9");
					this.OnCommodity9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commodity10", DbType="NVarChar(100)")]
		public string Commodity10
		{
			get
			{
				return this._Commodity10;
			}
			set
			{
				if ((this._Commodity10 != value))
				{
					this.OnCommodity10Changing(value);
					this.SendPropertyChanging();
					this._Commodity10 = value;
					this.SendPropertyChanged("Commodity10");
					this.OnCommodity10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreightFee", DbType="NVarChar(50)")]
		public string FreightFee
		{
			get
			{
				return this._FreightFee;
			}
			set
			{
				if ((this._FreightFee != value))
				{
					this.OnFreightFeeChanging(value);
					this.SendPropertyChanging();
					this._FreightFee = value;
					this.SendPropertyChanged("FreightFee");
					this.OnFreightFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocFee", DbType="NVarChar(50)")]
		public string DocFee
		{
			get
			{
				return this._DocFee;
			}
			set
			{
				if ((this._DocFee != value))
				{
					this.OnDocFeeChanging(value);
					this.SendPropertyChanging();
					this._DocFee = value;
					this.SendPropertyChanged("DocFee");
					this.OnDocFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFSFee", DbType="NVarChar(50)")]
		public string CFSFee
		{
			get
			{
				return this._CFSFee;
			}
			set
			{
				if ((this._CFSFee != value))
				{
					this.OnCFSFeeChanging(value);
					this.SendPropertyChanging();
					this._CFSFee = value;
					this.SendPropertyChanged("CFSFee");
					this.OnCFSFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="NVarChar(50)")]
		public string Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherFee", DbType="NVarChar(50)")]
		public string OtherFee
		{
			get
			{
				return this._OtherFee;
			}
			set
			{
				if ((this._OtherFee != value))
				{
					this.OnOtherFeeChanging(value);
					this.SendPropertyChanging();
					this._OtherFee = value;
					this.SendPropertyChanged("OtherFee");
					this.OnOtherFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFee", DbType="NVarChar(50)")]
		public string TotalFee
		{
			get
			{
				return this._TotalFee;
			}
			set
			{
				if ((this._TotalFee != value))
				{
					this.OnTotalFeeChanging(value);
					this.SendPropertyChanging();
					this._TotalFee = value;
					this.SendPropertyChanged("TotalFee");
					this.OnTotalFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortFrom", DbType="NVarChar(100)")]
		public string PortFrom
		{
			get
			{
				return this._PortFrom;
			}
			set
			{
				if ((this._PortFrom != value))
				{
					this.OnPortFromChanging(value);
					this.SendPropertyChanging();
					this._PortFrom = value;
					this.SendPropertyChanged("PortFrom");
					this.OnPortFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortTo", DbType="NVarChar(100)")]
		public string PortTo
		{
			get
			{
				return this._PortTo;
			}
			set
			{
				if ((this._PortTo != value))
				{
					this.OnPortToChanging(value);
					this.SendPropertyChanging();
					this._PortTo = value;
					this.SendPropertyChanged("PortTo");
					this.OnPortToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THCFee", DbType="NVarChar(50)")]
		public string THCFee
		{
			get
			{
				return this._THCFee;
			}
			set
			{
				if ((this._THCFee != value))
				{
					this.OnTHCFeeChanging(value);
					this.SendPropertyChanging();
					this._THCFee = value;
					this.SendPropertyChanged("THCFee");
					this.OnTHCFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode1", DbType="NVarChar(50)")]
		public string HSCode1
		{
			get
			{
				return this._HSCode1;
			}
			set
			{
				if ((this._HSCode1 != value))
				{
					this.OnHSCode1Changing(value);
					this.SendPropertyChanging();
					this._HSCode1 = value;
					this.SendPropertyChanged("HSCode1");
					this.OnHSCode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode2", DbType="NVarChar(50)")]
		public string HSCode2
		{
			get
			{
				return this._HSCode2;
			}
			set
			{
				if ((this._HSCode2 != value))
				{
					this.OnHSCode2Changing(value);
					this.SendPropertyChanging();
					this._HSCode2 = value;
					this.SendPropertyChanged("HSCode2");
					this.OnHSCode2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode3", DbType="NVarChar(50)")]
		public string HSCode3
		{
			get
			{
				return this._HSCode3;
			}
			set
			{
				if ((this._HSCode3 != value))
				{
					this.OnHSCode3Changing(value);
					this.SendPropertyChanging();
					this._HSCode3 = value;
					this.SendPropertyChanged("HSCode3");
					this.OnHSCode3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode4", DbType="NVarChar(50)")]
		public string HSCode4
		{
			get
			{
				return this._HSCode4;
			}
			set
			{
				if ((this._HSCode4 != value))
				{
					this.OnHSCode4Changing(value);
					this.SendPropertyChanging();
					this._HSCode4 = value;
					this.SendPropertyChanged("HSCode4");
					this.OnHSCode4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode5", DbType="NVarChar(50)")]
		public string HSCode5
		{
			get
			{
				return this._HSCode5;
			}
			set
			{
				if ((this._HSCode5 != value))
				{
					this.OnHSCode5Changing(value);
					this.SendPropertyChanging();
					this._HSCode5 = value;
					this.SendPropertyChanged("HSCode5");
					this.OnHSCode5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode6", DbType="NVarChar(50)")]
		public string HSCode6
		{
			get
			{
				return this._HSCode6;
			}
			set
			{
				if ((this._HSCode6 != value))
				{
					this.OnHSCode6Changing(value);
					this.SendPropertyChanging();
					this._HSCode6 = value;
					this.SendPropertyChanged("HSCode6");
					this.OnHSCode6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode7", DbType="NVarChar(50)")]
		public string HSCode7
		{
			get
			{
				return this._HSCode7;
			}
			set
			{
				if ((this._HSCode7 != value))
				{
					this.OnHSCode7Changing(value);
					this.SendPropertyChanging();
					this._HSCode7 = value;
					this.SendPropertyChanged("HSCode7");
					this.OnHSCode7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode8", DbType="NVarChar(50)")]
		public string HSCode8
		{
			get
			{
				return this._HSCode8;
			}
			set
			{
				if ((this._HSCode8 != value))
				{
					this.OnHSCode8Changing(value);
					this.SendPropertyChanging();
					this._HSCode8 = value;
					this.SendPropertyChanged("HSCode8");
					this.OnHSCode8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode9", DbType="NVarChar(50)")]
		public string HSCode9
		{
			get
			{
				return this._HSCode9;
			}
			set
			{
				if ((this._HSCode9 != value))
				{
					this.OnHSCode9Changing(value);
					this.SendPropertyChanging();
					this._HSCode9 = value;
					this.SendPropertyChanged("HSCode9");
					this.OnHSCode9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode10", DbType="NVarChar(50)")]
		public string HSCode10
		{
			get
			{
				return this._HSCode10;
			}
			set
			{
				if ((this._HSCode10 != value))
				{
					this.OnHSCode10Changing(value);
					this.SendPropertyChanging();
					this._HSCode10 = value;
					this.SendPropertyChanged("HSCode10");
					this.OnHSCode10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_BookingRequest", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true)]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.BookingRequests.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.BookingRequests.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarrierAirLine")]
	public partial class CarrierAirLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _CarrierAirLineName;
		
		private string _Address;
		
		private string _AbbName;
		
		private string _PhoneNumber;
		
		private string _Fax;
		
		private string _Description;
		
		private string _Type;
		
		private bool _IsActive;
		
		private bool _IsHideUser;
		
		private bool _IsSee;
		
		private EntitySet<Freight> _Freights;
		
		private EntitySet<Revenue> _Revenues;
		
		private EntitySet<Shipment> _Shipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCarrierAirLineNameChanging(string value);
    partial void OnCarrierAirLineNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAbbNameChanging(string value);
    partial void OnAbbNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsHideUserChanging(bool value);
    partial void OnIsHideUserChanged();
    partial void OnIsSeeChanging(bool value);
    partial void OnIsSeeChanged();
    #endregion
		
		public CarrierAirLine()
		{
			this._Freights = new EntitySet<Freight>(new Action<Freight>(this.attach_Freights), new Action<Freight>(this.detach_Freights));
			this._Revenues = new EntitySet<Revenue>(new Action<Revenue>(this.attach_Revenues), new Action<Revenue>(this.detach_Revenues));
			this._Shipments = new EntitySet<Shipment>(new Action<Shipment>(this.attach_Shipments), new Action<Shipment>(this.detach_Shipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierAirLineName", DbType="NVarChar(200)")]
		public string CarrierAirLineName
		{
			get
			{
				return this._CarrierAirLineName;
			}
			set
			{
				if ((this._CarrierAirLineName != value))
				{
					this.OnCarrierAirLineNameChanging(value);
					this.SendPropertyChanging();
					this._CarrierAirLineName = value;
					this.SendPropertyChanged("CarrierAirLineName");
					this.OnCarrierAirLineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbbName", DbType="NVarChar(50)")]
		public string AbbName
		{
			get
			{
				return this._AbbName;
			}
			set
			{
				if ((this._AbbName != value))
				{
					this.OnAbbNameChanging(value);
					this.SendPropertyChanging();
					this._AbbName = value;
					this.SendPropertyChanged("AbbName");
					this.OnAbbNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHideUser", DbType="Bit")]
		public bool IsHideUser
		{
			get
			{
				return this._IsHideUser;
			}
			set
			{
				if ((this._IsHideUser != value))
				{
					this.OnIsHideUserChanging(value);
					this.SendPropertyChanging();
					this._IsHideUser = value;
					this.SendPropertyChanged("IsHideUser");
					this.OnIsHideUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSee", DbType="Bit")]
		public bool IsSee
		{
			get
			{
				return this._IsSee;
			}
			set
			{
				if ((this._IsSee != value))
				{
					this.OnIsSeeChanging(value);
					this.SendPropertyChanging();
					this._IsSee = value;
					this.SendPropertyChanged("IsSee");
					this.OnIsSeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarrierAirLine_Freight", Storage="_Freights", ThisKey="Id", OtherKey="AirlineId")]
		public EntitySet<Freight> Freights
		{
			get
			{
				return this._Freights;
			}
			set
			{
				this._Freights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarrierAirLine_Revenue", Storage="_Revenues", ThisKey="Id", OtherKey="PaidToCarrier")]
		public EntitySet<Revenue> Revenues
		{
			get
			{
				return this._Revenues;
			}
			set
			{
				this._Revenues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarrierAirLine_Shipment", Storage="_Shipments", ThisKey="Id", OtherKey="CarrierAirId")]
		public EntitySet<Shipment> Shipments
		{
			get
			{
				return this._Shipments;
			}
			set
			{
				this._Shipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.CarrierAirLine = this;
		}
		
		private void detach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.CarrierAirLine = null;
		}
		
		private void attach_Revenues(Revenue entity)
		{
			this.SendPropertyChanging();
			entity.CarrierAirLine = this;
		}
		
		private void detach_Revenues(Revenue entity)
		{
			this.SendPropertyChanging();
			entity.CarrierAirLine = null;
		}
		
		private void attach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.CarrierAirLine = this;
		}
		
		private void detach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.CarrierAirLine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _CompanyName;
		
		private string _Description;
		
		private string _CompanyCode;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private EntitySet<ControlCompany> _ControlCompanies;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<SalePlan> _SalePlans;
		
		private EntitySet<Shipment> _Shipments;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    #endregion
		
		public Company()
		{
			this._ControlCompanies = new EntitySet<ControlCompany>(new Action<ControlCompany>(this.attach_ControlCompanies), new Action<ControlCompany>(this.detach_ControlCompanies));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._SalePlans = new EntitySet<SalePlan>(new Action<SalePlan>(this.attach_SalePlans), new Action<SalePlan>(this.detach_SalePlans));
			this._Shipments = new EntitySet<Shipment>(new Action<Shipment>(this.attach_Shipments), new Action<Shipment>(this.detach_Shipments));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(200)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(50)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ControlCompany", Storage="_ControlCompanies", ThisKey="Id", OtherKey="ComId")]
		public EntitySet<ControlCompany> ControlCompanies
		{
			get
			{
				return this._ControlCompanies;
			}
			set
			{
				this._ControlCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Department", Storage="_Departments", ThisKey="Id", OtherKey="ComId")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_SalePlan", Storage="_SalePlans", ThisKey="Id", OtherKey="OfficeId")]
		public EntitySet<SalePlan> SalePlans
		{
			get
			{
				return this._SalePlans;
			}
			set
			{
				this._SalePlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Shipment", Storage="_Shipments", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<Shipment> Shipments
		{
			get
			{
				return this._Shipments;
			}
			set
			{
				this._Shipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_User", Storage="_Users", ThisKey="Id", OtherKey="ComId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ControlCompanies(ControlCompany entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_ControlCompanies(ControlCompany entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_SalePlans(SalePlan entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_SalePlans(SalePlan entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ControlCompany")]
	public partial class ControlCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserId;
		
		private long _ComId;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnComIdChanging(long value);
    partial void OnComIdChanged();
    #endregion
		
		public ControlCompany()
		{
			this._Company = default(EntityRef<Company>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ComId
		{
			get
			{
				return this._ComId;
			}
			set
			{
				if ((this._ComId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComIdChanging(value);
					this.SendPropertyChanging();
					this._ComId = value;
					this.SendPropertyChanged("ComId");
					this.OnComIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ControlCompany", Storage="_Company", ThisKey="ComId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.ControlCompanies.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.ControlCompanies.Add(this);
						this._ComId = value.Id;
					}
					else
					{
						this._ComId = default(long);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ControlCompany", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ControlCompanies.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ControlCompanies.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Curency")]
	public partial class Curency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _Name2;
		
		private string _ra_1;
		
		private string _ra_12;
		
		private string _ra_2;
		
		private string _ra_22;
		
		private string _ra_3;
		
		private string _ra_32;
		
		private string _ra_4;
		
		private string _ra_42;
		
		private string _ra_5;
		
		private string _ra_52;
		
		private System.Nullable<long> _CreatedBy;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<System.DateTime> _DateModify;
		
		private EntitySet<MT72> _MT72s;
		
		private EntitySet<MT81> _MT81s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnName2Changing(string value);
    partial void OnName2Changed();
    partial void Onra_1Changing(string value);
    partial void Onra_1Changed();
    partial void Onra_12Changing(string value);
    partial void Onra_12Changed();
    partial void Onra_2Changing(string value);
    partial void Onra_2Changed();
    partial void Onra_22Changing(string value);
    partial void Onra_22Changed();
    partial void Onra_3Changing(string value);
    partial void Onra_3Changed();
    partial void Onra_32Changing(string value);
    partial void Onra_32Changed();
    partial void Onra_4Changing(string value);
    partial void Onra_4Changed();
    partial void Onra_42Changing(string value);
    partial void Onra_42Changed();
    partial void Onra_5Changing(string value);
    partial void Onra_5Changed();
    partial void Onra_52Changing(string value);
    partial void Onra_52Changed();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnDateModifyChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifyChanged();
    #endregion
		
		public Curency()
		{
			this._MT72s = new EntitySet<MT72>(new Action<MT72>(this.attach_MT72s), new Action<MT72>(this.detach_MT72s));
			this._MT81s = new EntitySet<MT81>(new Action<MT81>(this.attach_MT81s), new Action<MT81>(this.detach_MT81s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name2", DbType="NVarChar(64)")]
		public string Name2
		{
			get
			{
				return this._Name2;
			}
			set
			{
				if ((this._Name2 != value))
				{
					this.OnName2Changing(value);
					this.SendPropertyChanging();
					this._Name2 = value;
					this.SendPropertyChanged("Name2");
					this.OnName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ra_1", DbType="NChar(24)")]
		public string ra_1
		{
			get
			{
				return this._ra_1;
			}
			set
			{
				if ((this._ra_1 != value))
				{
					this.Onra_1Changing(value);
					this.SendPropertyChanging();
					this._ra_1 = value;
					this.SendPropertyChanged("ra_1");
					this.Onra_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ra_12", DbType="NChar(24)")]
		public string ra_12
		{
			get
			{
				return this._ra_12;
			}
			set
			{
				if ((this._ra_12 != value))
				{
					this.Onra_12Changing(value);
					this.SendPropertyChanging();
					this._ra_12 = value;
					this.SendPropertyChanged("ra_12");
					this.Onra_12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ra_2", DbType="NChar(24)")]
		public string ra_2
		{
			get
			{
				return this._ra_2;
			}
			set
			{
				if ((this._ra_2 != value))
				{
					this.Onra_2Changing(value);
					this.SendPropertyChanging();
					this._ra_2 = value;
					this.SendPropertyChanged("ra_2");
					this.Onra_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ra_22", DbType="NChar(24)")]
		public string ra_22
		{
			get
			{
				return this._ra_22;
			}
			set
			{
				if ((this._ra_22 != value))
				{
					this.Onra_22Changing(value);
					this.SendPropertyChanging();
					this._ra_22 = value;
					this.SendPropertyChanged("ra_22");
					this.Onra_22Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ra_3", DbType="NChar(24)")]
		public string ra_3
		{
			get
			{
				return this._ra_3;
			}
			set
			{
				if ((this._ra_3 != value))
				{
					this.Onra_3Changing(value);
					this.SendPropertyChanging();
					this._ra_3 = value;
					this.SendPropertyChanged("ra_3");
					this.Onra_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ra_32", DbType="NChar(24)")]
		public string ra_32
		{
			get
			{
				return this._ra_32;
			}
			set
			{
				if ((this._ra_32 != value))
				{
					this.Onra_32Changing(value);
					this.SendPropertyChanging();
					this._ra_32 = value;
					this.SendPropertyChanged("ra_32");
					this.Onra_32Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ra_4", DbType="NChar(24)")]
		public string ra_4
		{
			get
			{
				return this._ra_4;
			}
			set
			{
				if ((this._ra_4 != value))
				{
					this.Onra_4Changing(value);
					this.SendPropertyChanging();
					this._ra_4 = value;
					this.SendPropertyChanged("ra_4");
					this.Onra_4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ra_42", DbType="NChar(24)")]
		public string ra_42
		{
			get
			{
				return this._ra_42;
			}
			set
			{
				if ((this._ra_42 != value))
				{
					this.Onra_42Changing(value);
					this.SendPropertyChanging();
					this._ra_42 = value;
					this.SendPropertyChanged("ra_42");
					this.Onra_42Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ra_5", DbType="NChar(24)")]
		public string ra_5
		{
			get
			{
				return this._ra_5;
			}
			set
			{
				if ((this._ra_5 != value))
				{
					this.Onra_5Changing(value);
					this.SendPropertyChanging();
					this._ra_5 = value;
					this.SendPropertyChanged("ra_5");
					this.Onra_5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ra_52", DbType="NChar(24)")]
		public string ra_52
		{
			get
			{
				return this._ra_52;
			}
			set
			{
				if ((this._ra_52 != value))
				{
					this.Onra_52Changing(value);
					this.SendPropertyChanging();
					this._ra_52 = value;
					this.SendPropertyChanged("ra_52");
					this.Onra_52Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
		public System.Nullable<long> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModify", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModify
		{
			get
			{
				return this._DateModify;
			}
			set
			{
				if ((this._DateModify != value))
				{
					this.OnDateModifyChanging(value);
					this.SendPropertyChanging();
					this._DateModify = value;
					this.SendPropertyChanged("DateModify");
					this.OnDateModifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curency_MT72", Storage="_MT72s", ThisKey="Id", OtherKey="CurencyID")]
		public EntitySet<MT72> MT72s
		{
			get
			{
				return this._MT72s;
			}
			set
			{
				this._MT72s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curency_MT81", Storage="_MT81s", ThisKey="Id", OtherKey="CurencyID")]
		public EntitySet<MT81> MT81s
		{
			get
			{
				return this._MT81s;
			}
			set
			{
				this._MT81s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MT72s(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.Curency = this;
		}
		
		private void detach_MT72s(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.Curency = null;
		}
		
		private void attach_MT81s(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.Curency = this;
		}
		
		private void detach_MT81s(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.Curency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _FullName;
		
		private string _Address;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _Fax;
		
		private string _CompanyName;
		
		private string _Description;
		
		private string _CustomerType;
		
		private System.Nullable<long> _UserId;
		
		private bool _IsSee;
		
		private bool _IsMove;
		
		private System.Nullable<long> _MovedBy;
		
		private System.Nullable<long> _CmrCusId;
		
		private bool _IsHideUser;
		
		private EntitySet<Shipment> _Shipments;
		
		private EntitySet<Shipment> _Shipments1;
		
		private EntitySet<MT81> _MT81s;
		
		private EntitySet<StockCard> _StockCards;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCustomerTypeChanging(string value);
    partial void OnCustomerTypeChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnIsSeeChanging(bool value);
    partial void OnIsSeeChanged();
    partial void OnIsMoveChanging(bool value);
    partial void OnIsMoveChanged();
    partial void OnMovedByChanging(System.Nullable<long> value);
    partial void OnMovedByChanged();
    partial void OnCrmCusIdChanging(System.Nullable<long> value);
    partial void OnCrmCusIdChanged();
    partial void OnIsHideUserChanging(bool value);
    partial void OnIsHideUserChanged();
    #endregion
		
		public Customer()
		{
			this._Shipments = new EntitySet<Shipment>(new Action<Shipment>(this.attach_Shipments), new Action<Shipment>(this.detach_Shipments));
			this._Shipments1 = new EntitySet<Shipment>(new Action<Shipment>(this.attach_Shipments1), new Action<Shipment>(this.detach_Shipments1));
			this._MT81s = new EntitySet<MT81>(new Action<MT81>(this.attach_MT81s), new Action<MT81>(this.detach_MT81s));
			this._StockCards = new EntitySet<StockCard>(new Action<StockCard>(this.attach_StockCards), new Action<StockCard>(this.detach_StockCards));
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(200)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="NVarChar(50)")]
		public string CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this.OnCustomerTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerType = value;
					this.SendPropertyChanged("CustomerType");
					this.OnCustomerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSee", DbType="Bit")]
		public bool IsSee
		{
			get
			{
				return this._IsSee;
			}
			set
			{
				if ((this._IsSee != value))
				{
					this.OnIsSeeChanging(value);
					this.SendPropertyChanging();
					this._IsSee = value;
					this.SendPropertyChanged("IsSee");
					this.OnIsSeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMove", DbType="Bit")]
		public bool IsMove
		{
			get
			{
				return this._IsMove;
			}
			set
			{
				if ((this._IsMove != value))
				{
					this.OnIsMoveChanging(value);
					this.SendPropertyChanging();
					this._IsMove = value;
					this.SendPropertyChanged("IsMove");
					this.OnIsMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovedBy", DbType="BigInt")]
		public System.Nullable<long> MovedBy
		{
			get
			{
				return this._MovedBy;
			}
			set
			{
				if ((this._MovedBy != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMovedByChanging(value);
					this.SendPropertyChanging();
					this._MovedBy = value;
					this.SendPropertyChanged("MovedBy");
					this.OnMovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CmrCusId", DbType="BigInt")]
		public System.Nullable<long> CrmCusId
		{
			get
			{
				return this._CmrCusId;
			}
			set
			{
				if ((this._CmrCusId != value))
				{
					this.OnCrmCusIdChanging(value);
					this.SendPropertyChanging();
					this._CmrCusId = value;
					this.SendPropertyChanged("CrmCusId");
					this.OnCrmCusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHideUser", DbType="Bit")]
		public bool IsHideUser
		{
			get
			{
				return this._IsHideUser;
			}
			set
			{
				if ((this._IsHideUser != value))
				{
					this.OnIsHideUserChanging(value);
					this.SendPropertyChanging();
					this._IsHideUser = value;
					this.SendPropertyChanged("IsHideUser");
					this.OnIsHideUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Shipment", Storage="_Shipments", ThisKey="Id", OtherKey="CneeId")]
		public EntitySet<Shipment> Shipments
		{
			get
			{
				return this._Shipments;
			}
			set
			{
				this._Shipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Shipment1", Storage="_Shipments1", ThisKey="Id", OtherKey="ShipperId")]
		public EntitySet<Shipment> Shipments1
		{
			get
			{
				return this._Shipments1;
			}
			set
			{
				this._Shipments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_MT81", Storage="_MT81s", ThisKey="Id", OtherKey="CustomerID")]
		public EntitySet<MT81> MT81s
		{
			get
			{
				return this._MT81s;
			}
			set
			{
				this._MT81s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_StockCard", Storage="_StockCards", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<StockCard> StockCards
		{
			get
			{
				return this._StockCards;
			}
			set
			{
				this._StockCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Customer", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Customer1", Storage="_User1", ThisKey="MovedBy", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Customers1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Customers1.Add(this);
						this._MovedBy = value.Id;
					}
					else
					{
						this._MovedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Shipments1(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_Shipments1(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
		
		private void attach_MT81s(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_MT81s(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_StockCards(StockCard entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_StockCards(StockCard entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DebitNote")]
	public partial class DebitNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ShipmentId;
		
		private string _CompanyTo;
		
		private string _DebitNo;
		
		private System.Nullable<System.DateTime> _DebitDate;
		
		private string _DebitTerms;
		
		private string _FlightNo;
		
		private string _HAWB_HBL;
		
		private string _Origin;
		
		private string _Destination;
		
		private string _Pieces;
		
		private string _Weight;
		
		private string _Description;
		
		private System.Nullable<decimal> _DebitAmount;
		
		private System.Nullable<decimal> _DebitUSD;
		
		private string _AuthName;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _CompanyFrom;
		
		private string _InWords;
		
		private bool _Logo;
		
		private bool _Header;
		
		private bool _Footer;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnCompanyToChanging(string value);
    partial void OnCompanyToChanged();
    partial void OnDebitNoChanging(string value);
    partial void OnDebitNoChanged();
    partial void OnDebitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDebitDateChanged();
    partial void OnDebitTermsChanging(string value);
    partial void OnDebitTermsChanged();
    partial void OnFlightNoChanging(string value);
    partial void OnFlightNoChanged();
    partial void OnHAWB_HBLChanging(string value);
    partial void OnHAWB_HBLChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnPiecesChanging(string value);
    partial void OnPiecesChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDebitAmountChanging(System.Nullable<decimal> value);
    partial void OnDebitAmountChanged();
    partial void OnDebitUSDChanging(System.Nullable<decimal> value);
    partial void OnDebitUSDChanged();
    partial void OnAuthNameChanging(string value);
    partial void OnAuthNameChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnCompanyFromChanging(string value);
    partial void OnCompanyFromChanged();
    partial void OnInWordsChanging(string value);
    partial void OnInWordsChanged();
    partial void OnLogoChanging(bool value);
    partial void OnLogoChanged();
    partial void OnHeaderChanging(bool value);
    partial void OnHeaderChanged();
    partial void OnFooterChanging(bool value);
    partial void OnFooterChanged();
    #endregion
		
		public DebitNote()
		{
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTo", DbType="NVarChar(300)")]
		public string CompanyTo
		{
			get
			{
				return this._CompanyTo;
			}
			set
			{
				if ((this._CompanyTo != value))
				{
					this.OnCompanyToChanging(value);
					this.SendPropertyChanging();
					this._CompanyTo = value;
					this.SendPropertyChanged("CompanyTo");
					this.OnCompanyToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitNo", DbType="NVarChar(50)")]
		public string DebitNo
		{
			get
			{
				return this._DebitNo;
			}
			set
			{
				if ((this._DebitNo != value))
				{
					this.OnDebitNoChanging(value);
					this.SendPropertyChanging();
					this._DebitNo = value;
					this.SendPropertyChanged("DebitNo");
					this.OnDebitNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DebitDate
		{
			get
			{
				return this._DebitDate;
			}
			set
			{
				if ((this._DebitDate != value))
				{
					this.OnDebitDateChanging(value);
					this.SendPropertyChanging();
					this._DebitDate = value;
					this.SendPropertyChanged("DebitDate");
					this.OnDebitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitTerms", DbType="NVarChar(50)")]
		public string DebitTerms
		{
			get
			{
				return this._DebitTerms;
			}
			set
			{
				if ((this._DebitTerms != value))
				{
					this.OnDebitTermsChanging(value);
					this.SendPropertyChanging();
					this._DebitTerms = value;
					this.SendPropertyChanged("DebitTerms");
					this.OnDebitTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightNo", DbType="NVarChar(50)")]
		public string FlightNo
		{
			get
			{
				return this._FlightNo;
			}
			set
			{
				if ((this._FlightNo != value))
				{
					this.OnFlightNoChanging(value);
					this.SendPropertyChanging();
					this._FlightNo = value;
					this.SendPropertyChanged("FlightNo");
					this.OnFlightNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAWB_HBL", DbType="NVarChar(50)")]
		public string HAWB_HBL
		{
			get
			{
				return this._HAWB_HBL;
			}
			set
			{
				if ((this._HAWB_HBL != value))
				{
					this.OnHAWB_HBLChanging(value);
					this.SendPropertyChanging();
					this._HAWB_HBL = value;
					this.SendPropertyChanged("HAWB_HBL");
					this.OnHAWB_HBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="NVarChar(200)")]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(200)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pieces", DbType="NVarChar(50)")]
		public string Pieces
		{
			get
			{
				return this._Pieces;
			}
			set
			{
				if ((this._Pieces != value))
				{
					this.OnPiecesChanging(value);
					this.SendPropertyChanging();
					this._Pieces = value;
					this.SendPropertyChanged("Pieces");
					this.OnPiecesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitUSD", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DebitUSD
		{
			get
			{
				return this._DebitUSD;
			}
			set
			{
				if ((this._DebitUSD != value))
				{
					this.OnDebitUSDChanging(value);
					this.SendPropertyChanging();
					this._DebitUSD = value;
					this.SendPropertyChanged("DebitUSD");
					this.OnDebitUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthName", DbType="NVarChar(50)")]
		public string AuthName
		{
			get
			{
				return this._AuthName;
			}
			set
			{
				if ((this._AuthName != value))
				{
					this.OnAuthNameChanging(value);
					this.SendPropertyChanging();
					this._AuthName = value;
					this.SendPropertyChanged("AuthName");
					this.OnAuthNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyFrom", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string CompanyFrom
		{
			get
			{
				return this._CompanyFrom;
			}
			set
			{
				if ((this._CompanyFrom != value))
				{
					this.OnCompanyFromChanging(value);
					this.SendPropertyChanging();
					this._CompanyFrom = value;
					this.SendPropertyChanged("CompanyFrom");
					this.OnCompanyFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InWords", DbType="NVarChar(300)")]
		public string InWords
		{
			get
			{
				return this._InWords;
			}
			set
			{
				if ((this._InWords != value))
				{
					this.OnInWordsChanging(value);
					this.SendPropertyChanging();
					this._InWords = value;
					this.SendPropertyChanged("InWords");
					this.OnInWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Bit NOT NULL")]
		public bool Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="Bit NOT NULL")]
		public bool Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Footer", DbType="Bit NOT NULL")]
		public bool Footer
		{
			get
			{
				return this._Footer;
			}
			set
			{
				if ((this._Footer != value))
				{
					this.OnFooterChanging(value);
					this.SendPropertyChanging();
					this._Footer = value;
					this.SendPropertyChanged("Footer");
					this.OnFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_DebitNote", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.DebitNotes.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.DebitNotes.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _DeptName;
		
		private string _Description;
		
		private string _DeptCode;
		
		private string _DeptFunction;
		
		private System.Nullable<long> _ComId;
		
		private bool _IsActive;
		
		private EntitySet<SalePlan> _SalePlans;
		
		private EntitySet<Shipment> _Shipments;
		
		private EntitySet<User> _Users;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDeptNameChanging(string value);
    partial void OnDeptNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeptCodeChanging(string value);
    partial void OnDeptCodeChanged();
    partial void OnDeptFunctionChanging(string value);
    partial void OnDeptFunctionChanged();
    partial void OnComIdChanging(System.Nullable<long> value);
    partial void OnComIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Department()
		{
			this._SalePlans = new EntitySet<SalePlan>(new Action<SalePlan>(this.attach_SalePlans), new Action<SalePlan>(this.detach_SalePlans));
			this._Shipments = new EntitySet<Shipment>(new Action<Shipment>(this.attach_Shipments), new Action<Shipment>(this.detach_Shipments));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(100)")]
		public string DeptName
		{
			get
			{
				return this._DeptName;
			}
			set
			{
				if ((this._DeptName != value))
				{
					this.OnDeptNameChanging(value);
					this.SendPropertyChanging();
					this._DeptName = value;
					this.SendPropertyChanged("DeptName");
					this.OnDeptNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptCode", DbType="NVarChar(50)")]
		public string DeptCode
		{
			get
			{
				return this._DeptCode;
			}
			set
			{
				if ((this._DeptCode != value))
				{
					this.OnDeptCodeChanging(value);
					this.SendPropertyChanging();
					this._DeptCode = value;
					this.SendPropertyChanged("DeptCode");
					this.OnDeptCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptFunction", DbType="NVarChar(50)")]
		public string DeptFunction
		{
			get
			{
				return this._DeptFunction;
			}
			set
			{
				if ((this._DeptFunction != value))
				{
					this.OnDeptFunctionChanging(value);
					this.SendPropertyChanging();
					this._DeptFunction = value;
					this.SendPropertyChanged("DeptFunction");
					this.OnDeptFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComId", DbType="BigInt")]
		public System.Nullable<long> ComId
		{
			get
			{
				return this._ComId;
			}
			set
			{
				if ((this._ComId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComIdChanging(value);
					this.SendPropertyChanging();
					this._ComId = value;
					this.SendPropertyChanged("ComId");
					this.OnComIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_SalePlan", Storage="_SalePlans", ThisKey="Id", OtherKey="DeptId")]
		public EntitySet<SalePlan> SalePlans
		{
			get
			{
				return this._SalePlans;
			}
			set
			{
				this._SalePlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Shipment", Storage="_Shipments", ThisKey="Id", OtherKey="DeptId")]
		public EntitySet<Shipment> Shipments
		{
			get
			{
				return this._Shipments;
			}
			set
			{
				this._Shipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_User", Storage="_Users", ThisKey="Id", OtherKey="DeptId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Department", Storage="_Company", ThisKey="ComId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._ComId = value.Id;
					}
					else
					{
						this._ComId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalePlans(SalePlan entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_SalePlans(SalePlan entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DT81")]
	public partial class DT81 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _VoucherID;
		
		private int _RowID;
		
		private System.Nullable<long> _ProductID;
		
		private string _UOM;
		
		private System.Nullable<int> _WarehouseID;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _VATTaxRate;
		
		private System.Nullable<decimal> _VATTax;
		
		private System.Nullable<decimal> _TransportFee;
		
		private System.Nullable<decimal> _Fee1;
		
		private System.Nullable<decimal> _Fee2;
		
		private System.Nullable<decimal> _T_Fee;
		
		private System.Nullable<decimal> _TT;
		
		private System.Nullable<decimal> _Price0;
		
		private System.Nullable<decimal> _Amount0;
		
		private string _Description;
		
		private System.Nullable<decimal> _VnPrice;
		
		private EntityRef<Warehouse> _Warehouse;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<MT81> _MT81;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherIDChanging(long value);
    partial void OnVoucherIDChanged();
    partial void OnRowIDChanging(int value);
    partial void OnRowIDChanged();
    partial void OnProductIDChanging(System.Nullable<long> value);
    partial void OnProductIDChanged();
    partial void OnUOMChanging(string value);
    partial void OnUOMChanged();
    partial void OnWarehouseIDChanging(System.Nullable<int> value);
    partial void OnWarehouseIDChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnVATTaxRateChanging(System.Nullable<decimal> value);
    partial void OnVATTaxRateChanged();
    partial void OnVATTaxChanging(System.Nullable<decimal> value);
    partial void OnVATTaxChanged();
    partial void OnTransportFeeChanging(System.Nullable<decimal> value);
    partial void OnTransportFeeChanged();
    partial void OnFee1Changing(System.Nullable<decimal> value);
    partial void OnFee1Changed();
    partial void OnFee2Changing(System.Nullable<decimal> value);
    partial void OnFee2Changed();
    partial void OnT_FeeChanging(System.Nullable<decimal> value);
    partial void OnT_FeeChanged();
    partial void OnTTChanging(System.Nullable<decimal> value);
    partial void OnTTChanged();
    partial void OnPrice0Changing(System.Nullable<decimal> value);
    partial void OnPrice0Changed();
    partial void OnAmount0Changing(System.Nullable<decimal> value);
    partial void OnAmount0Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVnPriceChanging(System.Nullable<decimal> value);
    partial void OnVnPriceChanged();
    #endregion
		
		public DT81()
		{
			this._Warehouse = default(EntityRef<Warehouse>);
			this._Product = default(EntityRef<Product>);
			this._MT81 = default(EntityRef<MT81>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long VoucherID
		{
			get
			{
				return this._VoucherID;
			}
			set
			{
				if ((this._VoucherID != value))
				{
					if (this._MT81.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoucherIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherID = value;
					this.SendPropertyChanged("VoucherID");
					this.OnVoucherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RowID
		{
			get
			{
				return this._RowID;
			}
			set
			{
				if ((this._RowID != value))
				{
					this.OnRowIDChanging(value);
					this.SendPropertyChanging();
					this._RowID = value;
					this.SendPropertyChanged("RowID");
					this.OnRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="BigInt")]
		public System.Nullable<long> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOM", DbType="NChar(16)")]
		public string UOM
		{
			get
			{
				return this._UOM;
			}
			set
			{
				if ((this._UOM != value))
				{
					this.OnUOMChanging(value);
					this.SendPropertyChanging();
					this._UOM = value;
					this.SendPropertyChanged("UOM");
					this.OnUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseID", DbType="Int")]
		public System.Nullable<int> WarehouseID
		{
			get
			{
				return this._WarehouseID;
			}
			set
			{
				if ((this._WarehouseID != value))
				{
					if (this._Warehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseID = value;
					this.SendPropertyChanged("WarehouseID");
					this.OnWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(12,3)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATTaxRate", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> VATTaxRate
		{
			get
			{
				return this._VATTaxRate;
			}
			set
			{
				if ((this._VATTaxRate != value))
				{
					this.OnVATTaxRateChanging(value);
					this.SendPropertyChanging();
					this._VATTaxRate = value;
					this.SendPropertyChanged("VATTaxRate");
					this.OnVATTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATTax", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> VATTax
		{
			get
			{
				return this._VATTax;
			}
			set
			{
				if ((this._VATTax != value))
				{
					this.OnVATTaxChanging(value);
					this.SendPropertyChanging();
					this._VATTax = value;
					this.SendPropertyChanged("VATTax");
					this.OnVATTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportFee", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> TransportFee
		{
			get
			{
				return this._TransportFee;
			}
			set
			{
				if ((this._TransportFee != value))
				{
					this.OnTransportFeeChanging(value);
					this.SendPropertyChanging();
					this._TransportFee = value;
					this.SendPropertyChanged("TransportFee");
					this.OnTransportFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fee1", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> Fee1
		{
			get
			{
				return this._Fee1;
			}
			set
			{
				if ((this._Fee1 != value))
				{
					this.OnFee1Changing(value);
					this.SendPropertyChanging();
					this._Fee1 = value;
					this.SendPropertyChanged("Fee1");
					this.OnFee1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fee2", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> Fee2
		{
			get
			{
				return this._Fee2;
			}
			set
			{
				if ((this._Fee2 != value))
				{
					this.OnFee2Changing(value);
					this.SendPropertyChanging();
					this._Fee2 = value;
					this.SendPropertyChanged("Fee2");
					this.OnFee2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Fee", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_Fee
		{
			get
			{
				return this._T_Fee;
			}
			set
			{
				if ((this._T_Fee != value))
				{
					this.OnT_FeeChanging(value);
					this.SendPropertyChanging();
					this._T_Fee = value;
					this.SendPropertyChanged("T_Fee");
					this.OnT_FeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TT", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> TT
		{
			get
			{
				return this._TT;
			}
			set
			{
				if ((this._TT != value))
				{
					this.OnTTChanging(value);
					this.SendPropertyChanging();
					this._TT = value;
					this.SendPropertyChanged("TT");
					this.OnTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price0", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> Price0
		{
			get
			{
				return this._Price0;
			}
			set
			{
				if ((this._Price0 != value))
				{
					this.OnPrice0Changing(value);
					this.SendPropertyChanging();
					this._Price0 = value;
					this.SendPropertyChanged("Price0");
					this.OnPrice0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount0", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Amount0
		{
			get
			{
				return this._Amount0;
			}
			set
			{
				if ((this._Amount0 != value))
				{
					this.OnAmount0Changing(value);
					this.SendPropertyChanging();
					this._Amount0 = value;
					this.SendPropertyChanged("Amount0");
					this.OnAmount0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPrice", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> VnPrice
		{
			get
			{
				return this._VnPrice;
			}
			set
			{
				if ((this._VnPrice != value))
				{
					this.OnVnPriceChanging(value);
					this.SendPropertyChanging();
					this._VnPrice = value;
					this.SendPropertyChanged("VnPrice");
					this.OnVnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_DT81", Storage="_Warehouse", ThisKey="WarehouseID", OtherKey="Id", IsForeignKey=true)]
		public Warehouse Warehouse
		{
			get
			{
				return this._Warehouse.Entity;
			}
			set
			{
				Warehouse previousValue = this._Warehouse.Entity;
				if (((previousValue != value) 
							|| (this._Warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Warehouse.Entity = null;
						previousValue.DT81s.Remove(this);
					}
					this._Warehouse.Entity = value;
					if ((value != null))
					{
						value.DT81s.Add(this);
						this._WarehouseID = value.Id;
					}
					else
					{
						this._WarehouseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Warehouse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DT81", Storage="_Product", ThisKey="ProductID", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.DT81s.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.DT81s.Add(this);
						this._ProductID = value.Id;
					}
					else
					{
						this._ProductID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MT81_DT81", Storage="_MT81", ThisKey="VoucherID", OtherKey="VoucherID", IsForeignKey=true)]
		public MT81 MT81
		{
			get
			{
				return this._MT81.Entity;
			}
			set
			{
				MT81 previousValue = this._MT81.Entity;
				if (((previousValue != value) 
							|| (this._MT81.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MT81.Entity = null;
						previousValue.DT81s.Remove(this);
					}
					this._MT81.Entity = value;
					if ((value != null))
					{
						value.DT81s.Add(this);
						this._VoucherID = value.VoucherID;
					}
					else
					{
						this._VoucherID = default(long);
					}
					this.SendPropertyChanged("MT81");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Freight")]
	public partial class Freight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _AirlineId;
		
		private System.Nullable<System.DateTime> _ValidDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<long> _AgentId;
		
		private System.Nullable<long> _DepartureId;
		
		private System.Nullable<long> _DestinationId;
		
		private string _ServiceName;
		
		private string _Type;
		
		private string _Remark;
		
		private int _ServiceId;
		
		private EntityRef<Agent> _Agent;
		
		private EntityRef<Area> _Area;
		
		private EntityRef<Area> _Area1;
		
		private EntityRef<CarrierAirLine> _CarrierAirLine;
		
		private EntityRef<User> _User;
		
		private EntityRef<ServicesType> _ServicesType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAirlineIdChanging(System.Nullable<long> value);
    partial void OnAirlineIdChanged();
    partial void OnValidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnValidDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnAgentIdChanging(System.Nullable<long> value);
    partial void OnAgentIdChanged();
    partial void OnDepartureIdChanging(System.Nullable<long> value);
    partial void OnDepartureIdChanged();
    partial void OnDestinationIdChanging(System.Nullable<long> value);
    partial void OnDestinationIdChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnServiceIdChanging(int value);
    partial void OnServiceIdChanged();
    #endregion
		
		public Freight()
		{
			this._Agent = default(EntityRef<Agent>);
			this._Area = default(EntityRef<Area>);
			this._Area1 = default(EntityRef<Area>);
			this._CarrierAirLine = default(EntityRef<CarrierAirLine>);
			this._User = default(EntityRef<User>);
			this._ServicesType = default(EntityRef<ServicesType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirlineId", DbType="BigInt")]
		public System.Nullable<long> AirlineId
		{
			get
			{
				return this._AirlineId;
			}
			set
			{
				if ((this._AirlineId != value))
				{
					if (this._CarrierAirLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAirlineIdChanging(value);
					this.SendPropertyChanging();
					this._AirlineId = value;
					this.SendPropertyChanged("AirlineId");
					this.OnAirlineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ValidDate
		{
			get
			{
				return this._ValidDate;
			}
			set
			{
				if ((this._ValidDate != value))
				{
					this.OnValidDateChanging(value);
					this.SendPropertyChanging();
					this._ValidDate = value;
					this.SendPropertyChanged("ValidDate");
					this.OnValidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentId", DbType="BigInt")]
		public System.Nullable<long> AgentId
		{
			get
			{
				return this._AgentId;
			}
			set
			{
				if ((this._AgentId != value))
				{
					if (this._Agent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgentIdChanging(value);
					this.SendPropertyChanging();
					this._AgentId = value;
					this.SendPropertyChanged("AgentId");
					this.OnAgentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureId", DbType="BigInt")]
		public System.Nullable<long> DepartureId
		{
			get
			{
				return this._DepartureId;
			}
			set
			{
				if ((this._DepartureId != value))
				{
					if (this._Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartureIdChanging(value);
					this.SendPropertyChanging();
					this._DepartureId = value;
					this.SendPropertyChanged("DepartureId");
					this.OnDepartureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationId", DbType="BigInt")]
		public System.Nullable<long> DestinationId
		{
			get
			{
				return this._DestinationId;
			}
			set
			{
				if ((this._DestinationId != value))
				{
					if (this._Area1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDestinationIdChanging(value);
					this.SendPropertyChanging();
					this._DestinationId = value;
					this.SendPropertyChanged("DestinationId");
					this.OnDestinationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(50)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="Int")]
		public int ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					if (this._ServicesType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Freight", Storage="_Agent", ThisKey="AgentId", OtherKey="Id", IsForeignKey=true)]
		public Agent Agent
		{
			get
			{
				return this._Agent.Entity;
			}
			set
			{
				Agent previousValue = this._Agent.Entity;
				if (((previousValue != value) 
							|| (this._Agent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agent.Entity = null;
						previousValue.Freights.Remove(this);
					}
					this._Agent.Entity = value;
					if ((value != null))
					{
						value.Freights.Add(this);
						this._AgentId = value.Id;
					}
					else
					{
						this._AgentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Agent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Freight", Storage="_Area", ThisKey="DepartureId", OtherKey="Id", IsForeignKey=true)]
		public Area Area
		{
			get
			{
				return this._Area.Entity;
			}
			set
			{
				Area previousValue = this._Area.Entity;
				if (((previousValue != value) 
							|| (this._Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area.Entity = null;
						previousValue.Freights.Remove(this);
					}
					this._Area.Entity = value;
					if ((value != null))
					{
						value.Freights.Add(this);
						this._DepartureId = value.Id;
					}
					else
					{
						this._DepartureId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Freight1", Storage="_Area1", ThisKey="DestinationId", OtherKey="Id", IsForeignKey=true)]
		public Area Area1
		{
			get
			{
				return this._Area1.Entity;
			}
			set
			{
				Area previousValue = this._Area1.Entity;
				if (((previousValue != value) 
							|| (this._Area1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area1.Entity = null;
						previousValue.Freights1.Remove(this);
					}
					this._Area1.Entity = value;
					if ((value != null))
					{
						value.Freights1.Add(this);
						this._DestinationId = value.Id;
					}
					else
					{
						this._DestinationId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Area1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarrierAirLine_Freight", Storage="_CarrierAirLine", ThisKey="AirlineId", OtherKey="Id", IsForeignKey=true)]
		public CarrierAirLine CarrierAirLine
		{
			get
			{
				return this._CarrierAirLine.Entity;
			}
			set
			{
				CarrierAirLine previousValue = this._CarrierAirLine.Entity;
				if (((previousValue != value) 
							|| (this._CarrierAirLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarrierAirLine.Entity = null;
						previousValue.Freights.Remove(this);
					}
					this._CarrierAirLine.Entity = value;
					if ((value != null))
					{
						value.Freights.Add(this);
						this._AirlineId = value.Id;
					}
					else
					{
						this._AirlineId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CarrierAirLine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Freight", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Freights.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Freights.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicesType_Freight", Storage="_ServicesType", ThisKey="ServiceId", OtherKey="Id", IsForeignKey=true)]
		public ServicesType ServicesType
		{
			get
			{
				return this._ServicesType.Entity;
			}
			set
			{
				ServicesType previousValue = this._ServicesType.Entity;
				if (((previousValue != value) 
							|| (this._ServicesType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicesType.Entity = null;
						previousValue.Freights.Remove(this);
					}
					this._ServicesType.Entity = value;
					if ((value != null))
					{
						value.Freights.Add(this);
						this._ServiceId = value.Id;
					}
					else
					{
						this._ServiceId = default(int);
					}
					this.SendPropertyChanged("ServicesType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HAirWayBill")]
	public partial class HAirWayBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ShipmentId;
		
		private string _IssueBy;
		
		private string _ShipperAccount;
		
		private string _ShipperName;
		
		private string _CneeAccount;
		
		private string _CneeName;
		
		private string _AccountingInformation;
		
		private string _Issuing;
		
		private string _AgenIATACode;
		
		private string _AccountNo;
		
		private string _AirportofDeparture;
		
		private string _IssueTo;
		
		private string _ByfirstCarrier;
		
		private string _IssueTo2;
		
		private string _IssueTo3;
		
		private string _IssueBy2;
		
		private string _IssueBy3;
		
		private string _IssueCurrency;
		
		private string _IssueCHGSCode;
		
		private string _IssuePPD;
		
		private string _IssueCOLL;
		
		private string _IssuePPD2;
		
		private string _IssueCOLL2;
		
		private string _CarriageValue;
		
		private string _CustomsValue;
		
		private string _AirportofDestination;
		
		private string _Flight;
		
		private string _Date;
		
		private string _AmountofInsurance;
		
		private string _HandlingInformation;
		
		private string _NofPieces;
		
		private string _NofPieces2;
		
		private string _GrossWeight;
		
		private string _GrossWeight2;
		
		private string _Kglb;
		
		private string _RateClass;
		
		private string _CommodityItemNo;
		
		private string _ChargeableWeight;
		
		private string _RateCharge;
		
		private string _Total;
		
		private string _Total2;
		
		private string _QuantityofGoods;
		
		private string _WeightPrepaid;
		
		private string _WeightCollect;
		
		private string _ValuationPrepaid;
		
		private string _ValuationCollect;
		
		private string _TaxPrepaid;
		
		private string _TaxCollect;
		
		private string _AgentPrepaid;
		
		private string _AgentCollect;
		
		private string _CarrierPrepaid;
		
		private string _CarrierCollect;
		
		private string _CurrencyConversion;
		
		private string _CCChargesinDest;
		
		private string _ChargesatDestination;
		
		private string _OtherCharges;
		
		private string _OtherCharges1;
		
		private string _OtherCharges2;
		
		private string _SignatureShippe;
		
		private string _Executedon;
		
		private string _Executedat;
		
		private string _TotalCollect;
		
		private string _TotalPrepaid;
		
		private string _MasterAWB;
		
		private string _HouseAWB;
		
		private string _TotalCollectCharges;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnIssueByChanging(string value);
    partial void OnIssueByChanged();
    partial void OnShipperAccountChanging(string value);
    partial void OnShipperAccountChanged();
    partial void OnShipperNameChanging(string value);
    partial void OnShipperNameChanged();
    partial void OnCneeAccountChanging(string value);
    partial void OnCneeAccountChanged();
    partial void OnCneeNameChanging(string value);
    partial void OnCneeNameChanged();
    partial void OnAccountingInformationChanging(string value);
    partial void OnAccountingInformationChanged();
    partial void OnIssuingChanging(string value);
    partial void OnIssuingChanged();
    partial void OnAgenIATACodeChanging(string value);
    partial void OnAgenIATACodeChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnAirportofDepartureChanging(string value);
    partial void OnAirportofDepartureChanged();
    partial void OnIssueToChanging(string value);
    partial void OnIssueToChanged();
    partial void OnByfirstCarrierChanging(string value);
    partial void OnByfirstCarrierChanged();
    partial void OnIssueTo2Changing(string value);
    partial void OnIssueTo2Changed();
    partial void OnIssueTo3Changing(string value);
    partial void OnIssueTo3Changed();
    partial void OnIssueBy2Changing(string value);
    partial void OnIssueBy2Changed();
    partial void OnIssueBy3Changing(string value);
    partial void OnIssueBy3Changed();
    partial void OnIssueCurrencyChanging(string value);
    partial void OnIssueCurrencyChanged();
    partial void OnIssueCHGSCodeChanging(string value);
    partial void OnIssueCHGSCodeChanged();
    partial void OnIssuePPDChanging(string value);
    partial void OnIssuePPDChanged();
    partial void OnIssueCOLLChanging(string value);
    partial void OnIssueCOLLChanged();
    partial void OnIssuePPD2Changing(string value);
    partial void OnIssuePPD2Changed();
    partial void OnIssueCOLL2Changing(string value);
    partial void OnIssueCOLL2Changed();
    partial void OnCarriageValueChanging(string value);
    partial void OnCarriageValueChanged();
    partial void OnCustomsValueChanging(string value);
    partial void OnCustomsValueChanged();
    partial void OnAirportofDestinationChanging(string value);
    partial void OnAirportofDestinationChanged();
    partial void OnFlightChanging(string value);
    partial void OnFlightChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnAmountofInsuranceChanging(string value);
    partial void OnAmountofInsuranceChanged();
    partial void OnHandlingInformationChanging(string value);
    partial void OnHandlingInformationChanged();
    partial void OnNofPiecesChanging(string value);
    partial void OnNofPiecesChanged();
    partial void OnNofPieces2Changing(string value);
    partial void OnNofPieces2Changed();
    partial void OnGrossWeightChanging(string value);
    partial void OnGrossWeightChanged();
    partial void OnGrossWeight2Changing(string value);
    partial void OnGrossWeight2Changed();
    partial void OnKglbChanging(string value);
    partial void OnKglbChanged();
    partial void OnRateClassChanging(string value);
    partial void OnRateClassChanged();
    partial void OnCommodityItemNoChanging(string value);
    partial void OnCommodityItemNoChanged();
    partial void OnChargeableWeightChanging(string value);
    partial void OnChargeableWeightChanged();
    partial void OnRateChargeChanging(string value);
    partial void OnRateChargeChanged();
    partial void OnTotalChanging(string value);
    partial void OnTotalChanged();
    partial void OnTotal2Changing(string value);
    partial void OnTotal2Changed();
    partial void OnQuantityofGoodsChanging(string value);
    partial void OnQuantityofGoodsChanged();
    partial void OnWeightPrepaidChanging(string value);
    partial void OnWeightPrepaidChanged();
    partial void OnWeightCollectChanging(string value);
    partial void OnWeightCollectChanged();
    partial void OnValuationPrepaidChanging(string value);
    partial void OnValuationPrepaidChanged();
    partial void OnValuationCollectChanging(string value);
    partial void OnValuationCollectChanged();
    partial void OnTaxPrepaidChanging(string value);
    partial void OnTaxPrepaidChanged();
    partial void OnTaxCollectChanging(string value);
    partial void OnTaxCollectChanged();
    partial void OnAgentPrepaidChanging(string value);
    partial void OnAgentPrepaidChanged();
    partial void OnAgentCollectChanging(string value);
    partial void OnAgentCollectChanged();
    partial void OnCarrierPrepaidChanging(string value);
    partial void OnCarrierPrepaidChanged();
    partial void OnCarrierCollectChanging(string value);
    partial void OnCarrierCollectChanged();
    partial void OnCurrencyConversionChanging(string value);
    partial void OnCurrencyConversionChanged();
    partial void OnCCChargesinDestChanging(string value);
    partial void OnCCChargesinDestChanged();
    partial void OnChargesatDestinationChanging(string value);
    partial void OnChargesatDestinationChanged();
    partial void OnOtherChargesChanging(string value);
    partial void OnOtherChargesChanged();
    partial void OnOtherCharges1Changing(string value);
    partial void OnOtherCharges1Changed();
    partial void OnOtherCharges2Changing(string value);
    partial void OnOtherCharges2Changed();
    partial void OnSignatureShippeChanging(string value);
    partial void OnSignatureShippeChanged();
    partial void OnExecutedonChanging(string value);
    partial void OnExecutedonChanged();
    partial void OnExecutedatChanging(string value);
    partial void OnExecutedatChanged();
    partial void OnTotalCollectChanging(string value);
    partial void OnTotalCollectChanged();
    partial void OnTotalPrepaidChanging(string value);
    partial void OnTotalPrepaidChanged();
    partial void OnMasterAWBChanging(string value);
    partial void OnMasterAWBChanged();
    partial void OnHouseAWBChanging(string value);
    partial void OnHouseAWBChanged();
    partial void OnTotalCollectChargesChanging(string value);
    partial void OnTotalCollectChargesChanged();
    #endregion
		
		public HAirWayBill()
		{
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueBy", DbType="NVarChar(1000)")]
		public string IssueBy
		{
			get
			{
				return this._IssueBy;
			}
			set
			{
				if ((this._IssueBy != value))
				{
					this.OnIssueByChanging(value);
					this.SendPropertyChanging();
					this._IssueBy = value;
					this.SendPropertyChanged("IssueBy");
					this.OnIssueByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipperAccount", DbType="NVarChar(50)")]
		public string ShipperAccount
		{
			get
			{
				return this._ShipperAccount;
			}
			set
			{
				if ((this._ShipperAccount != value))
				{
					this.OnShipperAccountChanging(value);
					this.SendPropertyChanging();
					this._ShipperAccount = value;
					this.SendPropertyChanged("ShipperAccount");
					this.OnShipperAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipperName", DbType="NVarChar(1000)")]
		public string ShipperName
		{
			get
			{
				return this._ShipperName;
			}
			set
			{
				if ((this._ShipperName != value))
				{
					this.OnShipperNameChanging(value);
					this.SendPropertyChanging();
					this._ShipperName = value;
					this.SendPropertyChanged("ShipperName");
					this.OnShipperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CneeAccount", DbType="NVarChar(50)")]
		public string CneeAccount
		{
			get
			{
				return this._CneeAccount;
			}
			set
			{
				if ((this._CneeAccount != value))
				{
					this.OnCneeAccountChanging(value);
					this.SendPropertyChanging();
					this._CneeAccount = value;
					this.SendPropertyChanged("CneeAccount");
					this.OnCneeAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CneeName", DbType="NVarChar(1000)")]
		public string CneeName
		{
			get
			{
				return this._CneeName;
			}
			set
			{
				if ((this._CneeName != value))
				{
					this.OnCneeNameChanging(value);
					this.SendPropertyChanging();
					this._CneeName = value;
					this.SendPropertyChanged("CneeName");
					this.OnCneeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingInformation", DbType="NVarChar(1000)")]
		public string AccountingInformation
		{
			get
			{
				return this._AccountingInformation;
			}
			set
			{
				if ((this._AccountingInformation != value))
				{
					this.OnAccountingInformationChanging(value);
					this.SendPropertyChanging();
					this._AccountingInformation = value;
					this.SendPropertyChanged("AccountingInformation");
					this.OnAccountingInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issuing", DbType="NVarChar(1000)")]
		public string Issuing
		{
			get
			{
				return this._Issuing;
			}
			set
			{
				if ((this._Issuing != value))
				{
					this.OnIssuingChanging(value);
					this.SendPropertyChanging();
					this._Issuing = value;
					this.SendPropertyChanged("Issuing");
					this.OnIssuingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgenIATACode", DbType="NVarChar(50)")]
		public string AgenIATACode
		{
			get
			{
				return this._AgenIATACode;
			}
			set
			{
				if ((this._AgenIATACode != value))
				{
					this.OnAgenIATACodeChanging(value);
					this.SendPropertyChanging();
					this._AgenIATACode = value;
					this.SendPropertyChanged("AgenIATACode");
					this.OnAgenIATACodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="NVarChar(50)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirportofDeparture", DbType="NVarChar(100)")]
		public string AirportofDeparture
		{
			get
			{
				return this._AirportofDeparture;
			}
			set
			{
				if ((this._AirportofDeparture != value))
				{
					this.OnAirportofDepartureChanging(value);
					this.SendPropertyChanging();
					this._AirportofDeparture = value;
					this.SendPropertyChanged("AirportofDeparture");
					this.OnAirportofDepartureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueTo", DbType="NVarChar(50)")]
		public string IssueTo
		{
			get
			{
				return this._IssueTo;
			}
			set
			{
				if ((this._IssueTo != value))
				{
					this.OnIssueToChanging(value);
					this.SendPropertyChanging();
					this._IssueTo = value;
					this.SendPropertyChanged("IssueTo");
					this.OnIssueToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ByfirstCarrier", DbType="NVarChar(50)")]
		public string ByfirstCarrier
		{
			get
			{
				return this._ByfirstCarrier;
			}
			set
			{
				if ((this._ByfirstCarrier != value))
				{
					this.OnByfirstCarrierChanging(value);
					this.SendPropertyChanging();
					this._ByfirstCarrier = value;
					this.SendPropertyChanged("ByfirstCarrier");
					this.OnByfirstCarrierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueTo2", DbType="NVarChar(50)")]
		public string IssueTo2
		{
			get
			{
				return this._IssueTo2;
			}
			set
			{
				if ((this._IssueTo2 != value))
				{
					this.OnIssueTo2Changing(value);
					this.SendPropertyChanging();
					this._IssueTo2 = value;
					this.SendPropertyChanged("IssueTo2");
					this.OnIssueTo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueTo3", DbType="NVarChar(50)")]
		public string IssueTo3
		{
			get
			{
				return this._IssueTo3;
			}
			set
			{
				if ((this._IssueTo3 != value))
				{
					this.OnIssueTo3Changing(value);
					this.SendPropertyChanging();
					this._IssueTo3 = value;
					this.SendPropertyChanged("IssueTo3");
					this.OnIssueTo3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueBy2", DbType="NVarChar(50)")]
		public string IssueBy2
		{
			get
			{
				return this._IssueBy2;
			}
			set
			{
				if ((this._IssueBy2 != value))
				{
					this.OnIssueBy2Changing(value);
					this.SendPropertyChanging();
					this._IssueBy2 = value;
					this.SendPropertyChanged("IssueBy2");
					this.OnIssueBy2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueBy3", DbType="NVarChar(50)")]
		public string IssueBy3
		{
			get
			{
				return this._IssueBy3;
			}
			set
			{
				if ((this._IssueBy3 != value))
				{
					this.OnIssueBy3Changing(value);
					this.SendPropertyChanging();
					this._IssueBy3 = value;
					this.SendPropertyChanged("IssueBy3");
					this.OnIssueBy3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueCurrency", DbType="NVarChar(50)")]
		public string IssueCurrency
		{
			get
			{
				return this._IssueCurrency;
			}
			set
			{
				if ((this._IssueCurrency != value))
				{
					this.OnIssueCurrencyChanging(value);
					this.SendPropertyChanging();
					this._IssueCurrency = value;
					this.SendPropertyChanged("IssueCurrency");
					this.OnIssueCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueCHGSCode", DbType="NVarChar(50)")]
		public string IssueCHGSCode
		{
			get
			{
				return this._IssueCHGSCode;
			}
			set
			{
				if ((this._IssueCHGSCode != value))
				{
					this.OnIssueCHGSCodeChanging(value);
					this.SendPropertyChanging();
					this._IssueCHGSCode = value;
					this.SendPropertyChanged("IssueCHGSCode");
					this.OnIssueCHGSCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuePPD", DbType="NVarChar(50)")]
		public string IssuePPD
		{
			get
			{
				return this._IssuePPD;
			}
			set
			{
				if ((this._IssuePPD != value))
				{
					this.OnIssuePPDChanging(value);
					this.SendPropertyChanging();
					this._IssuePPD = value;
					this.SendPropertyChanged("IssuePPD");
					this.OnIssuePPDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueCOLL", DbType="NVarChar(50)")]
		public string IssueCOLL
		{
			get
			{
				return this._IssueCOLL;
			}
			set
			{
				if ((this._IssueCOLL != value))
				{
					this.OnIssueCOLLChanging(value);
					this.SendPropertyChanging();
					this._IssueCOLL = value;
					this.SendPropertyChanged("IssueCOLL");
					this.OnIssueCOLLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuePPD2", DbType="NVarChar(50)")]
		public string IssuePPD2
		{
			get
			{
				return this._IssuePPD2;
			}
			set
			{
				if ((this._IssuePPD2 != value))
				{
					this.OnIssuePPD2Changing(value);
					this.SendPropertyChanging();
					this._IssuePPD2 = value;
					this.SendPropertyChanged("IssuePPD2");
					this.OnIssuePPD2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueCOLL2", DbType="NVarChar(50)")]
		public string IssueCOLL2
		{
			get
			{
				return this._IssueCOLL2;
			}
			set
			{
				if ((this._IssueCOLL2 != value))
				{
					this.OnIssueCOLL2Changing(value);
					this.SendPropertyChanging();
					this._IssueCOLL2 = value;
					this.SendPropertyChanged("IssueCOLL2");
					this.OnIssueCOLL2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarriageValue", DbType="NVarChar(50)")]
		public string CarriageValue
		{
			get
			{
				return this._CarriageValue;
			}
			set
			{
				if ((this._CarriageValue != value))
				{
					this.OnCarriageValueChanging(value);
					this.SendPropertyChanging();
					this._CarriageValue = value;
					this.SendPropertyChanged("CarriageValue");
					this.OnCarriageValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsValue", DbType="NVarChar(50)")]
		public string CustomsValue
		{
			get
			{
				return this._CustomsValue;
			}
			set
			{
				if ((this._CustomsValue != value))
				{
					this.OnCustomsValueChanging(value);
					this.SendPropertyChanging();
					this._CustomsValue = value;
					this.SendPropertyChanged("CustomsValue");
					this.OnCustomsValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirportofDestination", DbType="NVarChar(50)")]
		public string AirportofDestination
		{
			get
			{
				return this._AirportofDestination;
			}
			set
			{
				if ((this._AirportofDestination != value))
				{
					this.OnAirportofDestinationChanging(value);
					this.SendPropertyChanging();
					this._AirportofDestination = value;
					this.SendPropertyChanged("AirportofDestination");
					this.OnAirportofDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flight", DbType="NVarChar(50)")]
		public string Flight
		{
			get
			{
				return this._Flight;
			}
			set
			{
				if ((this._Flight != value))
				{
					this.OnFlightChanging(value);
					this.SendPropertyChanging();
					this._Flight = value;
					this.SendPropertyChanged("Flight");
					this.OnFlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountofInsurance", DbType="NVarChar(50)")]
		public string AmountofInsurance
		{
			get
			{
				return this._AmountofInsurance;
			}
			set
			{
				if ((this._AmountofInsurance != value))
				{
					this.OnAmountofInsuranceChanging(value);
					this.SendPropertyChanging();
					this._AmountofInsurance = value;
					this.SendPropertyChanged("AmountofInsurance");
					this.OnAmountofInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandlingInformation", DbType="NVarChar(1000)")]
		public string HandlingInformation
		{
			get
			{
				return this._HandlingInformation;
			}
			set
			{
				if ((this._HandlingInformation != value))
				{
					this.OnHandlingInformationChanging(value);
					this.SendPropertyChanging();
					this._HandlingInformation = value;
					this.SendPropertyChanged("HandlingInformation");
					this.OnHandlingInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NofPieces", DbType="NVarChar(50)")]
		public string NofPieces
		{
			get
			{
				return this._NofPieces;
			}
			set
			{
				if ((this._NofPieces != value))
				{
					this.OnNofPiecesChanging(value);
					this.SendPropertyChanging();
					this._NofPieces = value;
					this.SendPropertyChanged("NofPieces");
					this.OnNofPiecesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NofPieces2", DbType="NVarChar(50)")]
		public string NofPieces2
		{
			get
			{
				return this._NofPieces2;
			}
			set
			{
				if ((this._NofPieces2 != value))
				{
					this.OnNofPieces2Changing(value);
					this.SendPropertyChanging();
					this._NofPieces2 = value;
					this.SendPropertyChanged("NofPieces2");
					this.OnNofPieces2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="NVarChar(50)")]
		public string GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight2", DbType="NVarChar(50)")]
		public string GrossWeight2
		{
			get
			{
				return this._GrossWeight2;
			}
			set
			{
				if ((this._GrossWeight2 != value))
				{
					this.OnGrossWeight2Changing(value);
					this.SendPropertyChanging();
					this._GrossWeight2 = value;
					this.SendPropertyChanged("GrossWeight2");
					this.OnGrossWeight2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kglb", DbType="NVarChar(50)")]
		public string Kglb
		{
			get
			{
				return this._Kglb;
			}
			set
			{
				if ((this._Kglb != value))
				{
					this.OnKglbChanging(value);
					this.SendPropertyChanging();
					this._Kglb = value;
					this.SendPropertyChanged("Kglb");
					this.OnKglbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateClass", DbType="NVarChar(50)")]
		public string RateClass
		{
			get
			{
				return this._RateClass;
			}
			set
			{
				if ((this._RateClass != value))
				{
					this.OnRateClassChanging(value);
					this.SendPropertyChanging();
					this._RateClass = value;
					this.SendPropertyChanged("RateClass");
					this.OnRateClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommodityItemNo", DbType="NVarChar(1000)")]
		public string CommodityItemNo
		{
			get
			{
				return this._CommodityItemNo;
			}
			set
			{
				if ((this._CommodityItemNo != value))
				{
					this.OnCommodityItemNoChanging(value);
					this.SendPropertyChanging();
					this._CommodityItemNo = value;
					this.SendPropertyChanged("CommodityItemNo");
					this.OnCommodityItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeableWeight", DbType="NVarChar(1000)")]
		public string ChargeableWeight
		{
			get
			{
				return this._ChargeableWeight;
			}
			set
			{
				if ((this._ChargeableWeight != value))
				{
					this.OnChargeableWeightChanging(value);
					this.SendPropertyChanging();
					this._ChargeableWeight = value;
					this.SendPropertyChanged("ChargeableWeight");
					this.OnChargeableWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateCharge", DbType="NVarChar(1000)")]
		public string RateCharge
		{
			get
			{
				return this._RateCharge;
			}
			set
			{
				if ((this._RateCharge != value))
				{
					this.OnRateChargeChanging(value);
					this.SendPropertyChanging();
					this._RateCharge = value;
					this.SendPropertyChanged("RateCharge");
					this.OnRateChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="NVarChar(500)")]
		public string Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total2", DbType="NVarChar(50)")]
		public string Total2
		{
			get
			{
				return this._Total2;
			}
			set
			{
				if ((this._Total2 != value))
				{
					this.OnTotal2Changing(value);
					this.SendPropertyChanging();
					this._Total2 = value;
					this.SendPropertyChanged("Total2");
					this.OnTotal2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityofGoods", DbType="NVarChar(1000)")]
		public string QuantityofGoods
		{
			get
			{
				return this._QuantityofGoods;
			}
			set
			{
				if ((this._QuantityofGoods != value))
				{
					this.OnQuantityofGoodsChanging(value);
					this.SendPropertyChanging();
					this._QuantityofGoods = value;
					this.SendPropertyChanged("QuantityofGoods");
					this.OnQuantityofGoodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightPrepaid", DbType="NVarChar(50)")]
		public string WeightPrepaid
		{
			get
			{
				return this._WeightPrepaid;
			}
			set
			{
				if ((this._WeightPrepaid != value))
				{
					this.OnWeightPrepaidChanging(value);
					this.SendPropertyChanging();
					this._WeightPrepaid = value;
					this.SendPropertyChanged("WeightPrepaid");
					this.OnWeightPrepaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightCollect", DbType="NVarChar(50)")]
		public string WeightCollect
		{
			get
			{
				return this._WeightCollect;
			}
			set
			{
				if ((this._WeightCollect != value))
				{
					this.OnWeightCollectChanging(value);
					this.SendPropertyChanging();
					this._WeightCollect = value;
					this.SendPropertyChanged("WeightCollect");
					this.OnWeightCollectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValuationPrepaid", DbType="NVarChar(50)")]
		public string ValuationPrepaid
		{
			get
			{
				return this._ValuationPrepaid;
			}
			set
			{
				if ((this._ValuationPrepaid != value))
				{
					this.OnValuationPrepaidChanging(value);
					this.SendPropertyChanging();
					this._ValuationPrepaid = value;
					this.SendPropertyChanged("ValuationPrepaid");
					this.OnValuationPrepaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValuationCollect", DbType="NVarChar(50)")]
		public string ValuationCollect
		{
			get
			{
				return this._ValuationCollect;
			}
			set
			{
				if ((this._ValuationCollect != value))
				{
					this.OnValuationCollectChanging(value);
					this.SendPropertyChanging();
					this._ValuationCollect = value;
					this.SendPropertyChanged("ValuationCollect");
					this.OnValuationCollectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPrepaid", DbType="NVarChar(50)")]
		public string TaxPrepaid
		{
			get
			{
				return this._TaxPrepaid;
			}
			set
			{
				if ((this._TaxPrepaid != value))
				{
					this.OnTaxPrepaidChanging(value);
					this.SendPropertyChanging();
					this._TaxPrepaid = value;
					this.SendPropertyChanged("TaxPrepaid");
					this.OnTaxPrepaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCollect", DbType="NVarChar(50)")]
		public string TaxCollect
		{
			get
			{
				return this._TaxCollect;
			}
			set
			{
				if ((this._TaxCollect != value))
				{
					this.OnTaxCollectChanging(value);
					this.SendPropertyChanging();
					this._TaxCollect = value;
					this.SendPropertyChanged("TaxCollect");
					this.OnTaxCollectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentPrepaid", DbType="NVarChar(50)")]
		public string AgentPrepaid
		{
			get
			{
				return this._AgentPrepaid;
			}
			set
			{
				if ((this._AgentPrepaid != value))
				{
					this.OnAgentPrepaidChanging(value);
					this.SendPropertyChanging();
					this._AgentPrepaid = value;
					this.SendPropertyChanged("AgentPrepaid");
					this.OnAgentPrepaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentCollect", DbType="NVarChar(50)")]
		public string AgentCollect
		{
			get
			{
				return this._AgentCollect;
			}
			set
			{
				if ((this._AgentCollect != value))
				{
					this.OnAgentCollectChanging(value);
					this.SendPropertyChanging();
					this._AgentCollect = value;
					this.SendPropertyChanged("AgentCollect");
					this.OnAgentCollectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierPrepaid", DbType="NVarChar(50)")]
		public string CarrierPrepaid
		{
			get
			{
				return this._CarrierPrepaid;
			}
			set
			{
				if ((this._CarrierPrepaid != value))
				{
					this.OnCarrierPrepaidChanging(value);
					this.SendPropertyChanging();
					this._CarrierPrepaid = value;
					this.SendPropertyChanged("CarrierPrepaid");
					this.OnCarrierPrepaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierCollect", DbType="NVarChar(50)")]
		public string CarrierCollect
		{
			get
			{
				return this._CarrierCollect;
			}
			set
			{
				if ((this._CarrierCollect != value))
				{
					this.OnCarrierCollectChanging(value);
					this.SendPropertyChanging();
					this._CarrierCollect = value;
					this.SendPropertyChanged("CarrierCollect");
					this.OnCarrierCollectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyConversion", DbType="NVarChar(50)")]
		public string CurrencyConversion
		{
			get
			{
				return this._CurrencyConversion;
			}
			set
			{
				if ((this._CurrencyConversion != value))
				{
					this.OnCurrencyConversionChanging(value);
					this.SendPropertyChanging();
					this._CurrencyConversion = value;
					this.SendPropertyChanged("CurrencyConversion");
					this.OnCurrencyConversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCChargesinDest", DbType="NVarChar(50)")]
		public string CCChargesinDest
		{
			get
			{
				return this._CCChargesinDest;
			}
			set
			{
				if ((this._CCChargesinDest != value))
				{
					this.OnCCChargesinDestChanging(value);
					this.SendPropertyChanging();
					this._CCChargesinDest = value;
					this.SendPropertyChanged("CCChargesinDest");
					this.OnCCChargesinDestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargesatDestination", DbType="NVarChar(50)")]
		public string ChargesatDestination
		{
			get
			{
				return this._ChargesatDestination;
			}
			set
			{
				if ((this._ChargesatDestination != value))
				{
					this.OnChargesatDestinationChanging(value);
					this.SendPropertyChanging();
					this._ChargesatDestination = value;
					this.SendPropertyChanged("ChargesatDestination");
					this.OnChargesatDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCharges", DbType="NVarChar(200)")]
		public string OtherCharges
		{
			get
			{
				return this._OtherCharges;
			}
			set
			{
				if ((this._OtherCharges != value))
				{
					this.OnOtherChargesChanging(value);
					this.SendPropertyChanging();
					this._OtherCharges = value;
					this.SendPropertyChanged("OtherCharges");
					this.OnOtherChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCharges1", DbType="NVarChar(200)")]
		public string OtherCharges1
		{
			get
			{
				return this._OtherCharges1;
			}
			set
			{
				if ((this._OtherCharges1 != value))
				{
					this.OnOtherCharges1Changing(value);
					this.SendPropertyChanging();
					this._OtherCharges1 = value;
					this.SendPropertyChanged("OtherCharges1");
					this.OnOtherCharges1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCharges2", DbType="NVarChar(200)")]
		public string OtherCharges2
		{
			get
			{
				return this._OtherCharges2;
			}
			set
			{
				if ((this._OtherCharges2 != value))
				{
					this.OnOtherCharges2Changing(value);
					this.SendPropertyChanging();
					this._OtherCharges2 = value;
					this.SendPropertyChanged("OtherCharges2");
					this.OnOtherCharges2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureShippe", DbType="NVarChar(200)")]
		public string SignatureShippe
		{
			get
			{
				return this._SignatureShippe;
			}
			set
			{
				if ((this._SignatureShippe != value))
				{
					this.OnSignatureShippeChanging(value);
					this.SendPropertyChanging();
					this._SignatureShippe = value;
					this.SendPropertyChanged("SignatureShippe");
					this.OnSignatureShippeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Executedon", DbType="NVarChar(50)")]
		public string Executedon
		{
			get
			{
				return this._Executedon;
			}
			set
			{
				if ((this._Executedon != value))
				{
					this.OnExecutedonChanging(value);
					this.SendPropertyChanging();
					this._Executedon = value;
					this.SendPropertyChanged("Executedon");
					this.OnExecutedonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Executedat", DbType="NVarChar(100)")]
		public string Executedat
		{
			get
			{
				return this._Executedat;
			}
			set
			{
				if ((this._Executedat != value))
				{
					this.OnExecutedatChanging(value);
					this.SendPropertyChanging();
					this._Executedat = value;
					this.SendPropertyChanged("Executedat");
					this.OnExecutedatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCollect", DbType="NVarChar(50)")]
		public string TotalCollect
		{
			get
			{
				return this._TotalCollect;
			}
			set
			{
				if ((this._TotalCollect != value))
				{
					this.OnTotalCollectChanging(value);
					this.SendPropertyChanging();
					this._TotalCollect = value;
					this.SendPropertyChanged("TotalCollect");
					this.OnTotalCollectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrepaid", DbType="NVarChar(50)")]
		public string TotalPrepaid
		{
			get
			{
				return this._TotalPrepaid;
			}
			set
			{
				if ((this._TotalPrepaid != value))
				{
					this.OnTotalPrepaidChanging(value);
					this.SendPropertyChanging();
					this._TotalPrepaid = value;
					this.SendPropertyChanged("TotalPrepaid");
					this.OnTotalPrepaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterAWB", DbType="NVarChar(50)")]
		public string MasterAWB
		{
			get
			{
				return this._MasterAWB;
			}
			set
			{
				if ((this._MasterAWB != value))
				{
					this.OnMasterAWBChanging(value);
					this.SendPropertyChanging();
					this._MasterAWB = value;
					this.SendPropertyChanged("MasterAWB");
					this.OnMasterAWBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseAWB", DbType="NVarChar(50)")]
		public string HouseAWB
		{
			get
			{
				return this._HouseAWB;
			}
			set
			{
				if ((this._HouseAWB != value))
				{
					this.OnHouseAWBChanging(value);
					this.SendPropertyChanging();
					this._HouseAWB = value;
					this.SendPropertyChanged("HouseAWB");
					this.OnHouseAWBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCollectCharges", DbType="NVarChar(50)")]
		public string TotalCollectCharges
		{
			get
			{
				return this._TotalCollectCharges;
			}
			set
			{
				if ((this._TotalCollectCharges != value))
				{
					this.OnTotalCollectChargesChanging(value);
					this.SendPropertyChanging();
					this._TotalCollectCharges = value;
					this.SendPropertyChanged("TotalCollectCharges");
					this.OnTotalCollectChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_HAirWayBill", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.HAirWayBills.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.HAirWayBills.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoideIssued")]
	public partial class InvoideIssued : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _Date;
		
		private long _Id;
		
		private long _RevenueId;
		
		private long _ShipmentId;
		
		private EntityRef<Revenue> _Revenue;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRevenueIdChanging(long value);
    partial void OnRevenueIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    #endregion
		
		public InvoideIssued()
		{
			this._Revenue = default(EntityRef<Revenue>);
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueId", DbType="BigInt NOT NULL")]
		public long RevenueId
		{
			get
			{
				return this._RevenueId;
			}
			set
			{
				if ((this._RevenueId != value))
				{
					if (this._Revenue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevenueIdChanging(value);
					this.SendPropertyChanging();
					this._RevenueId = value;
					this.SendPropertyChanged("RevenueId");
					this.OnRevenueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Revenue_InvoideIssued", Storage="_Revenue", ThisKey="RevenueId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Revenue Revenue
		{
			get
			{
				return this._Revenue.Entity;
			}
			set
			{
				Revenue previousValue = this._Revenue.Entity;
				if (((previousValue != value) 
							|| (this._Revenue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Revenue.Entity = null;
						previousValue.InvoideIssueds.Remove(this);
					}
					this._Revenue.Entity = value;
					if ((value != null))
					{
						value.InvoideIssueds.Add(this);
						this._RevenueId = value.Id;
					}
					else
					{
						this._RevenueId = default(long);
					}
					this.SendPropertyChanged("Revenue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_InvoideIssued", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true)]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.InvoideIssueds.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.InvoideIssueds.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manifest")]
	public partial class Manifest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ShipmentId;
		
		private string _MAWBNo;
		
		private string _FLTNo;
		
		private string _CONSIGNEDTO;
		
		private string _DEPARTURE;
		
		private string _DATE;
		
		private string _ESTINATION;
		
		private string _ORDNo;
		
		private string _HAWBNo;
		
		private string _NoOfPcs;
		
		private string _GWEIGHT;
		
		private string _DESCRIPTIONOFGOODS;
		
		private string _SHIPPER;
		
		private string _CONSIGNEE;
		
		private string _CHARGECODE;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnMAWBNoChanging(string value);
    partial void OnMAWBNoChanged();
    partial void OnFLTNoChanging(string value);
    partial void OnFLTNoChanged();
    partial void OnCONSIGNEDTOChanging(string value);
    partial void OnCONSIGNEDTOChanged();
    partial void OnDEPARTUREChanging(string value);
    partial void OnDEPARTUREChanged();
    partial void OnDATEChanging(string value);
    partial void OnDATEChanged();
    partial void OnESTINATIONChanging(string value);
    partial void OnESTINATIONChanged();
    partial void OnORDNoChanging(string value);
    partial void OnORDNoChanged();
    partial void OnHAWBNoChanging(string value);
    partial void OnHAWBNoChanged();
    partial void OnNoOfPcsChanging(string value);
    partial void OnNoOfPcsChanged();
    partial void OnGWEIGHTChanging(string value);
    partial void OnGWEIGHTChanged();
    partial void OnDESCRIPTIONOFGOODSChanging(string value);
    partial void OnDESCRIPTIONOFGOODSChanged();
    partial void OnSHIPPERChanging(string value);
    partial void OnSHIPPERChanged();
    partial void OnCONSIGNEEChanging(string value);
    partial void OnCONSIGNEEChanged();
    partial void OnCHARGECODEChanging(string value);
    partial void OnCHARGECODEChanged();
    #endregion
		
		public Manifest()
		{
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAWBNo", DbType="NVarChar(100)")]
		public string MAWBNo
		{
			get
			{
				return this._MAWBNo;
			}
			set
			{
				if ((this._MAWBNo != value))
				{
					this.OnMAWBNoChanging(value);
					this.SendPropertyChanging();
					this._MAWBNo = value;
					this.SendPropertyChanged("MAWBNo");
					this.OnMAWBNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLTNo", DbType="NVarChar(100)")]
		public string FLTNo
		{
			get
			{
				return this._FLTNo;
			}
			set
			{
				if ((this._FLTNo != value))
				{
					this.OnFLTNoChanging(value);
					this.SendPropertyChanging();
					this._FLTNo = value;
					this.SendPropertyChanged("FLTNo");
					this.OnFLTNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONSIGNEDTO", DbType="NVarChar(100)")]
		public string CONSIGNEDTO
		{
			get
			{
				return this._CONSIGNEDTO;
			}
			set
			{
				if ((this._CONSIGNEDTO != value))
				{
					this.OnCONSIGNEDTOChanging(value);
					this.SendPropertyChanging();
					this._CONSIGNEDTO = value;
					this.SendPropertyChanged("CONSIGNEDTO");
					this.OnCONSIGNEDTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTURE", DbType="NVarChar(100)")]
		public string DEPARTURE
		{
			get
			{
				return this._DEPARTURE;
			}
			set
			{
				if ((this._DEPARTURE != value))
				{
					this.OnDEPARTUREChanging(value);
					this.SendPropertyChanging();
					this._DEPARTURE = value;
					this.SendPropertyChanged("DEPARTURE");
					this.OnDEPARTUREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="NVarChar(50)")]
		public string DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTINATION", DbType="NVarChar(100)")]
		public string ESTINATION
		{
			get
			{
				return this._ESTINATION;
			}
			set
			{
				if ((this._ESTINATION != value))
				{
					this.OnESTINATIONChanging(value);
					this.SendPropertyChanging();
					this._ESTINATION = value;
					this.SendPropertyChanged("ESTINATION");
					this.OnESTINATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDNo", DbType="NVarChar(100)")]
		public string ORDNo
		{
			get
			{
				return this._ORDNo;
			}
			set
			{
				if ((this._ORDNo != value))
				{
					this.OnORDNoChanging(value);
					this.SendPropertyChanging();
					this._ORDNo = value;
					this.SendPropertyChanged("ORDNo");
					this.OnORDNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAWBNo", DbType="NVarChar(100)")]
		public string HAWBNo
		{
			get
			{
				return this._HAWBNo;
			}
			set
			{
				if ((this._HAWBNo != value))
				{
					this.OnHAWBNoChanging(value);
					this.SendPropertyChanging();
					this._HAWBNo = value;
					this.SendPropertyChanged("HAWBNo");
					this.OnHAWBNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfPcs", DbType="NVarChar(100)")]
		public string NoOfPcs
		{
			get
			{
				return this._NoOfPcs;
			}
			set
			{
				if ((this._NoOfPcs != value))
				{
					this.OnNoOfPcsChanging(value);
					this.SendPropertyChanging();
					this._NoOfPcs = value;
					this.SendPropertyChanged("NoOfPcs");
					this.OnNoOfPcsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GWEIGHT", DbType="NVarChar(100)")]
		public string GWEIGHT
		{
			get
			{
				return this._GWEIGHT;
			}
			set
			{
				if ((this._GWEIGHT != value))
				{
					this.OnGWEIGHTChanging(value);
					this.SendPropertyChanging();
					this._GWEIGHT = value;
					this.SendPropertyChanged("GWEIGHT");
					this.OnGWEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTIONOFGOODS", DbType="NVarChar(4000)")]
		public string DESCRIPTIONOFGOODS
		{
			get
			{
				return this._DESCRIPTIONOFGOODS;
			}
			set
			{
				if ((this._DESCRIPTIONOFGOODS != value))
				{
					this.OnDESCRIPTIONOFGOODSChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTIONOFGOODS = value;
					this.SendPropertyChanged("DESCRIPTIONOFGOODS");
					this.OnDESCRIPTIONOFGOODSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHIPPER", DbType="NVarChar(1000)")]
		public string SHIPPER
		{
			get
			{
				return this._SHIPPER;
			}
			set
			{
				if ((this._SHIPPER != value))
				{
					this.OnSHIPPERChanging(value);
					this.SendPropertyChanging();
					this._SHIPPER = value;
					this.SendPropertyChanged("SHIPPER");
					this.OnSHIPPERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONSIGNEE", DbType="NVarChar(1000)")]
		public string CONSIGNEE
		{
			get
			{
				return this._CONSIGNEE;
			}
			set
			{
				if ((this._CONSIGNEE != value))
				{
					this.OnCONSIGNEEChanging(value);
					this.SendPropertyChanging();
					this._CONSIGNEE = value;
					this.SendPropertyChanged("CONSIGNEE");
					this.OnCONSIGNEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHARGECODE", DbType="NVarChar(100)")]
		public string CHARGECODE
		{
			get
			{
				return this._CHARGECODE;
			}
			set
			{
				if ((this._CHARGECODE != value))
				{
					this.OnCHARGECODEChanging(value);
					this.SendPropertyChanging();
					this._CHARGECODE = value;
					this.SendPropertyChanged("CHARGECODE");
					this.OnCHARGECODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_Manifest", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.Manifests.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.Manifests.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MT72")]
	public partial class MT72 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _VoucherID;
		
		private System.Nullable<int> _VoucherCode;
		
		private System.Nullable<System.DateTime> _VoucherDate;
		
		private string _VoucherNo;
		
		private System.Nullable<long> _SupplierID;
		
		private string _Description;
		
		private System.Nullable<long> _CurencyID;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private string _HBL;
		
		private string _MBL;
		
		private System.Nullable<long> _CountryID;
		
		private string _DeclaraNo;
		
		private System.Nullable<System.DateTime> _DeclaraDate;
		
		private System.Nullable<System.DateTime> _ReceiptDate;
		
		private System.Nullable<decimal> _T_Quantity;
		
		private System.Nullable<decimal> _T_Amount;
		
		private System.Nullable<decimal> _T_VATTax;
		
		private System.Nullable<decimal> _t_TransportFee;
		
		private System.Nullable<decimal> _t_InlandFee;
		
		private System.Nullable<decimal> _t_Fee1;
		
		private System.Nullable<decimal> _t_Fee2;
		
		private System.Nullable<decimal> _t_Fee;
		
		private System.Nullable<decimal> _T_TT;
		
		private System.Nullable<long> _SubmittedBy;
		
		private System.Nullable<long> _CheckedBy;
		
		private System.Nullable<long> _ApprovedBy;
		
		private System.Nullable<byte> _status;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<System.DateTime> _DateModify;
		
		private System.Nullable<long> _CreateBy;
		
		private System.Nullable<long> _ModifyBy;
		
		private System.Nullable<System.DateTime> _DateSubmited;
		
		private System.Nullable<System.DateTime> _DateChecked;
		
		private System.Nullable<System.DateTime> _DateApproved;
		
		private string _NotePrints;
		
		private EntitySet<DT72> _DT72s;
		
		private EntityRef<Curency> _Curency;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<Voucher> _Voucher;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<User> _User3;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherIDChanging(long value);
    partial void OnVoucherIDChanged();
    partial void OnVoucherCodeChanging(System.Nullable<int> value);
    partial void OnVoucherCodeChanged();
    partial void OnVoucherDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVoucherDateChanged();
    partial void OnVoucherNoChanging(string value);
    partial void OnVoucherNoChanged();
    partial void OnSupplierIDChanging(System.Nullable<long> value);
    partial void OnSupplierIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCurencyIDChanging(System.Nullable<long> value);
    partial void OnCurencyIDChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnHBLChanging(string value);
    partial void OnHBLChanged();
    partial void OnMBLChanging(string value);
    partial void OnMBLChanged();
    partial void OnCountryIDChanging(System.Nullable<long> value);
    partial void OnCountryIDChanged();
    partial void OnDeclaraNoChanging(string value);
    partial void OnDeclaraNoChanged();
    partial void OnDeclaraDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeclaraDateChanged();
    partial void OnReceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiptDateChanged();
    partial void OnT_QuantityChanging(System.Nullable<decimal> value);
    partial void OnT_QuantityChanged();
    partial void OnT_AmountChanging(System.Nullable<decimal> value);
    partial void OnT_AmountChanged();
    partial void OnT_VATTaxChanging(System.Nullable<decimal> value);
    partial void OnT_VATTaxChanged();
    partial void Ont_TransportFeeChanging(System.Nullable<decimal> value);
    partial void Ont_TransportFeeChanged();
    partial void Ont_InlandFeeChanging(System.Nullable<decimal> value);
    partial void Ont_InlandFeeChanged();
    partial void Ont_Fee1Changing(System.Nullable<decimal> value);
    partial void Ont_Fee1Changed();
    partial void Ont_Fee2Changing(System.Nullable<decimal> value);
    partial void Ont_Fee2Changed();
    partial void Ont_FeeChanging(System.Nullable<decimal> value);
    partial void Ont_FeeChanged();
    partial void OnT_TTChanging(System.Nullable<decimal> value);
    partial void OnT_TTChanged();
    partial void OnSubmittedByChanging(System.Nullable<long> value);
    partial void OnSubmittedByChanged();
    partial void OnCheckedByChanging(System.Nullable<long> value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(System.Nullable<long> value);
    partial void OnApprovedByChanged();
    partial void OnstatusChanging(System.Nullable<byte> value);
    partial void OnstatusChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnDateModifyChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifyChanged();
    partial void OnCreateByChanging(System.Nullable<long> value);
    partial void OnCreateByChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnDateSubmitedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSubmitedChanged();
    partial void OnDateCheckedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCheckedChanged();
    partial void OnDateApprovedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateApprovedChanged();
    partial void OnNotePrintsChanging(string value);
    partial void OnNotePrintsChanged();
    #endregion
		
		public MT72()
		{
			this._DT72s = new EntitySet<DT72>(new Action<DT72>(this.attach_DT72s), new Action<DT72>(this.detach_DT72s));
			this._Curency = default(EntityRef<Curency>);
			this._Supplier = default(EntityRef<Supplier>);
			this._Voucher = default(EntityRef<Voucher>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._User3 = default(EntityRef<User>);
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long VoucherID
		{
			get
			{
				return this._VoucherID;
			}
			set
			{
				if ((this._VoucherID != value))
				{
					this.OnVoucherIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherID = value;
					this.SendPropertyChanged("VoucherID");
					this.OnVoucherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCode", DbType="Int")]
		public System.Nullable<int> VoucherCode
		{
			get
			{
				return this._VoucherCode;
			}
			set
			{
				if ((this._VoucherCode != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoucherCodeChanging(value);
					this.SendPropertyChanging();
					this._VoucherCode = value;
					this.SendPropertyChanged("VoucherCode");
					this.OnVoucherCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherDate", DbType="Date")]
		public System.Nullable<System.DateTime> VoucherDate
		{
			get
			{
				return this._VoucherDate;
			}
			set
			{
				if ((this._VoucherDate != value))
				{
					this.OnVoucherDateChanging(value);
					this.SendPropertyChanging();
					this._VoucherDate = value;
					this.SendPropertyChanged("VoucherDate");
					this.OnVoucherDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherNo", DbType="Char(12)")]
		public string VoucherNo
		{
			get
			{
				return this._VoucherNo;
			}
			set
			{
				if ((this._VoucherNo != value))
				{
					this.OnVoucherNoChanging(value);
					this.SendPropertyChanging();
					this._VoucherNo = value;
					this.SendPropertyChanged("VoucherNo");
					this.OnVoucherNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="BigInt")]
		public System.Nullable<long> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(128)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurencyID", DbType="BigInt")]
		public System.Nullable<long> CurencyID
		{
			get
			{
				return this._CurencyID;
			}
			set
			{
				if ((this._CurencyID != value))
				{
					if (this._Curency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurencyID = value;
					this.SendPropertyChanged("CurencyID");
					this.OnCurencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(24,12)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HBL", DbType="Char(12)")]
		public string HBL
		{
			get
			{
				return this._HBL;
			}
			set
			{
				if ((this._HBL != value))
				{
					this.OnHBLChanging(value);
					this.SendPropertyChanging();
					this._HBL = value;
					this.SendPropertyChanged("HBL");
					this.OnHBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MBL", DbType="Char(12)")]
		public string MBL
		{
			get
			{
				return this._MBL;
			}
			set
			{
				if ((this._MBL != value))
				{
					this.OnMBLChanging(value);
					this.SendPropertyChanging();
					this._MBL = value;
					this.SendPropertyChanged("MBL");
					this.OnMBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="BigInt")]
		public System.Nullable<long> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclaraNo", DbType="Char(12)")]
		public string DeclaraNo
		{
			get
			{
				return this._DeclaraNo;
			}
			set
			{
				if ((this._DeclaraNo != value))
				{
					this.OnDeclaraNoChanging(value);
					this.SendPropertyChanging();
					this._DeclaraNo = value;
					this.SendPropertyChanged("DeclaraNo");
					this.OnDeclaraNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclaraDate", DbType="Date")]
		public System.Nullable<System.DateTime> DeclaraDate
		{
			get
			{
				return this._DeclaraDate;
			}
			set
			{
				if ((this._DeclaraDate != value))
				{
					this.OnDeclaraDateChanging(value);
					this.SendPropertyChanging();
					this._DeclaraDate = value;
					this.SendPropertyChanged("DeclaraDate");
					this.OnDeclaraDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReceiptDate
		{
			get
			{
				return this._ReceiptDate;
			}
			set
			{
				if ((this._ReceiptDate != value))
				{
					this.OnReceiptDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptDate = value;
					this.SendPropertyChanged("ReceiptDate");
					this.OnReceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Quantity", DbType="Decimal(12,3)")]
		public System.Nullable<decimal> T_Quantity
		{
			get
			{
				return this._T_Quantity;
			}
			set
			{
				if ((this._T_Quantity != value))
				{
					this.OnT_QuantityChanging(value);
					this.SendPropertyChanging();
					this._T_Quantity = value;
					this.SendPropertyChanged("T_Quantity");
					this.OnT_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Amount", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> T_Amount
		{
			get
			{
				return this._T_Amount;
			}
			set
			{
				if ((this._T_Amount != value))
				{
					this.OnT_AmountChanging(value);
					this.SendPropertyChanging();
					this._T_Amount = value;
					this.SendPropertyChanged("T_Amount");
					this.OnT_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_VATTax", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_VATTax
		{
			get
			{
				return this._T_VATTax;
			}
			set
			{
				if ((this._T_VATTax != value))
				{
					this.OnT_VATTaxChanging(value);
					this.SendPropertyChanging();
					this._T_VATTax = value;
					this.SendPropertyChanged("T_VATTax");
					this.OnT_VATTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_TransportFee", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> t_TransportFee
		{
			get
			{
				return this._t_TransportFee;
			}
			set
			{
				if ((this._t_TransportFee != value))
				{
					this.Ont_TransportFeeChanging(value);
					this.SendPropertyChanging();
					this._t_TransportFee = value;
					this.SendPropertyChanged("t_TransportFee");
					this.Ont_TransportFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_InlandFee", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> t_InlandFee
		{
			get
			{
				return this._t_InlandFee;
			}
			set
			{
				if ((this._t_InlandFee != value))
				{
					this.Ont_InlandFeeChanging(value);
					this.SendPropertyChanging();
					this._t_InlandFee = value;
					this.SendPropertyChanged("t_InlandFee");
					this.Ont_InlandFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_Fee1", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> t_Fee1
		{
			get
			{
				return this._t_Fee1;
			}
			set
			{
				if ((this._t_Fee1 != value))
				{
					this.Ont_Fee1Changing(value);
					this.SendPropertyChanging();
					this._t_Fee1 = value;
					this.SendPropertyChanged("t_Fee1");
					this.Ont_Fee1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_Fee2", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> t_Fee2
		{
			get
			{
				return this._t_Fee2;
			}
			set
			{
				if ((this._t_Fee2 != value))
				{
					this.Ont_Fee2Changing(value);
					this.SendPropertyChanging();
					this._t_Fee2 = value;
					this.SendPropertyChanged("t_Fee2");
					this.Ont_Fee2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_Fee", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> t_Fee
		{
			get
			{
				return this._t_Fee;
			}
			set
			{
				if ((this._t_Fee != value))
				{
					this.Ont_FeeChanging(value);
					this.SendPropertyChanging();
					this._t_Fee = value;
					this.SendPropertyChanged("t_Fee");
					this.Ont_FeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_TT", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_TT
		{
			get
			{
				return this._T_TT;
			}
			set
			{
				if ((this._T_TT != value))
				{
					this.OnT_TTChanging(value);
					this.SendPropertyChanging();
					this._T_TT = value;
					this.SendPropertyChanged("T_TT");
					this.OnT_TTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedBy", DbType="BigInt")]
		public System.Nullable<long> SubmittedBy
		{
			get
			{
				return this._SubmittedBy;
			}
			set
			{
				if ((this._SubmittedBy != value))
				{
					if (this._User3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubmittedByChanging(value);
					this.SendPropertyChanging();
					this._SubmittedBy = value;
					this.SendPropertyChanged("SubmittedBy");
					this.OnSubmittedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="BigInt")]
		public System.Nullable<long> CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="BigInt")]
		public System.Nullable<long> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt")]
		public System.Nullable<byte> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModify", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModify
		{
			get
			{
				return this._DateModify;
			}
			set
			{
				if ((this._DateModify != value))
				{
					this.OnDateModifyChanging(value);
					this.SendPropertyChanging();
					this._DateModify = value;
					this.SendPropertyChanged("DateModify");
					this.OnDateModifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt")]
		public System.Nullable<long> CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
		public System.Nullable<long> ModifyBy
		{
			get
			{
				return this._ModifyBy;
			}
			set
			{
				if ((this._ModifyBy != value))
				{
					this.OnModifyByChanging(value);
					this.SendPropertyChanging();
					this._ModifyBy = value;
					this.SendPropertyChanged("ModifyBy");
					this.OnModifyByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSubmited", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSubmited
		{
			get
			{
				return this._DateSubmited;
			}
			set
			{
				if ((this._DateSubmited != value))
				{
					this.OnDateSubmitedChanging(value);
					this.SendPropertyChanging();
					this._DateSubmited = value;
					this.SendPropertyChanged("DateSubmited");
					this.OnDateSubmitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChecked", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateChecked
		{
			get
			{
				return this._DateChecked;
			}
			set
			{
				if ((this._DateChecked != value))
				{
					this.OnDateCheckedChanging(value);
					this.SendPropertyChanging();
					this._DateChecked = value;
					this.SendPropertyChanged("DateChecked");
					this.OnDateCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateApproved", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateApproved
		{
			get
			{
				return this._DateApproved;
			}
			set
			{
				if ((this._DateApproved != value))
				{
					this.OnDateApprovedChanging(value);
					this.SendPropertyChanging();
					this._DateApproved = value;
					this.SendPropertyChanged("DateApproved");
					this.OnDateApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotePrints", DbType="NVarChar(MAX)")]
		public string NotePrints
		{
			get
			{
				return this._NotePrints;
			}
			set
			{
				if ((this._NotePrints != value))
				{
					this.OnNotePrintsChanging(value);
					this.SendPropertyChanging();
					this._NotePrints = value;
					this.SendPropertyChanged("NotePrints");
					this.OnNotePrintsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MT72_DT72", Storage="_DT72s", ThisKey="VoucherID", OtherKey="VoucherID")]
		public EntitySet<DT72> DT72s
		{
			get
			{
				return this._DT72s;
			}
			set
			{
				this._DT72s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curency_MT72", Storage="_Curency", ThisKey="CurencyID", OtherKey="Id", IsForeignKey=true)]
		public Curency Curency
		{
			get
			{
				return this._Curency.Entity;
			}
			set
			{
				Curency previousValue = this._Curency.Entity;
				if (((previousValue != value) 
							|| (this._Curency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Curency.Entity = null;
						previousValue.MT72s.Remove(this);
					}
					this._Curency.Entity = value;
					if ((value != null))
					{
						value.MT72s.Add(this);
						this._CurencyID = value.Id;
					}
					else
					{
						this._CurencyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Curency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_MT72", Storage="_Supplier", ThisKey="SupplierID", OtherKey="Id", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.MT72s.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.MT72s.Add(this);
						this._SupplierID = value.Id;
					}
					else
					{
						this._SupplierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_MT72", Storage="_Voucher", ThisKey="VoucherCode", OtherKey="id", IsForeignKey=true)]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.MT72s.Remove(this);
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.MT72s.Add(this);
						this._VoucherCode = value.id;
					}
					else
					{
						this._VoucherCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT72", Storage="_User", ThisKey="CreateBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.MT72s.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.MT72s.Add(this);
						this._CreateBy = value.Id;
					}
					else
					{
						this._CreateBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT721", Storage="_User1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.MT72s1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.MT72s1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT722", Storage="_User2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.MT72s2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.MT72s2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT723", Storage="_User3", ThisKey="SubmittedBy", OtherKey="Id", IsForeignKey=true)]
		public User User3
		{
			get
			{
				return this._User3.Entity;
			}
			set
			{
				User previousValue = this._User3.Entity;
				if (((previousValue != value) 
							|| (this._User3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User3.Entity = null;
						previousValue.MT72s3.Remove(this);
					}
					this._User3.Entity = value;
					if ((value != null))
					{
						value.MT72s3.Add(this);
						this._SubmittedBy = value.Id;
					}
					else
					{
						this._SubmittedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("User3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_MT72", Storage="_Country", ThisKey="CountryID", OtherKey="Id", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.MT72s.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.MT72s.Add(this);
						this._CountryID = value.Id;
					}
					else
					{
						this._CountryID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DT72s(DT72 entity)
		{
			this.SendPropertyChanging();
			entity.MT72 = this;
		}
		
		private void detach_DT72s(DT72 entity)
		{
			this.SendPropertyChanging();
			entity.MT72 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _Number;
		
		private System.Nullable<System.DateTime> _ngay_dn;
		
		private System.Nullable<System.DateTime> _ngay_ks;
		
		private System.Nullable<decimal> _nam_bd;
		
		private System.Nullable<System.DateTime> _ngay_lt;
		
		private System.Nullable<System.DateTime> _ngay_ky1;
		
		private System.Nullable<System.DateTime> _ngay_ks_ky;
		
		private System.Nullable<System.DateTime> _ngay_dn2;
		
		private string _ma_td1;
		
		private string _ma_td2;
		
		private string _ma_td3;
		
		private System.Nullable<decimal> _sl_td1;
		
		private System.Nullable<decimal> _sl_td2;
		
		private System.Nullable<decimal> _sl_td3;
		
		private System.Nullable<System.DateTime> _ngay_td1;
		
		private System.Nullable<System.DateTime> _ngay_td2;
		
		private System.Nullable<System.DateTime> _ngay_td3;
		
		private string _gc_td1;
		
		private string _gc_td2;
		
		private string _gc_td3;
		
		private System.Data.Linq.Binary _logo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumberChanging(long value);
    partial void OnNumberChanged();
    partial void Onngay_dnChanging(System.Nullable<System.DateTime> value);
    partial void Onngay_dnChanged();
    partial void Onngay_ksChanging(System.Nullable<System.DateTime> value);
    partial void Onngay_ksChanged();
    partial void Onnam_bdChanging(System.Nullable<decimal> value);
    partial void Onnam_bdChanged();
    partial void Onngay_ltChanging(System.Nullable<System.DateTime> value);
    partial void Onngay_ltChanged();
    partial void Onngay_ky1Changing(System.Nullable<System.DateTime> value);
    partial void Onngay_ky1Changed();
    partial void Onngay_ks_kyChanging(System.Nullable<System.DateTime> value);
    partial void Onngay_ks_kyChanged();
    partial void Onngay_dn2Changing(System.Nullable<System.DateTime> value);
    partial void Onngay_dn2Changed();
    partial void Onma_td1Changing(string value);
    partial void Onma_td1Changed();
    partial void Onma_td2Changing(string value);
    partial void Onma_td2Changed();
    partial void Onma_td3Changing(string value);
    partial void Onma_td3Changed();
    partial void Onsl_td1Changing(System.Nullable<decimal> value);
    partial void Onsl_td1Changed();
    partial void Onsl_td2Changing(System.Nullable<decimal> value);
    partial void Onsl_td2Changed();
    partial void Onsl_td3Changing(System.Nullable<decimal> value);
    partial void Onsl_td3Changed();
    partial void Onngay_td1Changing(System.Nullable<System.DateTime> value);
    partial void Onngay_td1Changed();
    partial void Onngay_td2Changing(System.Nullable<System.DateTime> value);
    partial void Onngay_td2Changed();
    partial void Onngay_td3Changing(System.Nullable<System.DateTime> value);
    partial void Onngay_td3Changed();
    partial void Ongc_td1Changing(string value);
    partial void Ongc_td1Changed();
    partial void Ongc_td2Changing(string value);
    partial void Ongc_td2Changed();
    partial void Ongc_td3Changing(string value);
    partial void Ongc_td3Changed();
    partial void OnlogoChanging(System.Data.Linq.Binary value);
    partial void OnlogoChanged();
    #endregion
		
		public Order()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="BigInt NOT NULL")]
		public long Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay_dn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ngay_dn
		{
			get
			{
				return this._ngay_dn;
			}
			set
			{
				if ((this._ngay_dn != value))
				{
					this.Onngay_dnChanging(value);
					this.SendPropertyChanging();
					this._ngay_dn = value;
					this.SendPropertyChanged("ngay_dn");
					this.Onngay_dnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay_ks", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ngay_ks
		{
			get
			{
				return this._ngay_ks;
			}
			set
			{
				if ((this._ngay_ks != value))
				{
					this.Onngay_ksChanging(value);
					this.SendPropertyChanging();
					this._ngay_ks = value;
					this.SendPropertyChanged("ngay_ks");
					this.Onngay_ksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam_bd", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> nam_bd
		{
			get
			{
				return this._nam_bd;
			}
			set
			{
				if ((this._nam_bd != value))
				{
					this.Onnam_bdChanging(value);
					this.SendPropertyChanging();
					this._nam_bd = value;
					this.SendPropertyChanged("nam_bd");
					this.Onnam_bdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay_lt", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ngay_lt
		{
			get
			{
				return this._ngay_lt;
			}
			set
			{
				if ((this._ngay_lt != value))
				{
					this.Onngay_ltChanging(value);
					this.SendPropertyChanging();
					this._ngay_lt = value;
					this.SendPropertyChanged("ngay_lt");
					this.Onngay_ltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay_ky1", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ngay_ky1
		{
			get
			{
				return this._ngay_ky1;
			}
			set
			{
				if ((this._ngay_ky1 != value))
				{
					this.Onngay_ky1Changing(value);
					this.SendPropertyChanging();
					this._ngay_ky1 = value;
					this.SendPropertyChanged("ngay_ky1");
					this.Onngay_ky1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay_ks_ky", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ngay_ks_ky
		{
			get
			{
				return this._ngay_ks_ky;
			}
			set
			{
				if ((this._ngay_ks_ky != value))
				{
					this.Onngay_ks_kyChanging(value);
					this.SendPropertyChanging();
					this._ngay_ks_ky = value;
					this.SendPropertyChanged("ngay_ks_ky");
					this.Onngay_ks_kyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay_dn2", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ngay_dn2
		{
			get
			{
				return this._ngay_dn2;
			}
			set
			{
				if ((this._ngay_dn2 != value))
				{
					this.Onngay_dn2Changing(value);
					this.SendPropertyChanging();
					this._ngay_dn2 = value;
					this.SendPropertyChanged("ngay_dn2");
					this.Onngay_dn2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ma_td1", DbType="Char(16)")]
		public string ma_td1
		{
			get
			{
				return this._ma_td1;
			}
			set
			{
				if ((this._ma_td1 != value))
				{
					this.Onma_td1Changing(value);
					this.SendPropertyChanging();
					this._ma_td1 = value;
					this.SendPropertyChanged("ma_td1");
					this.Onma_td1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ma_td2", DbType="Char(16)")]
		public string ma_td2
		{
			get
			{
				return this._ma_td2;
			}
			set
			{
				if ((this._ma_td2 != value))
				{
					this.Onma_td2Changing(value);
					this.SendPropertyChanging();
					this._ma_td2 = value;
					this.SendPropertyChanged("ma_td2");
					this.Onma_td2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ma_td3", DbType="Char(16)")]
		public string ma_td3
		{
			get
			{
				return this._ma_td3;
			}
			set
			{
				if ((this._ma_td3 != value))
				{
					this.Onma_td3Changing(value);
					this.SendPropertyChanging();
					this._ma_td3 = value;
					this.SendPropertyChanged("ma_td3");
					this.Onma_td3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sl_td1", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> sl_td1
		{
			get
			{
				return this._sl_td1;
			}
			set
			{
				if ((this._sl_td1 != value))
				{
					this.Onsl_td1Changing(value);
					this.SendPropertyChanging();
					this._sl_td1 = value;
					this.SendPropertyChanged("sl_td1");
					this.Onsl_td1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sl_td2", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> sl_td2
		{
			get
			{
				return this._sl_td2;
			}
			set
			{
				if ((this._sl_td2 != value))
				{
					this.Onsl_td2Changing(value);
					this.SendPropertyChanging();
					this._sl_td2 = value;
					this.SendPropertyChanged("sl_td2");
					this.Onsl_td2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sl_td3", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> sl_td3
		{
			get
			{
				return this._sl_td3;
			}
			set
			{
				if ((this._sl_td3 != value))
				{
					this.Onsl_td3Changing(value);
					this.SendPropertyChanging();
					this._sl_td3 = value;
					this.SendPropertyChanged("sl_td3");
					this.Onsl_td3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay_td1", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ngay_td1
		{
			get
			{
				return this._ngay_td1;
			}
			set
			{
				if ((this._ngay_td1 != value))
				{
					this.Onngay_td1Changing(value);
					this.SendPropertyChanging();
					this._ngay_td1 = value;
					this.SendPropertyChanged("ngay_td1");
					this.Onngay_td1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay_td2", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ngay_td2
		{
			get
			{
				return this._ngay_td2;
			}
			set
			{
				if ((this._ngay_td2 != value))
				{
					this.Onngay_td2Changing(value);
					this.SendPropertyChanging();
					this._ngay_td2 = value;
					this.SendPropertyChanged("ngay_td2");
					this.Onngay_td2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay_td3", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ngay_td3
		{
			get
			{
				return this._ngay_td3;
			}
			set
			{
				if ((this._ngay_td3 != value))
				{
					this.Onngay_td3Changing(value);
					this.SendPropertyChanging();
					this._ngay_td3 = value;
					this.SendPropertyChanged("ngay_td3");
					this.Onngay_td3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gc_td1", DbType="NChar(64)")]
		public string gc_td1
		{
			get
			{
				return this._gc_td1;
			}
			set
			{
				if ((this._gc_td1 != value))
				{
					this.Ongc_td1Changing(value);
					this.SendPropertyChanging();
					this._gc_td1 = value;
					this.SendPropertyChanged("gc_td1");
					this.Ongc_td1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gc_td2", DbType="NChar(64)")]
		public string gc_td2
		{
			get
			{
				return this._gc_td2;
			}
			set
			{
				if ((this._gc_td2 != value))
				{
					this.Ongc_td2Changing(value);
					this.SendPropertyChanging();
					this._gc_td2 = value;
					this.SendPropertyChanged("gc_td2");
					this.Ongc_td2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gc_td3", DbType="NChar(64)")]
		public string gc_td3
		{
			get
			{
				return this._gc_td3;
			}
			set
			{
				if ((this._gc_td3 != value))
				{
					this.Ongc_td3Changing(value);
					this.SendPropertyChanging();
					this._gc_td3 = value;
					this.SendPropertyChanged("gc_td3");
					this.Ongc_td3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary logo
		{
			get
			{
				return this._logo;
			}
			set
			{
				if ((this._logo != value))
				{
					this.OnlogoChanging(value);
					this.SendPropertyChanging();
					this._logo = value;
					this.SendPropertyChanged("logo");
					this.OnlogoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentVoucher")]
	public partial class PaymentVoucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PaidTo;
		
		private string _IdentifyNo;
		
		private string _BelongTo;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _ContentPayment;
		
		private string _TotalAmountService;
		
		private string _DeliveryDate;
		
		private string _TotalAmount;
		
		private string _TotalWords;
		
		private long _ShipmentId;
		
		private long _Id;
		
		private string _CompanyName;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaidToChanging(string value);
    partial void OnPaidToChanged();
    partial void OnIdentifyNoChanging(string value);
    partial void OnIdentifyNoChanged();
    partial void OnBelongToChanging(string value);
    partial void OnBelongToChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnContentPaymentChanging(string value);
    partial void OnContentPaymentChanged();
    partial void OnTotalAmountServiceChanging(string value);
    partial void OnTotalAmountServiceChanged();
    partial void OnDeliveryDateChanging(string value);
    partial void OnDeliveryDateChanged();
    partial void OnTotalAmountChanging(string value);
    partial void OnTotalAmountChanged();
    partial void OnTotalWordsChanging(string value);
    partial void OnTotalWordsChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    #endregion
		
		public PaymentVoucher()
		{
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidTo", DbType="NVarChar(500)")]
		public string PaidTo
		{
			get
			{
				return this._PaidTo;
			}
			set
			{
				if ((this._PaidTo != value))
				{
					this.OnPaidToChanging(value);
					this.SendPropertyChanging();
					this._PaidTo = value;
					this.SendPropertyChanged("PaidTo");
					this.OnPaidToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifyNo", DbType="NVarChar(50)")]
		public string IdentifyNo
		{
			get
			{
				return this._IdentifyNo;
			}
			set
			{
				if ((this._IdentifyNo != value))
				{
					this.OnIdentifyNoChanging(value);
					this.SendPropertyChanging();
					this._IdentifyNo = value;
					this.SendPropertyChanged("IdentifyNo");
					this.OnIdentifyNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BelongTo", DbType="NVarChar(500)")]
		public string BelongTo
		{
			get
			{
				return this._BelongTo;
			}
			set
			{
				if ((this._BelongTo != value))
				{
					this.OnBelongToChanging(value);
					this.SendPropertyChanging();
					this._BelongTo = value;
					this.SendPropertyChanged("BelongTo");
					this.OnBelongToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentPayment", DbType="NVarChar(200)")]
		public string ContentPayment
		{
			get
			{
				return this._ContentPayment;
			}
			set
			{
				if ((this._ContentPayment != value))
				{
					this.OnContentPaymentChanging(value);
					this.SendPropertyChanging();
					this._ContentPayment = value;
					this.SendPropertyChanged("ContentPayment");
					this.OnContentPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmountService", DbType="NVarChar(50)")]
		public string TotalAmountService
		{
			get
			{
				return this._TotalAmountService;
			}
			set
			{
				if ((this._TotalAmountService != value))
				{
					this.OnTotalAmountServiceChanging(value);
					this.SendPropertyChanging();
					this._TotalAmountService = value;
					this.SendPropertyChanged("TotalAmountService");
					this.OnTotalAmountServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="NVarChar(50)")]
		public string DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="NVarChar(50)")]
		public string TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalWords", DbType="NVarChar(500)")]
		public string TotalWords
		{
			get
			{
				return this._TotalWords;
			}
			set
			{
				if ((this._TotalWords != value))
				{
					this.OnTotalWordsChanging(value);
					this.SendPropertyChanging();
					this._TotalWords = value;
					this.SendPropertyChanged("TotalWords");
					this.OnTotalWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_PaymentVoucher", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.PaymentVouchers.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.PaymentVouchers.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _NameEnglish;
		
		private string _Uom;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Image;
		
		private string _Category1;
		
		private string _Category2;
		
		private string _Category3;
		
		private System.Nullable<long> _SupplierId;
		
		private System.Nullable<long> _CreatedBy;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<System.DateTime> _DateModify;
		
		private string _FileName;
		
		private string _ContentType;
		
		private EntitySet<DT81> _DT81s;
		
		private EntitySet<StockCard> _StockCards;
		
		private EntitySet<DT72> _DT72s;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameEnglishChanging(string value);
    partial void OnNameEnglishChanged();
    partial void OnUomChanging(string value);
    partial void OnUomChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnCategory1Changing(string value);
    partial void OnCategory1Changed();
    partial void OnCategory2Changing(string value);
    partial void OnCategory2Changed();
    partial void OnCategory3Changing(string value);
    partial void OnCategory3Changed();
    partial void OnSupplierIdChanging(System.Nullable<long> value);
    partial void OnSupplierIdChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnDateModifyChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifyChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    #endregion
		
		public Product()
		{
			this._DT81s = new EntitySet<DT81>(new Action<DT81>(this.attach_DT81s), new Action<DT81>(this.detach_DT81s));
			this._StockCards = new EntitySet<StockCard>(new Action<StockCard>(this.attach_StockCards), new Action<StockCard>(this.detach_StockCards));
			this._DT72s = new EntitySet<DT72>(new Action<DT72>(this.attach_DT72s), new Action<DT72>(this.detach_DT72s));
			this._Supplier = default(EntityRef<Supplier>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEnglish", DbType="NVarChar(200)")]
		public string NameEnglish
		{
			get
			{
				return this._NameEnglish;
			}
			set
			{
				if ((this._NameEnglish != value))
				{
					this.OnNameEnglishChanging(value);
					this.SendPropertyChanging();
					this._NameEnglish = value;
					this.SendPropertyChanged("NameEnglish");
					this.OnNameEnglishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uom", DbType="NChar(16)")]
		public string Uom
		{
			get
			{
				return this._Uom;
			}
			set
			{
				if ((this._Uom != value))
				{
					this.OnUomChanging(value);
					this.SendPropertyChanging();
					this._Uom = value;
					this.SendPropertyChanged("Uom");
					this.OnUomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category1", DbType="Char(16)")]
		public string Category1
		{
			get
			{
				return this._Category1;
			}
			set
			{
				if ((this._Category1 != value))
				{
					this.OnCategory1Changing(value);
					this.SendPropertyChanging();
					this._Category1 = value;
					this.SendPropertyChanged("Category1");
					this.OnCategory1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category2", DbType="Char(16)")]
		public string Category2
		{
			get
			{
				return this._Category2;
			}
			set
			{
				if ((this._Category2 != value))
				{
					this.OnCategory2Changing(value);
					this.SendPropertyChanging();
					this._Category2 = value;
					this.SendPropertyChanged("Category2");
					this.OnCategory2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category3", DbType="Char(16)")]
		public string Category3
		{
			get
			{
				return this._Category3;
			}
			set
			{
				if ((this._Category3 != value))
				{
					this.OnCategory3Changing(value);
					this.SendPropertyChanging();
					this._Category3 = value;
					this.SendPropertyChanged("Category3");
					this.OnCategory3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="BigInt")]
		public System.Nullable<long> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
		public System.Nullable<long> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModify", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModify
		{
			get
			{
				return this._DateModify;
			}
			set
			{
				if ((this._DateModify != value))
				{
					this.OnDateModifyChanging(value);
					this.SendPropertyChanging();
					this._DateModify = value;
					this.SendPropertyChanged("DateModify");
					this.OnDateModifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(250)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(100)")]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DT81", Storage="_DT81s", ThisKey="Id", OtherKey="ProductID")]
		public EntitySet<DT81> DT81s
		{
			get
			{
				return this._DT81s;
			}
			set
			{
				this._DT81s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_StockCard", Storage="_StockCards", ThisKey="Id", OtherKey="ProductID")]
		public EntitySet<StockCard> StockCards
		{
			get
			{
				return this._StockCards;
			}
			set
			{
				this._StockCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DT72", Storage="_DT72s", ThisKey="Id", OtherKey="ProductID")]
		public EntitySet<DT72> DT72s
		{
			get
			{
				return this._DT72s;
			}
			set
			{
				this._DT72s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Product", Storage="_Supplier", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Product", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DT81s(DT81 entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_DT81s(DT81 entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_StockCards(StockCard entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_StockCards(StockCard entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_DT72s(DT72 entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_DT72s(DT72 entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestPayment")]
	public partial class RequestPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartmentName;
		
		private string _ShipmentCode;
		
		private long _Id;
		
		private long _ShipmentId;
		
		private string _BillNumber;
		
		private string _CustomerName;
		
		private string _CarrierName;
		
		private string _Fee;
		
		private string _DocFee;
		
		private string _Total1;
		
		private string _Total2;
		
		private string _FeeCurrency;
		
		private string _DocFeeCurrency;
		
		private string _Total1Currency;
		
		private string _Total2Currency;
		
		private string _PaidDate;
		
		private string _PaidType;
		
		private string _PaidPerson;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnShipmentCodeChanging(string value);
    partial void OnShipmentCodeChanged();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnBillNumberChanging(string value);
    partial void OnBillNumberChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCarrierNameChanging(string value);
    partial void OnCarrierNameChanged();
    partial void OnFeeChanging(string value);
    partial void OnFeeChanged();
    partial void OnDocFeeChanging(string value);
    partial void OnDocFeeChanged();
    partial void OnTotal1Changing(string value);
    partial void OnTotal1Changed();
    partial void OnTotal2Changing(string value);
    partial void OnTotal2Changed();
    partial void OnFeeCurrencyChanging(string value);
    partial void OnFeeCurrencyChanged();
    partial void OnDocFeeCurrencyChanging(string value);
    partial void OnDocFeeCurrencyChanged();
    partial void OnTotal1CurrencyChanging(string value);
    partial void OnTotal1CurrencyChanged();
    partial void OnTotal2CurrencyChanging(string value);
    partial void OnTotal2CurrencyChanged();
    partial void OnPaidDateChanging(string value);
    partial void OnPaidDateChanged();
    partial void OnPaidTypeChanging(string value);
    partial void OnPaidTypeChanged();
    partial void OnPaidPersonChanging(string value);
    partial void OnPaidPersonChanged();
    #endregion
		
		public RequestPayment()
		{
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(200)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentCode", DbType="NVarChar(200)")]
		public string ShipmentCode
		{
			get
			{
				return this._ShipmentCode;
			}
			set
			{
				if ((this._ShipmentCode != value))
				{
					this.OnShipmentCodeChanging(value);
					this.SendPropertyChanging();
					this._ShipmentCode = value;
					this.SendPropertyChanged("ShipmentCode");
					this.OnShipmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNumber", DbType="NVarChar(50)")]
		public string BillNumber
		{
			get
			{
				return this._BillNumber;
			}
			set
			{
				if ((this._BillNumber != value))
				{
					this.OnBillNumberChanging(value);
					this.SendPropertyChanging();
					this._BillNumber = value;
					this.SendPropertyChanged("BillNumber");
					this.OnBillNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(100)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierName", DbType="NVarChar(100)")]
		public string CarrierName
		{
			get
			{
				return this._CarrierName;
			}
			set
			{
				if ((this._CarrierName != value))
				{
					this.OnCarrierNameChanging(value);
					this.SendPropertyChanging();
					this._CarrierName = value;
					this.SendPropertyChanged("CarrierName");
					this.OnCarrierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fee", DbType="NVarChar(50)")]
		public string Fee
		{
			get
			{
				return this._Fee;
			}
			set
			{
				if ((this._Fee != value))
				{
					this.OnFeeChanging(value);
					this.SendPropertyChanging();
					this._Fee = value;
					this.SendPropertyChanged("Fee");
					this.OnFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocFee", DbType="NVarChar(50)")]
		public string DocFee
		{
			get
			{
				return this._DocFee;
			}
			set
			{
				if ((this._DocFee != value))
				{
					this.OnDocFeeChanging(value);
					this.SendPropertyChanging();
					this._DocFee = value;
					this.SendPropertyChanged("DocFee");
					this.OnDocFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total1", DbType="NVarChar(50)")]
		public string Total1
		{
			get
			{
				return this._Total1;
			}
			set
			{
				if ((this._Total1 != value))
				{
					this.OnTotal1Changing(value);
					this.SendPropertyChanging();
					this._Total1 = value;
					this.SendPropertyChanged("Total1");
					this.OnTotal1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total2", DbType="NVarChar(50)")]
		public string Total2
		{
			get
			{
				return this._Total2;
			}
			set
			{
				if ((this._Total2 != value))
				{
					this.OnTotal2Changing(value);
					this.SendPropertyChanging();
					this._Total2 = value;
					this.SendPropertyChanged("Total2");
					this.OnTotal2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeCurrency", DbType="NVarChar(50)")]
		public string FeeCurrency
		{
			get
			{
				return this._FeeCurrency;
			}
			set
			{
				if ((this._FeeCurrency != value))
				{
					this.OnFeeCurrencyChanging(value);
					this.SendPropertyChanging();
					this._FeeCurrency = value;
					this.SendPropertyChanged("FeeCurrency");
					this.OnFeeCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocFeeCurrency", DbType="NVarChar(50)")]
		public string DocFeeCurrency
		{
			get
			{
				return this._DocFeeCurrency;
			}
			set
			{
				if ((this._DocFeeCurrency != value))
				{
					this.OnDocFeeCurrencyChanging(value);
					this.SendPropertyChanging();
					this._DocFeeCurrency = value;
					this.SendPropertyChanged("DocFeeCurrency");
					this.OnDocFeeCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total1Currency", DbType="NVarChar(50)")]
		public string Total1Currency
		{
			get
			{
				return this._Total1Currency;
			}
			set
			{
				if ((this._Total1Currency != value))
				{
					this.OnTotal1CurrencyChanging(value);
					this.SendPropertyChanging();
					this._Total1Currency = value;
					this.SendPropertyChanged("Total1Currency");
					this.OnTotal1CurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total2Currency", DbType="NVarChar(50)")]
		public string Total2Currency
		{
			get
			{
				return this._Total2Currency;
			}
			set
			{
				if ((this._Total2Currency != value))
				{
					this.OnTotal2CurrencyChanging(value);
					this.SendPropertyChanging();
					this._Total2Currency = value;
					this.SendPropertyChanged("Total2Currency");
					this.OnTotal2CurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDate", DbType="NVarChar(50)")]
		public string PaidDate
		{
			get
			{
				return this._PaidDate;
			}
			set
			{
				if ((this._PaidDate != value))
				{
					this.OnPaidDateChanging(value);
					this.SendPropertyChanging();
					this._PaidDate = value;
					this.SendPropertyChanged("PaidDate");
					this.OnPaidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidType", DbType="NVarChar(50)")]
		public string PaidType
		{
			get
			{
				return this._PaidType;
			}
			set
			{
				if ((this._PaidType != value))
				{
					this.OnPaidTypeChanging(value);
					this.SendPropertyChanging();
					this._PaidType = value;
					this.SendPropertyChanged("PaidType");
					this.OnPaidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidPerson", DbType="NVarChar(50)")]
		public string PaidPerson
		{
			get
			{
				return this._PaidPerson;
			}
			set
			{
				if ((this._PaidPerson != value))
				{
					this.OnPaidPersonChanging(value);
					this.SendPropertyChanging();
					this._PaidPerson = value;
					this.SendPropertyChanged("PaidPerson");
					this.OnPaidPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_RequestPayment", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.RequestPayments.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.RequestPayments.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Revenue")]
	public partial class Revenue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private decimal _BRate;
		
		private decimal _ARate;
		
		private decimal _SRate;
		
		private System.Nullable<decimal> _INTransportRate;
		
		private System.Nullable<decimal> _INInlandService;
		
		private System.Nullable<decimal> _INCreditDebit;
		
		private System.Nullable<decimal> _INDocumentFee;
		
		private System.Nullable<decimal> _INHandingFee;
		
		private System.Nullable<decimal> _INTHC;
		
		private System.Nullable<decimal> _INCFS;
		
		private string _AutoName1;
		
		private string _AutoName2;
		
		private System.Nullable<decimal> _INAutoValue1;
		
		private System.Nullable<decimal> _INAutoValue2;
		
		private System.Nullable<decimal> _OUTAutoValue1;
		
		private System.Nullable<decimal> _OUTAutoValue2;
		
		private System.Nullable<decimal> _INTransportRate_OS;
		
		private System.Nullable<decimal> _INInlandService_OS;
		
		private System.Nullable<decimal> _INCreditDebit_OS;
		
		private System.Nullable<decimal> _INDocumentFee_OS;
		
		private System.Nullable<decimal> _INHandingFee_OS;
		
		private System.Nullable<decimal> _INAutoValue1_OS;
		
		private System.Nullable<decimal> _INAutoValue2_OS;
		
		private System.Nullable<decimal> _EXAutoValue1_OS;
		
		private System.Nullable<decimal> _EXAutoValue2_OS;
		
		private System.Nullable<decimal> _EXTransportRate_OS;
		
		private System.Nullable<decimal> _EXTransportRate;
		
		private System.Nullable<decimal> _EXInlandService_OS;
		
		private System.Nullable<decimal> _EXInlandService;
		
		private System.Nullable<decimal> _EXCommision2Shipper;
		
		private System.Nullable<decimal> _EXCommision2Carrier;
		
		private System.Nullable<decimal> _EXTax;
		
		private System.Nullable<decimal> _EXCreditDebit;
		
		private System.Nullable<decimal> _EXCreditDebit_OS;
		
		private System.Nullable<decimal> _EXDocumentFee;
		
		private System.Nullable<decimal> _EXHandingFee;
		
		private System.Nullable<decimal> _EXTHC;
		
		private System.Nullable<decimal> _EXCFS;
		
		private string _EXManualName1;
		
		private string _EXManualName2;
		
		private System.Nullable<decimal> _EXManualValue1;
		
		private System.Nullable<decimal> _ExManualValue2;
		
		private System.Nullable<decimal> _EXmanualValue1_OS;
		
		private System.Nullable<decimal> _EXmanualValue2_OS;
		
		private System.Nullable<decimal> _InvoiceCustom;
		
		private string _Description4Invoice;
		
		private string _INRemark;
		
		private string _EXRemark;
		
		private System.Nullable<decimal> _Income;
		
		private System.Nullable<decimal> _INVI;
		
		private System.Nullable<decimal> _INOS;
		
		private System.Nullable<decimal> _Expense;
		
		private System.Nullable<decimal> _EXVI;
		
		private System.Nullable<decimal> _EXOS;
		
		private System.Nullable<decimal> _Earning;
		
		private System.Nullable<decimal> _EarningVI;
		
		private decimal _EarningOS;
		
		private decimal _InvAmount1;
		
		private string _InvType1;
		
		private System.Nullable<long> _InvAgentId1;
		
		private System.Nullable<decimal> _InvAmount2;
		
		private string _InvType2;
		
		private System.Nullable<long> _InvAgentId2;
		
		private int _BonRequest_;
		
		private int _BonApprove_;
		
		private decimal _AmountBonus1;
		
		private decimal _AmountBonus2;
		
		private string _AccInv1;
		
		private string _AccInv2;
		
		private string _AccInv3;
		
		private string _AccInv4;
		
		private System.Nullable<System.DateTime> _AccInvDate1;
		
		private System.Nullable<System.DateTime> _AccInvDate2;
		
		private System.Nullable<System.DateTime> _AccInvDate3;
		
		private System.Nullable<System.DateTime> _AccInvDate4;
		
		private System.Nullable<long> _ApproveId;
		
		private int _Tax;
		
		private System.Nullable<long> _AccountId;
		
		private System.Nullable<long> _PaidToCarrier;
		
		private string _Currency1;
		
		private string _Currency2;
		
		private string _SaleType;
		
		private System.Nullable<decimal> _BonApprove;
		
		private System.Nullable<decimal> _BonRequest;
		
		private System.Nullable<bool> _IsControl;
		
		private bool _IsRevised;
		
		private bool _IsRequest;
		
		private EntitySet<InvoideIssued> _InvoideIssueds;
		
		private EntitySet<SOAInvoice> _SOAInvoices;
		
		private EntityRef<Agent> _Agent;
		
		private EntityRef<Agent> _Agent1;
		
		private EntityRef<CarrierAirLine> _CarrierAirLine;
		
		private EntityRef<Shipment> _Shipment;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBRateChanging(decimal value);
    partial void OnBRateChanged();
    partial void OnARateChanging(decimal value);
    partial void OnARateChanged();
    partial void OnSRateChanging(decimal value);
    partial void OnSRateChanged();
    partial void OnINTransportRateChanging(System.Nullable<decimal> value);
    partial void OnINTransportRateChanged();
    partial void OnINInlandServiceChanging(System.Nullable<decimal> value);
    partial void OnINInlandServiceChanged();
    partial void OnINCreditDebitChanging(System.Nullable<decimal> value);
    partial void OnINCreditDebitChanged();
    partial void OnINDocumentFeeChanging(System.Nullable<decimal> value);
    partial void OnINDocumentFeeChanged();
    partial void OnINHandingFeeChanging(System.Nullable<decimal> value);
    partial void OnINHandingFeeChanged();
    partial void OnINTHCChanging(System.Nullable<decimal> value);
    partial void OnINTHCChanged();
    partial void OnINCFSChanging(System.Nullable<decimal> value);
    partial void OnINCFSChanged();
    partial void OnAutoName1Changing(string value);
    partial void OnAutoName1Changed();
    partial void OnAutoName2Changing(string value);
    partial void OnAutoName2Changed();
    partial void OnINAutoValue1Changing(System.Nullable<decimal> value);
    partial void OnINAutoValue1Changed();
    partial void OnINAutoValue2Changing(System.Nullable<decimal> value);
    partial void OnINAutoValue2Changed();
    partial void OnOUTAutoValue1Changing(System.Nullable<decimal> value);
    partial void OnOUTAutoValue1Changed();
    partial void OnOUTAutoValue2Changing(System.Nullable<decimal> value);
    partial void OnOUTAutoValue2Changed();
    partial void OnINTransportRate_OSChanging(System.Nullable<decimal> value);
    partial void OnINTransportRate_OSChanged();
    partial void OnINInlandService_OSChanging(System.Nullable<decimal> value);
    partial void OnINInlandService_OSChanged();
    partial void OnINCreditDebit_OSChanging(System.Nullable<decimal> value);
    partial void OnINCreditDebit_OSChanged();
    partial void OnINDocumentFee_OSChanging(System.Nullable<decimal> value);
    partial void OnINDocumentFee_OSChanged();
    partial void OnINHandingFee_OSChanging(System.Nullable<decimal> value);
    partial void OnINHandingFee_OSChanged();
    partial void OnINAutoValue1_OSChanging(System.Nullable<decimal> value);
    partial void OnINAutoValue1_OSChanged();
    partial void OnINAutoValue2_OSChanging(System.Nullable<decimal> value);
    partial void OnINAutoValue2_OSChanged();
    partial void OnEXAutoValue1_OSChanging(System.Nullable<decimal> value);
    partial void OnEXAutoValue1_OSChanged();
    partial void OnEXAutoValue2_OSChanging(System.Nullable<decimal> value);
    partial void OnEXAutoValue2_OSChanged();
    partial void OnEXTransportRate_OSChanging(System.Nullable<decimal> value);
    partial void OnEXTransportRate_OSChanged();
    partial void OnEXTransportRateChanging(System.Nullable<decimal> value);
    partial void OnEXTransportRateChanged();
    partial void OnEXInlandService_OSChanging(System.Nullable<decimal> value);
    partial void OnEXInlandService_OSChanged();
    partial void OnEXInlandServiceChanging(System.Nullable<decimal> value);
    partial void OnEXInlandServiceChanged();
    partial void OnEXCommision2ShipperChanging(System.Nullable<decimal> value);
    partial void OnEXCommision2ShipperChanged();
    partial void OnEXCommision2CarrierChanging(System.Nullable<decimal> value);
    partial void OnEXCommision2CarrierChanged();
    partial void OnEXTaxChanging(System.Nullable<decimal> value);
    partial void OnEXTaxChanged();
    partial void OnEXCreditDebitChanging(System.Nullable<decimal> value);
    partial void OnEXCreditDebitChanged();
    partial void OnEXCreditDebit_OSChanging(System.Nullable<decimal> value);
    partial void OnEXCreditDebit_OSChanged();
    partial void OnEXDocumentFeeChanging(System.Nullable<decimal> value);
    partial void OnEXDocumentFeeChanged();
    partial void OnEXHandingFeeChanging(System.Nullable<decimal> value);
    partial void OnEXHandingFeeChanged();
    partial void OnEXTHCChanging(System.Nullable<decimal> value);
    partial void OnEXTHCChanged();
    partial void OnEXCFSChanging(System.Nullable<decimal> value);
    partial void OnEXCFSChanged();
    partial void OnEXManualName1Changing(string value);
    partial void OnEXManualName1Changed();
    partial void OnEXManualName2Changing(string value);
    partial void OnEXManualName2Changed();
    partial void OnEXManualValue1Changing(System.Nullable<decimal> value);
    partial void OnEXManualValue1Changed();
    partial void OnExManualValue2Changing(System.Nullable<decimal> value);
    partial void OnExManualValue2Changed();
    partial void OnEXmanualValue1_OSChanging(System.Nullable<decimal> value);
    partial void OnEXmanualValue1_OSChanged();
    partial void OnEXmanualValue2_OSChanging(System.Nullable<decimal> value);
    partial void OnEXmanualValue2_OSChanged();
    partial void OnInvoiceCustomChanging(System.Nullable<decimal> value);
    partial void OnInvoiceCustomChanged();
    partial void OnDescription4InvoiceChanging(string value);
    partial void OnDescription4InvoiceChanged();
    partial void OnINRemarkChanging(string value);
    partial void OnINRemarkChanged();
    partial void OnEXRemarkChanging(string value);
    partial void OnEXRemarkChanged();
    partial void OnIncomeChanging(System.Nullable<decimal> value);
    partial void OnIncomeChanged();
    partial void OnINVIChanging(System.Nullable<decimal> value);
    partial void OnINVIChanged();
    partial void OnINOSChanging(System.Nullable<decimal> value);
    partial void OnINOSChanged();
    partial void OnExpenseChanging(System.Nullable<decimal> value);
    partial void OnExpenseChanged();
    partial void OnEXVIChanging(System.Nullable<decimal> value);
    partial void OnEXVIChanged();
    partial void OnEXOSChanging(System.Nullable<decimal> value);
    partial void OnEXOSChanged();
    partial void OnEarningChanging(System.Nullable<decimal> value);
    partial void OnEarningChanged();
    partial void OnEarningVIChanging(System.Nullable<decimal> value);
    partial void OnEarningVIChanged();
    partial void OnEarningOSChanging(decimal value);
    partial void OnEarningOSChanged();
    partial void OnInvAmount1Changing(decimal value);
    partial void OnInvAmount1Changed();
    partial void OnInvType1Changing(string value);
    partial void OnInvType1Changed();
    partial void OnInvAgentId1Changing(System.Nullable<long> value);
    partial void OnInvAgentId1Changed();
    partial void OnInvAmount2Changing(System.Nullable<decimal> value);
    partial void OnInvAmount2Changed();
    partial void OnInvType2Changing(string value);
    partial void OnInvType2Changed();
    partial void OnInvAgentId2Changing(System.Nullable<long> value);
    partial void OnInvAgentId2Changed();
    partial void OnBonRequest_Changing(int value);
    partial void OnBonRequest_Changed();
    partial void OnBonApprove_Changing(int value);
    partial void OnBonApprove_Changed();
    partial void OnAmountBonus1Changing(decimal value);
    partial void OnAmountBonus1Changed();
    partial void OnAmountBonus2Changing(decimal value);
    partial void OnAmountBonus2Changed();
    partial void OnAccInv1Changing(string value);
    partial void OnAccInv1Changed();
    partial void OnAccInv2Changing(string value);
    partial void OnAccInv2Changed();
    partial void OnAccInv3Changing(string value);
    partial void OnAccInv3Changed();
    partial void OnAccInv4Changing(string value);
    partial void OnAccInv4Changed();
    partial void OnAccInvDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnAccInvDate1Changed();
    partial void OnAccInvDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnAccInvDate2Changed();
    partial void OnAccInvDate3Changing(System.Nullable<System.DateTime> value);
    partial void OnAccInvDate3Changed();
    partial void OnAccInvDate4Changing(System.Nullable<System.DateTime> value);
    partial void OnAccInvDate4Changed();
    partial void OnApproveIdChanging(System.Nullable<long> value);
    partial void OnApproveIdChanged();
    partial void OnTaxChanging(int value);
    partial void OnTaxChanged();
    partial void OnAccountIdChanging(System.Nullable<long> value);
    partial void OnAccountIdChanged();
    partial void OnPaidToCarrierChanging(System.Nullable<long> value);
    partial void OnPaidToCarrierChanged();
    partial void OnCurrency1Changing(string value);
    partial void OnCurrency1Changed();
    partial void OnCurrency2Changing(string value);
    partial void OnCurrency2Changed();
    partial void OnSaleTypeChanging(string value);
    partial void OnSaleTypeChanged();
    partial void OnBonApproveChanging(System.Nullable<decimal> value);
    partial void OnBonApproveChanged();
    partial void OnBonRequestChanging(System.Nullable<decimal> value);
    partial void OnBonRequestChanged();
    partial void OnIsControlChanging(System.Nullable<bool> value);
    partial void OnIsControlChanged();
    partial void OnIsRevisedChanging(bool value);
    partial void OnIsRevisedChanged();
    partial void OnIsRequestChanging(bool value);
    partial void OnIsRequestChanged();
    #endregion
		
		public Revenue()
		{
			this._InvoideIssueds = new EntitySet<InvoideIssued>(new Action<InvoideIssued>(this.attach_InvoideIssueds), new Action<InvoideIssued>(this.detach_InvoideIssueds));
			this._SOAInvoices = new EntitySet<SOAInvoice>(new Action<SOAInvoice>(this.attach_SOAInvoices), new Action<SOAInvoice>(this.detach_SOAInvoices));
			this._Agent = default(EntityRef<Agent>);
			this._Agent1 = default(EntityRef<Agent>);
			this._CarrierAirLine = default(EntityRef<CarrierAirLine>);
			this._Shipment = default(EntityRef<Shipment>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRate", DbType="Money NOT NULL")]
		public decimal BRate
		{
			get
			{
				return this._BRate;
			}
			set
			{
				if ((this._BRate != value))
				{
					this.OnBRateChanging(value);
					this.SendPropertyChanging();
					this._BRate = value;
					this.SendPropertyChanged("BRate");
					this.OnBRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARate", DbType="Money NOT NULL")]
		public decimal ARate
		{
			get
			{
				return this._ARate;
			}
			set
			{
				if ((this._ARate != value))
				{
					this.OnARateChanging(value);
					this.SendPropertyChanging();
					this._ARate = value;
					this.SendPropertyChanged("ARate");
					this.OnARateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRate", DbType="Money NOT NULL")]
		public decimal SRate
		{
			get
			{
				return this._SRate;
			}
			set
			{
				if ((this._SRate != value))
				{
					this.OnSRateChanging(value);
					this.SendPropertyChanging();
					this._SRate = value;
					this.SendPropertyChanged("SRate");
					this.OnSRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTransportRate", DbType="Money")]
		public System.Nullable<decimal> INTransportRate
		{
			get
			{
				return this._INTransportRate;
			}
			set
			{
				if ((this._INTransportRate != value))
				{
					this.OnINTransportRateChanging(value);
					this.SendPropertyChanging();
					this._INTransportRate = value;
					this.SendPropertyChanged("INTransportRate");
					this.OnINTransportRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INInlandService", DbType="Money")]
		public System.Nullable<decimal> INInlandService
		{
			get
			{
				return this._INInlandService;
			}
			set
			{
				if ((this._INInlandService != value))
				{
					this.OnINInlandServiceChanging(value);
					this.SendPropertyChanging();
					this._INInlandService = value;
					this.SendPropertyChanged("INInlandService");
					this.OnINInlandServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INCreditDebit", DbType="Money")]
		public System.Nullable<decimal> INCreditDebit
		{
			get
			{
				return this._INCreditDebit;
			}
			set
			{
				if ((this._INCreditDebit != value))
				{
					this.OnINCreditDebitChanging(value);
					this.SendPropertyChanging();
					this._INCreditDebit = value;
					this.SendPropertyChanged("INCreditDebit");
					this.OnINCreditDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INDocumentFee", DbType="Money")]
		public System.Nullable<decimal> INDocumentFee
		{
			get
			{
				return this._INDocumentFee;
			}
			set
			{
				if ((this._INDocumentFee != value))
				{
					this.OnINDocumentFeeChanging(value);
					this.SendPropertyChanging();
					this._INDocumentFee = value;
					this.SendPropertyChanged("INDocumentFee");
					this.OnINDocumentFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INHandingFee", DbType="Money")]
		public System.Nullable<decimal> INHandingFee
		{
			get
			{
				return this._INHandingFee;
			}
			set
			{
				if ((this._INHandingFee != value))
				{
					this.OnINHandingFeeChanging(value);
					this.SendPropertyChanging();
					this._INHandingFee = value;
					this.SendPropertyChanged("INHandingFee");
					this.OnINHandingFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTHC", DbType="Money")]
		public System.Nullable<decimal> INTHC
		{
			get
			{
				return this._INTHC;
			}
			set
			{
				if ((this._INTHC != value))
				{
					this.OnINTHCChanging(value);
					this.SendPropertyChanging();
					this._INTHC = value;
					this.SendPropertyChanged("INTHC");
					this.OnINTHCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INCFS", DbType="Money")]
		public System.Nullable<decimal> INCFS
		{
			get
			{
				return this._INCFS;
			}
			set
			{
				if ((this._INCFS != value))
				{
					this.OnINCFSChanging(value);
					this.SendPropertyChanging();
					this._INCFS = value;
					this.SendPropertyChanged("INCFS");
					this.OnINCFSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoName1", DbType="NVarChar(100)")]
		public string AutoName1
		{
			get
			{
				return this._AutoName1;
			}
			set
			{
				if ((this._AutoName1 != value))
				{
					this.OnAutoName1Changing(value);
					this.SendPropertyChanging();
					this._AutoName1 = value;
					this.SendPropertyChanged("AutoName1");
					this.OnAutoName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoName2", DbType="NVarChar(100)")]
		public string AutoName2
		{
			get
			{
				return this._AutoName2;
			}
			set
			{
				if ((this._AutoName2 != value))
				{
					this.OnAutoName2Changing(value);
					this.SendPropertyChanging();
					this._AutoName2 = value;
					this.SendPropertyChanged("AutoName2");
					this.OnAutoName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INAutoValue1", DbType="Money")]
		public System.Nullable<decimal> INAutoValue1
		{
			get
			{
				return this._INAutoValue1;
			}
			set
			{
				if ((this._INAutoValue1 != value))
				{
					this.OnINAutoValue1Changing(value);
					this.SendPropertyChanging();
					this._INAutoValue1 = value;
					this.SendPropertyChanged("INAutoValue1");
					this.OnINAutoValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INAutoValue2", DbType="Money")]
		public System.Nullable<decimal> INAutoValue2
		{
			get
			{
				return this._INAutoValue2;
			}
			set
			{
				if ((this._INAutoValue2 != value))
				{
					this.OnINAutoValue2Changing(value);
					this.SendPropertyChanging();
					this._INAutoValue2 = value;
					this.SendPropertyChanged("INAutoValue2");
					this.OnINAutoValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTAutoValue1", DbType="Money")]
		public System.Nullable<decimal> OUTAutoValue1
		{
			get
			{
				return this._OUTAutoValue1;
			}
			set
			{
				if ((this._OUTAutoValue1 != value))
				{
					this.OnOUTAutoValue1Changing(value);
					this.SendPropertyChanging();
					this._OUTAutoValue1 = value;
					this.SendPropertyChanged("OUTAutoValue1");
					this.OnOUTAutoValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTAutoValue2", DbType="Money")]
		public System.Nullable<decimal> OUTAutoValue2
		{
			get
			{
				return this._OUTAutoValue2;
			}
			set
			{
				if ((this._OUTAutoValue2 != value))
				{
					this.OnOUTAutoValue2Changing(value);
					this.SendPropertyChanging();
					this._OUTAutoValue2 = value;
					this.SendPropertyChanged("OUTAutoValue2");
					this.OnOUTAutoValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTransportRate_OS", DbType="Money")]
		public System.Nullable<decimal> INTransportRate_OS
		{
			get
			{
				return this._INTransportRate_OS;
			}
			set
			{
				if ((this._INTransportRate_OS != value))
				{
					this.OnINTransportRate_OSChanging(value);
					this.SendPropertyChanging();
					this._INTransportRate_OS = value;
					this.SendPropertyChanged("INTransportRate_OS");
					this.OnINTransportRate_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INInlandService_OS", DbType="Money")]
		public System.Nullable<decimal> INInlandService_OS
		{
			get
			{
				return this._INInlandService_OS;
			}
			set
			{
				if ((this._INInlandService_OS != value))
				{
					this.OnINInlandService_OSChanging(value);
					this.SendPropertyChanging();
					this._INInlandService_OS = value;
					this.SendPropertyChanged("INInlandService_OS");
					this.OnINInlandService_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INCreditDebit_OS", DbType="Money")]
		public System.Nullable<decimal> INCreditDebit_OS
		{
			get
			{
				return this._INCreditDebit_OS;
			}
			set
			{
				if ((this._INCreditDebit_OS != value))
				{
					this.OnINCreditDebit_OSChanging(value);
					this.SendPropertyChanging();
					this._INCreditDebit_OS = value;
					this.SendPropertyChanged("INCreditDebit_OS");
					this.OnINCreditDebit_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INDocumentFee_OS", DbType="Money")]
		public System.Nullable<decimal> INDocumentFee_OS
		{
			get
			{
				return this._INDocumentFee_OS;
			}
			set
			{
				if ((this._INDocumentFee_OS != value))
				{
					this.OnINDocumentFee_OSChanging(value);
					this.SendPropertyChanging();
					this._INDocumentFee_OS = value;
					this.SendPropertyChanged("INDocumentFee_OS");
					this.OnINDocumentFee_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INHandingFee_OS", DbType="Money")]
		public System.Nullable<decimal> INHandingFee_OS
		{
			get
			{
				return this._INHandingFee_OS;
			}
			set
			{
				if ((this._INHandingFee_OS != value))
				{
					this.OnINHandingFee_OSChanging(value);
					this.SendPropertyChanging();
					this._INHandingFee_OS = value;
					this.SendPropertyChanged("INHandingFee_OS");
					this.OnINHandingFee_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INAutoValue1_OS", DbType="Money")]
		public System.Nullable<decimal> INAutoValue1_OS
		{
			get
			{
				return this._INAutoValue1_OS;
			}
			set
			{
				if ((this._INAutoValue1_OS != value))
				{
					this.OnINAutoValue1_OSChanging(value);
					this.SendPropertyChanging();
					this._INAutoValue1_OS = value;
					this.SendPropertyChanged("INAutoValue1_OS");
					this.OnINAutoValue1_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INAutoValue2_OS", DbType="Money")]
		public System.Nullable<decimal> INAutoValue2_OS
		{
			get
			{
				return this._INAutoValue2_OS;
			}
			set
			{
				if ((this._INAutoValue2_OS != value))
				{
					this.OnINAutoValue2_OSChanging(value);
					this.SendPropertyChanging();
					this._INAutoValue2_OS = value;
					this.SendPropertyChanged("INAutoValue2_OS");
					this.OnINAutoValue2_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXAutoValue1_OS", DbType="Money")]
		public System.Nullable<decimal> EXAutoValue1_OS
		{
			get
			{
				return this._EXAutoValue1_OS;
			}
			set
			{
				if ((this._EXAutoValue1_OS != value))
				{
					this.OnEXAutoValue1_OSChanging(value);
					this.SendPropertyChanging();
					this._EXAutoValue1_OS = value;
					this.SendPropertyChanged("EXAutoValue1_OS");
					this.OnEXAutoValue1_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXAutoValue2_OS", DbType="Money")]
		public System.Nullable<decimal> EXAutoValue2_OS
		{
			get
			{
				return this._EXAutoValue2_OS;
			}
			set
			{
				if ((this._EXAutoValue2_OS != value))
				{
					this.OnEXAutoValue2_OSChanging(value);
					this.SendPropertyChanging();
					this._EXAutoValue2_OS = value;
					this.SendPropertyChanged("EXAutoValue2_OS");
					this.OnEXAutoValue2_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTransportRate_OS", DbType="Money")]
		public System.Nullable<decimal> EXTransportRate_OS
		{
			get
			{
				return this._EXTransportRate_OS;
			}
			set
			{
				if ((this._EXTransportRate_OS != value))
				{
					this.OnEXTransportRate_OSChanging(value);
					this.SendPropertyChanging();
					this._EXTransportRate_OS = value;
					this.SendPropertyChanged("EXTransportRate_OS");
					this.OnEXTransportRate_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTransportRate", DbType="Money")]
		public System.Nullable<decimal> EXTransportRate
		{
			get
			{
				return this._EXTransportRate;
			}
			set
			{
				if ((this._EXTransportRate != value))
				{
					this.OnEXTransportRateChanging(value);
					this.SendPropertyChanging();
					this._EXTransportRate = value;
					this.SendPropertyChanged("EXTransportRate");
					this.OnEXTransportRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXInlandService_OS", DbType="Money")]
		public System.Nullable<decimal> EXInlandService_OS
		{
			get
			{
				return this._EXInlandService_OS;
			}
			set
			{
				if ((this._EXInlandService_OS != value))
				{
					this.OnEXInlandService_OSChanging(value);
					this.SendPropertyChanging();
					this._EXInlandService_OS = value;
					this.SendPropertyChanged("EXInlandService_OS");
					this.OnEXInlandService_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXInlandService", DbType="Money")]
		public System.Nullable<decimal> EXInlandService
		{
			get
			{
				return this._EXInlandService;
			}
			set
			{
				if ((this._EXInlandService != value))
				{
					this.OnEXInlandServiceChanging(value);
					this.SendPropertyChanging();
					this._EXInlandService = value;
					this.SendPropertyChanged("EXInlandService");
					this.OnEXInlandServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXCommision2Shipper", DbType="Money")]
		public System.Nullable<decimal> EXCommision2Shipper
		{
			get
			{
				return this._EXCommision2Shipper;
			}
			set
			{
				if ((this._EXCommision2Shipper != value))
				{
					this.OnEXCommision2ShipperChanging(value);
					this.SendPropertyChanging();
					this._EXCommision2Shipper = value;
					this.SendPropertyChanged("EXCommision2Shipper");
					this.OnEXCommision2ShipperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXCommision2Carrier", DbType="Money")]
		public System.Nullable<decimal> EXCommision2Carrier
		{
			get
			{
				return this._EXCommision2Carrier;
			}
			set
			{
				if ((this._EXCommision2Carrier != value))
				{
					this.OnEXCommision2CarrierChanging(value);
					this.SendPropertyChanging();
					this._EXCommision2Carrier = value;
					this.SendPropertyChanged("EXCommision2Carrier");
					this.OnEXCommision2CarrierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTax", DbType="Money")]
		public System.Nullable<decimal> EXTax
		{
			get
			{
				return this._EXTax;
			}
			set
			{
				if ((this._EXTax != value))
				{
					this.OnEXTaxChanging(value);
					this.SendPropertyChanging();
					this._EXTax = value;
					this.SendPropertyChanged("EXTax");
					this.OnEXTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXCreditDebit", DbType="Money")]
		public System.Nullable<decimal> EXCreditDebit
		{
			get
			{
				return this._EXCreditDebit;
			}
			set
			{
				if ((this._EXCreditDebit != value))
				{
					this.OnEXCreditDebitChanging(value);
					this.SendPropertyChanging();
					this._EXCreditDebit = value;
					this.SendPropertyChanged("EXCreditDebit");
					this.OnEXCreditDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXCreditDebit_OS", DbType="Money")]
		public System.Nullable<decimal> EXCreditDebit_OS
		{
			get
			{
				return this._EXCreditDebit_OS;
			}
			set
			{
				if ((this._EXCreditDebit_OS != value))
				{
					this.OnEXCreditDebit_OSChanging(value);
					this.SendPropertyChanging();
					this._EXCreditDebit_OS = value;
					this.SendPropertyChanged("EXCreditDebit_OS");
					this.OnEXCreditDebit_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXDocumentFee", DbType="Money")]
		public System.Nullable<decimal> EXDocumentFee
		{
			get
			{
				return this._EXDocumentFee;
			}
			set
			{
				if ((this._EXDocumentFee != value))
				{
					this.OnEXDocumentFeeChanging(value);
					this.SendPropertyChanging();
					this._EXDocumentFee = value;
					this.SendPropertyChanged("EXDocumentFee");
					this.OnEXDocumentFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXHandingFee", DbType="Money")]
		public System.Nullable<decimal> EXHandingFee
		{
			get
			{
				return this._EXHandingFee;
			}
			set
			{
				if ((this._EXHandingFee != value))
				{
					this.OnEXHandingFeeChanging(value);
					this.SendPropertyChanging();
					this._EXHandingFee = value;
					this.SendPropertyChanged("EXHandingFee");
					this.OnEXHandingFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTHC", DbType="Money")]
		public System.Nullable<decimal> EXTHC
		{
			get
			{
				return this._EXTHC;
			}
			set
			{
				if ((this._EXTHC != value))
				{
					this.OnEXTHCChanging(value);
					this.SendPropertyChanging();
					this._EXTHC = value;
					this.SendPropertyChanged("EXTHC");
					this.OnEXTHCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXCFS", DbType="Money")]
		public System.Nullable<decimal> EXCFS
		{
			get
			{
				return this._EXCFS;
			}
			set
			{
				if ((this._EXCFS != value))
				{
					this.OnEXCFSChanging(value);
					this.SendPropertyChanging();
					this._EXCFS = value;
					this.SendPropertyChanged("EXCFS");
					this.OnEXCFSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXManualName1", DbType="NVarChar(100)")]
		public string EXManualName1
		{
			get
			{
				return this._EXManualName1;
			}
			set
			{
				if ((this._EXManualName1 != value))
				{
					this.OnEXManualName1Changing(value);
					this.SendPropertyChanging();
					this._EXManualName1 = value;
					this.SendPropertyChanged("EXManualName1");
					this.OnEXManualName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXManualName2", DbType="NVarChar(100)")]
		public string EXManualName2
		{
			get
			{
				return this._EXManualName2;
			}
			set
			{
				if ((this._EXManualName2 != value))
				{
					this.OnEXManualName2Changing(value);
					this.SendPropertyChanging();
					this._EXManualName2 = value;
					this.SendPropertyChanged("EXManualName2");
					this.OnEXManualName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXManualValue1", DbType="Money")]
		public System.Nullable<decimal> EXManualValue1
		{
			get
			{
				return this._EXManualValue1;
			}
			set
			{
				if ((this._EXManualValue1 != value))
				{
					this.OnEXManualValue1Changing(value);
					this.SendPropertyChanging();
					this._EXManualValue1 = value;
					this.SendPropertyChanged("EXManualValue1");
					this.OnEXManualValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExManualValue2", DbType="Money")]
		public System.Nullable<decimal> ExManualValue2
		{
			get
			{
				return this._ExManualValue2;
			}
			set
			{
				if ((this._ExManualValue2 != value))
				{
					this.OnExManualValue2Changing(value);
					this.SendPropertyChanging();
					this._ExManualValue2 = value;
					this.SendPropertyChanged("ExManualValue2");
					this.OnExManualValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXmanualValue1_OS", DbType="Money")]
		public System.Nullable<decimal> EXmanualValue1_OS
		{
			get
			{
				return this._EXmanualValue1_OS;
			}
			set
			{
				if ((this._EXmanualValue1_OS != value))
				{
					this.OnEXmanualValue1_OSChanging(value);
					this.SendPropertyChanging();
					this._EXmanualValue1_OS = value;
					this.SendPropertyChanged("EXmanualValue1_OS");
					this.OnEXmanualValue1_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXmanualValue2_OS", DbType="Money")]
		public System.Nullable<decimal> EXmanualValue2_OS
		{
			get
			{
				return this._EXmanualValue2_OS;
			}
			set
			{
				if ((this._EXmanualValue2_OS != value))
				{
					this.OnEXmanualValue2_OSChanging(value);
					this.SendPropertyChanging();
					this._EXmanualValue2_OS = value;
					this.SendPropertyChanged("EXmanualValue2_OS");
					this.OnEXmanualValue2_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCustom", DbType="Money")]
		public System.Nullable<decimal> InvoiceCustom
		{
			get
			{
				return this._InvoiceCustom;
			}
			set
			{
				if ((this._InvoiceCustom != value))
				{
					this.OnInvoiceCustomChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCustom = value;
					this.SendPropertyChanged("InvoiceCustom");
					this.OnInvoiceCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description4Invoice", DbType="NVarChar(500)")]
		public string Description4Invoice
		{
			get
			{
				return this._Description4Invoice;
			}
			set
			{
				if ((this._Description4Invoice != value))
				{
					this.OnDescription4InvoiceChanging(value);
					this.SendPropertyChanging();
					this._Description4Invoice = value;
					this.SendPropertyChanged("Description4Invoice");
					this.OnDescription4InvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INRemark", DbType="NVarChar(500)")]
		public string INRemark
		{
			get
			{
				return this._INRemark;
			}
			set
			{
				if ((this._INRemark != value))
				{
					this.OnINRemarkChanging(value);
					this.SendPropertyChanging();
					this._INRemark = value;
					this.SendPropertyChanged("INRemark");
					this.OnINRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXRemark", DbType="NVarChar(500)")]
		public string EXRemark
		{
			get
			{
				return this._EXRemark;
			}
			set
			{
				if ((this._EXRemark != value))
				{
					this.OnEXRemarkChanging(value);
					this.SendPropertyChanging();
					this._EXRemark = value;
					this.SendPropertyChanged("EXRemark");
					this.OnEXRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Income", DbType="Money")]
		public System.Nullable<decimal> Income
		{
			get
			{
				return this._Income;
			}
			set
			{
				if ((this._Income != value))
				{
					this.OnIncomeChanging(value);
					this.SendPropertyChanging();
					this._Income = value;
					this.SendPropertyChanged("Income");
					this.OnIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INVI", DbType="Money")]
		public System.Nullable<decimal> INVI
		{
			get
			{
				return this._INVI;
			}
			set
			{
				if ((this._INVI != value))
				{
					this.OnINVIChanging(value);
					this.SendPropertyChanging();
					this._INVI = value;
					this.SendPropertyChanged("INVI");
					this.OnINVIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INOS", DbType="Money")]
		public System.Nullable<decimal> INOS
		{
			get
			{
				return this._INOS;
			}
			set
			{
				if ((this._INOS != value))
				{
					this.OnINOSChanging(value);
					this.SendPropertyChanging();
					this._INOS = value;
					this.SendPropertyChanged("INOS");
					this.OnINOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expense", DbType="Money")]
		public System.Nullable<decimal> Expense
		{
			get
			{
				return this._Expense;
			}
			set
			{
				if ((this._Expense != value))
				{
					this.OnExpenseChanging(value);
					this.SendPropertyChanging();
					this._Expense = value;
					this.SendPropertyChanged("Expense");
					this.OnExpenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXVI", DbType="Money")]
		public System.Nullable<decimal> EXVI
		{
			get
			{
				return this._EXVI;
			}
			set
			{
				if ((this._EXVI != value))
				{
					this.OnEXVIChanging(value);
					this.SendPropertyChanging();
					this._EXVI = value;
					this.SendPropertyChanged("EXVI");
					this.OnEXVIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXOS", DbType="Money")]
		public System.Nullable<decimal> EXOS
		{
			get
			{
				return this._EXOS;
			}
			set
			{
				if ((this._EXOS != value))
				{
					this.OnEXOSChanging(value);
					this.SendPropertyChanging();
					this._EXOS = value;
					this.SendPropertyChanged("EXOS");
					this.OnEXOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Earning", DbType="Money")]
		public System.Nullable<decimal> Earning
		{
			get
			{
				return this._Earning;
			}
			set
			{
				if ((this._Earning != value))
				{
					this.OnEarningChanging(value);
					this.SendPropertyChanging();
					this._Earning = value;
					this.SendPropertyChanged("Earning");
					this.OnEarningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarningVI", DbType="Money")]
		public System.Nullable<decimal> EarningVI
		{
			get
			{
				return this._EarningVI;
			}
			set
			{
				if ((this._EarningVI != value))
				{
					this.OnEarningVIChanging(value);
					this.SendPropertyChanging();
					this._EarningVI = value;
					this.SendPropertyChanged("EarningVI");
					this.OnEarningVIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarningOS", DbType="Money NOT NULL")]
		public decimal EarningOS
		{
			get
			{
				return this._EarningOS;
			}
			set
			{
				if ((this._EarningOS != value))
				{
					this.OnEarningOSChanging(value);
					this.SendPropertyChanging();
					this._EarningOS = value;
					this.SendPropertyChanged("EarningOS");
					this.OnEarningOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvAmount1", DbType="Money NOT NULL")]
		public decimal InvAmount1
		{
			get
			{
				return this._InvAmount1;
			}
			set
			{
				if ((this._InvAmount1 != value))
				{
					this.OnInvAmount1Changing(value);
					this.SendPropertyChanging();
					this._InvAmount1 = value;
					this.SendPropertyChanged("InvAmount1");
					this.OnInvAmount1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvType1", DbType="NVarChar(50)")]
		public string InvType1
		{
			get
			{
				return this._InvType1;
			}
			set
			{
				if ((this._InvType1 != value))
				{
					this.OnInvType1Changing(value);
					this.SendPropertyChanging();
					this._InvType1 = value;
					this.SendPropertyChanged("InvType1");
					this.OnInvType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvAgentId1", DbType="BigInt")]
		public System.Nullable<long> InvAgentId1
		{
			get
			{
				return this._InvAgentId1;
			}
			set
			{
				if ((this._InvAgentId1 != value))
				{
					if (this._Agent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvAgentId1Changing(value);
					this.SendPropertyChanging();
					this._InvAgentId1 = value;
					this.SendPropertyChanged("InvAgentId1");
					this.OnInvAgentId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvAmount2", DbType="Money")]
		public System.Nullable<decimal> InvAmount2
		{
			get
			{
				return this._InvAmount2;
			}
			set
			{
				if ((this._InvAmount2 != value))
				{
					this.OnInvAmount2Changing(value);
					this.SendPropertyChanging();
					this._InvAmount2 = value;
					this.SendPropertyChanged("InvAmount2");
					this.OnInvAmount2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvType2", DbType="NVarChar(50)")]
		public string InvType2
		{
			get
			{
				return this._InvType2;
			}
			set
			{
				if ((this._InvType2 != value))
				{
					this.OnInvType2Changing(value);
					this.SendPropertyChanging();
					this._InvType2 = value;
					this.SendPropertyChanged("InvType2");
					this.OnInvType2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvAgentId2", DbType="BigInt")]
		public System.Nullable<long> InvAgentId2
		{
			get
			{
				return this._InvAgentId2;
			}
			set
			{
				if ((this._InvAgentId2 != value))
				{
					if (this._Agent1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvAgentId2Changing(value);
					this.SendPropertyChanging();
					this._InvAgentId2 = value;
					this.SendPropertyChanged("InvAgentId2");
					this.OnInvAgentId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonRequest_", DbType="Int NOT NULL")]
		public int BonRequest_
		{
			get
			{
				return this._BonRequest_;
			}
			set
			{
				if ((this._BonRequest_ != value))
				{
					this.OnBonRequest_Changing(value);
					this.SendPropertyChanging();
					this._BonRequest_ = value;
					this.SendPropertyChanged("BonRequest_");
					this.OnBonRequest_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonApprove_", DbType="Int NOT NULL")]
		public int BonApprove_
		{
			get
			{
				return this._BonApprove_;
			}
			set
			{
				if ((this._BonApprove_ != value))
				{
					this.OnBonApprove_Changing(value);
					this.SendPropertyChanging();
					this._BonApprove_ = value;
					this.SendPropertyChanged("BonApprove_");
					this.OnBonApprove_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountBonus1", DbType="Money NOT NULL")]
		public decimal AmountBonus1
		{
			get
			{
				return this._AmountBonus1;
			}
			set
			{
				if ((this._AmountBonus1 != value))
				{
					this.OnAmountBonus1Changing(value);
					this.SendPropertyChanging();
					this._AmountBonus1 = value;
					this.SendPropertyChanged("AmountBonus1");
					this.OnAmountBonus1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountBonus2", DbType="Money NOT NULL")]
		public decimal AmountBonus2
		{
			get
			{
				return this._AmountBonus2;
			}
			set
			{
				if ((this._AmountBonus2 != value))
				{
					this.OnAmountBonus2Changing(value);
					this.SendPropertyChanging();
					this._AmountBonus2 = value;
					this.SendPropertyChanged("AmountBonus2");
					this.OnAmountBonus2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccInv1", DbType="NVarChar(50)")]
		public string AccInv1
		{
			get
			{
				return this._AccInv1;
			}
			set
			{
				if ((this._AccInv1 != value))
				{
					this.OnAccInv1Changing(value);
					this.SendPropertyChanging();
					this._AccInv1 = value;
					this.SendPropertyChanged("AccInv1");
					this.OnAccInv1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccInv2", DbType="NVarChar(50)")]
		public string AccInv2
		{
			get
			{
				return this._AccInv2;
			}
			set
			{
				if ((this._AccInv2 != value))
				{
					this.OnAccInv2Changing(value);
					this.SendPropertyChanging();
					this._AccInv2 = value;
					this.SendPropertyChanged("AccInv2");
					this.OnAccInv2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccInv3", DbType="NVarChar(50)")]
		public string AccInv3
		{
			get
			{
				return this._AccInv3;
			}
			set
			{
				if ((this._AccInv3 != value))
				{
					this.OnAccInv3Changing(value);
					this.SendPropertyChanging();
					this._AccInv3 = value;
					this.SendPropertyChanged("AccInv3");
					this.OnAccInv3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccInv4", DbType="NVarChar(50)")]
		public string AccInv4
		{
			get
			{
				return this._AccInv4;
			}
			set
			{
				if ((this._AccInv4 != value))
				{
					this.OnAccInv4Changing(value);
					this.SendPropertyChanging();
					this._AccInv4 = value;
					this.SendPropertyChanged("AccInv4");
					this.OnAccInv4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccInvDate1", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccInvDate1
		{
			get
			{
				return this._AccInvDate1;
			}
			set
			{
				if ((this._AccInvDate1 != value))
				{
					this.OnAccInvDate1Changing(value);
					this.SendPropertyChanging();
					this._AccInvDate1 = value;
					this.SendPropertyChanged("AccInvDate1");
					this.OnAccInvDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccInvDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccInvDate2
		{
			get
			{
				return this._AccInvDate2;
			}
			set
			{
				if ((this._AccInvDate2 != value))
				{
					this.OnAccInvDate2Changing(value);
					this.SendPropertyChanging();
					this._AccInvDate2 = value;
					this.SendPropertyChanged("AccInvDate2");
					this.OnAccInvDate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccInvDate3", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccInvDate3
		{
			get
			{
				return this._AccInvDate3;
			}
			set
			{
				if ((this._AccInvDate3 != value))
				{
					this.OnAccInvDate3Changing(value);
					this.SendPropertyChanging();
					this._AccInvDate3 = value;
					this.SendPropertyChanged("AccInvDate3");
					this.OnAccInvDate3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccInvDate4", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccInvDate4
		{
			get
			{
				return this._AccInvDate4;
			}
			set
			{
				if ((this._AccInvDate4 != value))
				{
					this.OnAccInvDate4Changing(value);
					this.SendPropertyChanging();
					this._AccInvDate4 = value;
					this.SendPropertyChanged("AccInvDate4");
					this.OnAccInvDate4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveId", DbType="BigInt")]
		public System.Nullable<long> ApproveId
		{
			get
			{
				return this._ApproveId;
			}
			set
			{
				if ((this._ApproveId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproveIdChanging(value);
					this.SendPropertyChanging();
					this._ApproveId = value;
					this.SendPropertyChanged("ApproveId");
					this.OnApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Int NOT NULL")]
		public int Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt")]
		public System.Nullable<long> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidToCarrier", DbType="BigInt")]
		public System.Nullable<long> PaidToCarrier
		{
			get
			{
				return this._PaidToCarrier;
			}
			set
			{
				if ((this._PaidToCarrier != value))
				{
					if (this._CarrierAirLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaidToCarrierChanging(value);
					this.SendPropertyChanging();
					this._PaidToCarrier = value;
					this.SendPropertyChanged("PaidToCarrier");
					this.OnPaidToCarrierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency1", DbType="NVarChar(50)")]
		public string Currency1
		{
			get
			{
				return this._Currency1;
			}
			set
			{
				if ((this._Currency1 != value))
				{
					this.OnCurrency1Changing(value);
					this.SendPropertyChanging();
					this._Currency1 = value;
					this.SendPropertyChanged("Currency1");
					this.OnCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency2", DbType="NVarChar(50)")]
		public string Currency2
		{
			get
			{
				return this._Currency2;
			}
			set
			{
				if ((this._Currency2 != value))
				{
					this.OnCurrency2Changing(value);
					this.SendPropertyChanging();
					this._Currency2 = value;
					this.SendPropertyChanged("Currency2");
					this.OnCurrency2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleType", DbType="NVarChar(50)")]
		public string SaleType
		{
			get
			{
				return this._SaleType;
			}
			set
			{
				if ((this._SaleType != value))
				{
					this.OnSaleTypeChanging(value);
					this.SendPropertyChanging();
					this._SaleType = value;
					this.SendPropertyChanged("SaleType");
					this.OnSaleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonApprove", DbType="SmallMoney")]
		public System.Nullable<decimal> BonApprove
		{
			get
			{
				return this._BonApprove;
			}
			set
			{
				if ((this._BonApprove != value))
				{
					this.OnBonApproveChanging(value);
					this.SendPropertyChanging();
					this._BonApprove = value;
					this.SendPropertyChanged("BonApprove");
					this.OnBonApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonRequest", DbType="SmallMoney")]
		public System.Nullable<decimal> BonRequest
		{
			get
			{
				return this._BonRequest;
			}
			set
			{
				if ((this._BonRequest != value))
				{
					this.OnBonRequestChanging(value);
					this.SendPropertyChanging();
					this._BonRequest = value;
					this.SendPropertyChanged("BonRequest");
					this.OnBonRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsControl", DbType="bit")]
		public System.Nullable<bool> IsControl
		{
			get
			{
				return this._IsControl;
			}
			set
			{
				if ((this._IsControl != value))
				{
					this.OnIsControlChanging(value);
					this.SendPropertyChanging();
					this._IsControl = value;
					this.SendPropertyChanged("IsControl");
					this.OnIsControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRevised", DbType="Bit")]
		public bool IsRevised
		{
			get
			{
				return this._IsRevised;
			}
			set
			{
				if ((this._IsRevised != value))
				{
					this.OnIsRevisedChanging(value);
					this.SendPropertyChanging();
					this._IsRevised = value;
					this.SendPropertyChanged("IsRevised");
					this.OnIsRevisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequest", DbType="Bit")]
		public bool IsRequest
		{
			get
			{
				return this._IsRequest;
			}
			set
			{
				if ((this._IsRequest != value))
				{
					this.OnIsRequestChanging(value);
					this.SendPropertyChanging();
					this._IsRequest = value;
					this.SendPropertyChanged("IsRequest");
					this.OnIsRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Revenue_InvoideIssued", Storage="_InvoideIssueds", ThisKey="Id", OtherKey="RevenueId")]
		public EntitySet<InvoideIssued> InvoideIssueds
		{
			get
			{
				return this._InvoideIssueds;
			}
			set
			{
				this._InvoideIssueds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Revenue_SOAInvoice", Storage="_SOAInvoices", ThisKey="Id", OtherKey="RevenueId")]
		public EntitySet<SOAInvoice> SOAInvoices
		{
			get
			{
				return this._SOAInvoices;
			}
			set
			{
				this._SOAInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Revenue", Storage="_Agent", ThisKey="InvAgentId1", OtherKey="Id", IsForeignKey=true)]
		public Agent Agent
		{
			get
			{
				return this._Agent.Entity;
			}
			set
			{
				Agent previousValue = this._Agent.Entity;
				if (((previousValue != value) 
							|| (this._Agent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agent.Entity = null;
						previousValue.Revenues.Remove(this);
					}
					this._Agent.Entity = value;
					if ((value != null))
					{
						value.Revenues.Add(this);
						this._InvAgentId1 = value.Id;
					}
					else
					{
						this._InvAgentId1 = default(Nullable<long>);
					}
					this.SendPropertyChanged("Agent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Revenue1", Storage="_Agent1", ThisKey="InvAgentId2", OtherKey="Id", IsForeignKey=true)]
		public Agent Agent1
		{
			get
			{
				return this._Agent1.Entity;
			}
			set
			{
				Agent previousValue = this._Agent1.Entity;
				if (((previousValue != value) 
							|| (this._Agent1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agent1.Entity = null;
						previousValue.Revenues1.Remove(this);
					}
					this._Agent1.Entity = value;
					if ((value != null))
					{
						value.Revenues1.Add(this);
						this._InvAgentId2 = value.Id;
					}
					else
					{
						this._InvAgentId2 = default(Nullable<long>);
					}
					this.SendPropertyChanged("Agent1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarrierAirLine_Revenue", Storage="_CarrierAirLine", ThisKey="PaidToCarrier", OtherKey="Id", IsForeignKey=true, DeleteRule="SET NULL")]
		public CarrierAirLine CarrierAirLine
		{
			get
			{
				return this._CarrierAirLine.Entity;
			}
			set
			{
				CarrierAirLine previousValue = this._CarrierAirLine.Entity;
				if (((previousValue != value) 
							|| (this._CarrierAirLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarrierAirLine.Entity = null;
						previousValue.Revenues.Remove(this);
					}
					this._CarrierAirLine.Entity = value;
					if ((value != null))
					{
						value.Revenues.Add(this);
						this._PaidToCarrier = value.Id;
					}
					else
					{
						this._PaidToCarrier = default(Nullable<long>);
					}
					this.SendPropertyChanged("CarrierAirLine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_Revenue", Storage="_Shipment", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.Revenue = null;
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.Revenue = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Revenue", Storage="_User", ThisKey="ApproveId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Revenues.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Revenues.Add(this);
						this._ApproveId = value.Id;
					}
					else
					{
						this._ApproveId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoideIssueds(InvoideIssued entity)
		{
			this.SendPropertyChanging();
			entity.Revenue = this;
		}
		
		private void detach_InvoideIssueds(InvoideIssued entity)
		{
			this.SendPropertyChanging();
			entity.Revenue = null;
		}
		
		private void attach_SOAInvoices(SOAInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Revenue = this;
		}
		
		private void detach_SOAInvoices(SOAInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Revenue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalePlan")]
	public partial class SalePlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _OfficeId;
		
		private System.Nullable<long> _DeptId;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<decimal> _PlanValue;
		
		private System.Nullable<System.DateTime> _PlanMonth;
		
		private string _Remark;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnOfficeIdChanging(System.Nullable<long> value);
    partial void OnOfficeIdChanged();
    partial void OnDeptIdChanging(System.Nullable<long> value);
    partial void OnDeptIdChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnPlanValueChanging(System.Nullable<decimal> value);
    partial void OnPlanValueChanged();
    partial void OnPlanMonthChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanMonthChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public SalePlan()
		{
			this._Company = default(EntityRef<Company>);
			this._Department = default(EntityRef<Department>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeId", DbType="BigInt")]
		public System.Nullable<long> OfficeId
		{
			get
			{
				return this._OfficeId;
			}
			set
			{
				if ((this._OfficeId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfficeIdChanging(value);
					this.SendPropertyChanging();
					this._OfficeId = value;
					this.SendPropertyChanged("OfficeId");
					this.OnOfficeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptId", DbType="BigInt")]
		public System.Nullable<long> DeptId
		{
			get
			{
				return this._DeptId;
			}
			set
			{
				if ((this._DeptId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeptIdChanging(value);
					this.SendPropertyChanging();
					this._DeptId = value;
					this.SendPropertyChanged("DeptId");
					this.OnDeptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanValue", DbType="Money")]
		public System.Nullable<decimal> PlanValue
		{
			get
			{
				return this._PlanValue;
			}
			set
			{
				if ((this._PlanValue != value))
				{
					this.OnPlanValueChanging(value);
					this.SendPropertyChanging();
					this._PlanValue = value;
					this.SendPropertyChanged("PlanValue");
					this.OnPlanValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanMonth", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlanMonth
		{
			get
			{
				return this._PlanMonth;
			}
			set
			{
				if ((this._PlanMonth != value))
				{
					this.OnPlanMonthChanging(value);
					this.SendPropertyChanging();
					this._PlanMonth = value;
					this.SendPropertyChanged("PlanMonth");
					this.OnPlanMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_SalePlan", Storage="_Company", ThisKey="OfficeId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.SalePlans.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.SalePlans.Add(this);
						this._OfficeId = value.Id;
					}
					else
					{
						this._OfficeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_SalePlan", Storage="_Department", ThisKey="DeptId", OtherKey="Id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.SalePlans.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.SalePlans.Add(this);
						this._DeptId = value.Id;
					}
					else
					{
						this._DeptId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SalePlan", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SalePlans.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SalePlans.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SaleType")]
	public partial class SaleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private System.Nullable<decimal> _Value;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<CRMCustomer> _CRMCustomers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public SaleType()
		{
			this._CRMCustomers = new EntitySet<CRMCustomer>(new Action<CRMCustomer>(this.attach_CRMCustomers), new Action<CRMCustomer>(this.detach_CRMCustomers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Money")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SaleType_CRMCustomer", Storage="_CRMCustomers", ThisKey="Id", OtherKey="SaleTypeId")]
		public EntitySet<CRMCustomer> CRMCustomers
		{
			get
			{
				return this._CRMCustomers;
			}
			set
			{
				this._CRMCustomers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.SaleType = this;
		}
		
		private void detach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.SaleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServerFile")]
	public partial class ServerFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _ObjectId;
		
		private string _ObjectType;
		
		private string _Path;
		
		private string _FileName;
		
		private string _FileType;
		
		private System.Nullable<int> _FileSize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(System.Nullable<long> value);
    partial void OnObjectIdChanged();
    partial void OnObjectTypeChanging(string value);
    partial void OnObjectTypeChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileMimeTypeChanging(string value);
    partial void OnFileMimeTypeChanged();
    partial void OnFileSizeChanging(System.Nullable<int> value);
    partial void OnFileSizeChanged();
    #endregion
		
		public ServerFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt")]
		public System.Nullable<long> ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="NVarChar(250)")]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(1000)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(400)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="NVarChar(250)")]
		public string FileMimeType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileMimeType");
					this.OnFileMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="int")]
		public System.Nullable<int> FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this.OnFileSizeChanging(value);
					this.SendPropertyChanging();
					this._FileSize = value;
					this.SendPropertyChanged("FileSize");
					this.OnFileSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setting")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _DataCode;
		
		private string _DataValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDataCodeChanging(string value);
    partial void OnDataCodeChanged();
    partial void OnDataValueChanging(string value);
    partial void OnDataValueChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataCode", DbType="NVarChar(50)")]
		public string DataCode
		{
			get
			{
				return this._DataCode;
			}
			set
			{
				if ((this._DataCode != value))
				{
					this.OnDataCodeChanging(value);
					this.SendPropertyChanging();
					this._DataCode = value;
					this.SendPropertyChanged("DataCode");
					this.OnDataCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataValue", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DataValue
		{
			get
			{
				return this._DataValue;
			}
			set
			{
				if ((this._DataValue != value))
				{
					this.OnDataValueChanging(value);
					this.SendPropertyChanging();
					this._DataValue = value;
					this.SendPropertyChanged("DataValue");
					this.OnDataValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shipment")]
	public partial class Shipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _RevenueStatus;
		
		private System.Nullable<System.DateTime> _DateShp;
		
		private System.Nullable<long> _CneeId;
		
		private System.Nullable<long> _ShipperId;
		
		private System.Nullable<long> _AgentId;
		
		private string _ServiceName;
		
		private string _QtyName;
		
		private double _QtyNumber;
		
		private string _QtyUnit;
		
		private System.Nullable<long> _SaleId;
		
		private System.Nullable<long> _CarrierAirId;
		
		private string _SaleType;
		
		private string _Description;
		
		private System.Nullable<long> _CompanyId;
		
		private System.Nullable<long> _DepartureId;
		
		private System.Nullable<long> _DestinationId;
		
		private string _HouseNum;
		
		private string _MasterNum;
		
		private System.Nullable<System.DateTime> _LockDate;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _IsLock;
		
		private long _DeptId;
		
		private bool _IsInvoiced;
		
		private System.Nullable<System.DateTime> _SubmitDate;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private bool _isDelivered;
		
		private System.Nullable<System.DateTime> _DeliveredDate;
		
		private string _SFreights;
		
		private System.Nullable<long> _VoucherId;
		
		private System.Nullable<bool> _IsTrading;
		
		private int _ServiceId;
		
		private bool _IsMainShipment;
		
		private System.Nullable<long> _ShipmentRef;
		
		private string _UserListInControl;
		
		private bool _IsControl;
		
		private System.Nullable<int> _ControlStep;
		
		private EntitySet<ArriveNotice> _ArriveNotices;
		
		private EntitySet<AuthorLetter> _AuthorLetters;
		
		private EntitySet<BillLanding> _BillLandings;
		
		private EntitySet<BookingConfirm> _BookingConfirms;
		
		private EntitySet<BookingNote> _BookingNotes;
		
		private EntitySet<BookingRequest> _BookingRequests;
		
		private EntitySet<DebitNote> _DebitNotes;
		
		private EntitySet<HAirWayBill> _HAirWayBills;
		
		private EntitySet<InvoideIssued> _InvoideIssueds;
		
		private EntitySet<Manifest> _Manifests;
		
		private EntitySet<PaymentVoucher> _PaymentVouchers;
		
		private EntitySet<RequestPayment> _RequestPayments;
		
		private EntityRef<Revenue> _Revenue;
		
		private EntitySet<SOAInvoice> _SOAInvoices;
		
		private EntitySet<SOAStatistic> _SOAStatistics;
		
		private EntitySet<TransitmentAdvised> _TransitmentAdviseds;
		
		private EntityRef<Agent> _Agent;
		
		private EntityRef<Area> _Area;
		
		private EntityRef<Area> _Area1;
		
		private EntityRef<CarrierAirLine> _CarrierAirLine;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Customer> _Customer1;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<User> _User;
		
		private EntityRef<MT81> _MT81;
		
		private EntityRef<ServicesType> _ServicesType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRevenueStatusChanging(string value);
    partial void OnRevenueStatusChanged();
    partial void OnDateShpChanging(System.Nullable<System.DateTime> value);
    partial void OnDateShpChanged();
    partial void OnCneeIdChanging(System.Nullable<long> value);
    partial void OnCneeIdChanged();
    partial void OnShipperIdChanging(System.Nullable<long> value);
    partial void OnShipperIdChanged();
    partial void OnAgentIdChanging(System.Nullable<long> value);
    partial void OnAgentIdChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnQtyNameChanging(string value);
    partial void OnQtyNameChanged();
    partial void OnQtyNumberChanging(double value);
    partial void OnQtyNumberChanged();
    partial void OnQtyUnitChanging(string value);
    partial void OnQtyUnitChanged();
    partial void OnSaleIdChanging(System.Nullable<long> value);
    partial void OnSaleIdChanged();
    partial void OnCarrierAirIdChanging(System.Nullable<long> value);
    partial void OnCarrierAirIdChanged();
    partial void OnSaleTypeChanging(string value);
    partial void OnSaleTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCompanyIdChanging(System.Nullable<long> value);
    partial void OnCompanyIdChanged();
    partial void OnDepartureIdChanging(System.Nullable<long> value);
    partial void OnDepartureIdChanged();
    partial void OnDestinationIdChanging(System.Nullable<long> value);
    partial void OnDestinationIdChanged();
    partial void OnHouseNumChanging(string value);
    partial void OnHouseNumChanged();
    partial void OnMasterNumChanging(string value);
    partial void OnMasterNumChanged();
    partial void OnLockDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLockDateChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnIsLockChanging(System.Nullable<bool> value);
    partial void OnIsLockChanged();
    partial void OnDeptIdChanging(long value);
    partial void OnDeptIdChanged();
    partial void OnIsInvoicedChanging(bool value);
    partial void OnIsInvoicedChanged();
    partial void OnSubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmitDateChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnisDeliveredChanging(bool value);
    partial void OnisDeliveredChanged();
    partial void OnDeliveredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveredDateChanged();
    partial void OnSFreightsChanging(string value);
    partial void OnSFreightsChanged();
    partial void OnVoucherIdChanging(System.Nullable<long> value);
    partial void OnVoucherIdChanged();
    partial void OnIsTradingChanging(System.Nullable<bool> value);
    partial void OnIsTradingChanged();
    partial void OnServiceIdChanging(int value);
    partial void OnServiceIdChanged();
    partial void OnIsMainShipmentChanging(bool value);
    partial void OnIsMainShipmentChanged();
    partial void OnShipmentRefChanging(System.Nullable<long> value);
    partial void OnShipmentRefChanged();
    partial void OnUserListInControlChanging(string value);
    partial void OnUserListInControlChanged();
    partial void OnIsControlChanging(bool value);
    partial void OnIsControlChanged();
    partial void OnControlStepChanging(System.Nullable<int> value);
    partial void OnControlStepChanged();
    #endregion
		
		public Shipment()
		{
			this._ArriveNotices = new EntitySet<ArriveNotice>(new Action<ArriveNotice>(this.attach_ArriveNotices), new Action<ArriveNotice>(this.detach_ArriveNotices));
			this._AuthorLetters = new EntitySet<AuthorLetter>(new Action<AuthorLetter>(this.attach_AuthorLetters), new Action<AuthorLetter>(this.detach_AuthorLetters));
			this._BillLandings = new EntitySet<BillLanding>(new Action<BillLanding>(this.attach_BillLandings), new Action<BillLanding>(this.detach_BillLandings));
			this._BookingConfirms = new EntitySet<BookingConfirm>(new Action<BookingConfirm>(this.attach_BookingConfirms), new Action<BookingConfirm>(this.detach_BookingConfirms));
			this._BookingNotes = new EntitySet<BookingNote>(new Action<BookingNote>(this.attach_BookingNotes), new Action<BookingNote>(this.detach_BookingNotes));
			this._BookingRequests = new EntitySet<BookingRequest>(new Action<BookingRequest>(this.attach_BookingRequests), new Action<BookingRequest>(this.detach_BookingRequests));
			this._DebitNotes = new EntitySet<DebitNote>(new Action<DebitNote>(this.attach_DebitNotes), new Action<DebitNote>(this.detach_DebitNotes));
			this._HAirWayBills = new EntitySet<HAirWayBill>(new Action<HAirWayBill>(this.attach_HAirWayBills), new Action<HAirWayBill>(this.detach_HAirWayBills));
			this._InvoideIssueds = new EntitySet<InvoideIssued>(new Action<InvoideIssued>(this.attach_InvoideIssueds), new Action<InvoideIssued>(this.detach_InvoideIssueds));
			this._Manifests = new EntitySet<Manifest>(new Action<Manifest>(this.attach_Manifests), new Action<Manifest>(this.detach_Manifests));
			this._PaymentVouchers = new EntitySet<PaymentVoucher>(new Action<PaymentVoucher>(this.attach_PaymentVouchers), new Action<PaymentVoucher>(this.detach_PaymentVouchers));
			this._RequestPayments = new EntitySet<RequestPayment>(new Action<RequestPayment>(this.attach_RequestPayments), new Action<RequestPayment>(this.detach_RequestPayments));
			this._Revenue = default(EntityRef<Revenue>);
			this._SOAInvoices = new EntitySet<SOAInvoice>(new Action<SOAInvoice>(this.attach_SOAInvoices), new Action<SOAInvoice>(this.detach_SOAInvoices));
			this._SOAStatistics = new EntitySet<SOAStatistic>(new Action<SOAStatistic>(this.attach_SOAStatistics), new Action<SOAStatistic>(this.detach_SOAStatistics));
			this._TransitmentAdviseds = new EntitySet<TransitmentAdvised>(new Action<TransitmentAdvised>(this.attach_TransitmentAdviseds), new Action<TransitmentAdvised>(this.detach_TransitmentAdviseds));
			this._Agent = default(EntityRef<Agent>);
			this._Area = default(EntityRef<Area>);
			this._Area1 = default(EntityRef<Area>);
			this._CarrierAirLine = default(EntityRef<CarrierAirLine>);
			this._Company = default(EntityRef<Company>);
			this._Customer = default(EntityRef<Customer>);
			this._Customer1 = default(EntityRef<Customer>);
			this._Department = default(EntityRef<Department>);
			this._User = default(EntityRef<User>);
			this._MT81 = default(EntityRef<MT81>);
			this._ServicesType = default(EntityRef<ServicesType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueStatus", DbType="NVarChar(50)")]
		public string RevenueStatus
		{
			get
			{
				return this._RevenueStatus;
			}
			set
			{
				if ((this._RevenueStatus != value))
				{
					this.OnRevenueStatusChanging(value);
					this.SendPropertyChanging();
					this._RevenueStatus = value;
					this.SendPropertyChanged("RevenueStatus");
					this.OnRevenueStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateShp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateShp
		{
			get
			{
				return this._DateShp;
			}
			set
			{
				if ((this._DateShp != value))
				{
					this.OnDateShpChanging(value);
					this.SendPropertyChanging();
					this._DateShp = value;
					this.SendPropertyChanged("DateShp");
					this.OnDateShpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CneeId", DbType="BigInt")]
		public System.Nullable<long> CneeId
		{
			get
			{
				return this._CneeId;
			}
			set
			{
				if ((this._CneeId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCneeIdChanging(value);
					this.SendPropertyChanging();
					this._CneeId = value;
					this.SendPropertyChanged("CneeId");
					this.OnCneeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipperId", DbType="BigInt")]
		public System.Nullable<long> ShipperId
		{
			get
			{
				return this._ShipperId;
			}
			set
			{
				if ((this._ShipperId != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipperIdChanging(value);
					this.SendPropertyChanging();
					this._ShipperId = value;
					this.SendPropertyChanged("ShipperId");
					this.OnShipperIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentId", DbType="BigInt")]
		public System.Nullable<long> AgentId
		{
			get
			{
				return this._AgentId;
			}
			set
			{
				if ((this._AgentId != value))
				{
					if (this._Agent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgentIdChanging(value);
					this.SendPropertyChanging();
					this._AgentId = value;
					this.SendPropertyChanged("AgentId");
					this.OnAgentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(50)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyName", DbType="NVarChar(50)")]
		public string QtyName
		{
			get
			{
				return this._QtyName;
			}
			set
			{
				if ((this._QtyName != value))
				{
					this.OnQtyNameChanging(value);
					this.SendPropertyChanging();
					this._QtyName = value;
					this.SendPropertyChanged("QtyName");
					this.OnQtyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyNumber", DbType="Float NOT NULL")]
		public double QtyNumber
		{
			get
			{
				return this._QtyNumber;
			}
			set
			{
				if ((this._QtyNumber != value))
				{
					this.OnQtyNumberChanging(value);
					this.SendPropertyChanging();
					this._QtyNumber = value;
					this.SendPropertyChanged("QtyNumber");
					this.OnQtyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyUnit", DbType="NVarChar(50)")]
		public string QtyUnit
		{
			get
			{
				return this._QtyUnit;
			}
			set
			{
				if ((this._QtyUnit != value))
				{
					this.OnQtyUnitChanging(value);
					this.SendPropertyChanging();
					this._QtyUnit = value;
					this.SendPropertyChanged("QtyUnit");
					this.OnQtyUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleId", DbType="BigInt")]
		public System.Nullable<long> SaleId
		{
			get
			{
				return this._SaleId;
			}
			set
			{
				if ((this._SaleId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSaleIdChanging(value);
					this.SendPropertyChanging();
					this._SaleId = value;
					this.SendPropertyChanged("SaleId");
					this.OnSaleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierAirId", DbType="BigInt")]
		public System.Nullable<long> CarrierAirId
		{
			get
			{
				return this._CarrierAirId;
			}
			set
			{
				if ((this._CarrierAirId != value))
				{
					if (this._CarrierAirLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarrierAirIdChanging(value);
					this.SendPropertyChanging();
					this._CarrierAirId = value;
					this.SendPropertyChanged("CarrierAirId");
					this.OnCarrierAirIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleType", DbType="NVarChar(50)")]
		public string SaleType
		{
			get
			{
				return this._SaleType;
			}
			set
			{
				if ((this._SaleType != value))
				{
					this.OnSaleTypeChanging(value);
					this.SendPropertyChanging();
					this._SaleType = value;
					this.SendPropertyChanged("SaleType");
					this.OnSaleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="BigInt")]
		public System.Nullable<long> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureId", DbType="BigInt")]
		public System.Nullable<long> DepartureId
		{
			get
			{
				return this._DepartureId;
			}
			set
			{
				if ((this._DepartureId != value))
				{
					if (this._Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartureIdChanging(value);
					this.SendPropertyChanging();
					this._DepartureId = value;
					this.SendPropertyChanged("DepartureId");
					this.OnDepartureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationId", DbType="BigInt")]
		public System.Nullable<long> DestinationId
		{
			get
			{
				return this._DestinationId;
			}
			set
			{
				if ((this._DestinationId != value))
				{
					if (this._Area1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDestinationIdChanging(value);
					this.SendPropertyChanging();
					this._DestinationId = value;
					this.SendPropertyChanged("DestinationId");
					this.OnDestinationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseNum", DbType="NVarChar(50)")]
		public string HouseNum
		{
			get
			{
				return this._HouseNum;
			}
			set
			{
				if ((this._HouseNum != value))
				{
					this.OnHouseNumChanging(value);
					this.SendPropertyChanging();
					this._HouseNum = value;
					this.SendPropertyChanged("HouseNum");
					this.OnHouseNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterNum", DbType="NVarChar(50)")]
		public string MasterNum
		{
			get
			{
				return this._MasterNum;
			}
			set
			{
				if ((this._MasterNum != value))
				{
					this.OnMasterNumChanging(value);
					this.SendPropertyChanging();
					this._MasterNum = value;
					this.SendPropertyChanged("MasterNum");
					this.OnMasterNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockDate
		{
			get
			{
				return this._LockDate;
			}
			set
			{
				if ((this._LockDate != value))
				{
					this.OnLockDateChanging(value);
					this.SendPropertyChanging();
					this._LockDate = value;
					this.SendPropertyChanged("LockDate");
					this.OnLockDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLock", DbType="Bit")]
		public System.Nullable<bool> IsLock
		{
			get
			{
				return this._IsLock;
			}
			set
			{
				if ((this._IsLock != value))
				{
					this.OnIsLockChanging(value);
					this.SendPropertyChanging();
					this._IsLock = value;
					this.SendPropertyChanged("IsLock");
					this.OnIsLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptId", DbType="BigInt NOT NULL")]
		public long DeptId
		{
			get
			{
				return this._DeptId;
			}
			set
			{
				if ((this._DeptId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeptIdChanging(value);
					this.SendPropertyChanging();
					this._DeptId = value;
					this.SendPropertyChanged("DeptId");
					this.OnDeptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvoiced", DbType="Bit NOT NULL")]
		public bool IsInvoiced
		{
			get
			{
				return this._IsInvoiced;
			}
			set
			{
				if ((this._IsInvoiced != value))
				{
					this.OnIsInvoicedChanging(value);
					this.SendPropertyChanging();
					this._IsInvoiced = value;
					this.SendPropertyChanged("IsInvoiced");
					this.OnIsInvoicedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubmitDate
		{
			get
			{
				return this._SubmitDate;
			}
			set
			{
				if ((this._SubmitDate != value))
				{
					this.OnSubmitDateChanging(value);
					this.SendPropertyChanging();
					this._SubmitDate = value;
					this.SendPropertyChanged("SubmitDate");
					this.OnSubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelivered", DbType="Bit NOT NULL")]
		public bool isDelivered
		{
			get
			{
				return this._isDelivered;
			}
			set
			{
				if ((this._isDelivered != value))
				{
					this.OnisDeliveredChanging(value);
					this.SendPropertyChanging();
					this._isDelivered = value;
					this.SendPropertyChanged("isDelivered");
					this.OnisDeliveredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveredDate
		{
			get
			{
				return this._DeliveredDate;
			}
			set
			{
				if ((this._DeliveredDate != value))
				{
					this.OnDeliveredDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveredDate = value;
					this.SendPropertyChanged("DeliveredDate");
					this.OnDeliveredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SFreights", DbType="NVarChar(50)")]
		public string SFreights
		{
			get
			{
				return this._SFreights;
			}
			set
			{
				if ((this._SFreights != value))
				{
					this.OnSFreightsChanging(value);
					this.SendPropertyChanging();
					this._SFreights = value;
					this.SendPropertyChanged("SFreights");
					this.OnSFreightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherId", DbType="BigInt ")]
		public System.Nullable<long> VoucherId
		{
			get
			{
				return this._VoucherId;
			}
			set
			{
				if ((this._VoucherId != value))
				{
					if (this._MT81.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoucherIdChanging(value);
					this.SendPropertyChanging();
					this._VoucherId = value;
					this.SendPropertyChanged("VoucherId");
					this.OnVoucherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrading", DbType="Bit")]
		public System.Nullable<bool> IsTrading
		{
			get
			{
				return this._IsTrading;
			}
			set
			{
				if ((this._IsTrading != value))
				{
					this.OnIsTradingChanging(value);
					this.SendPropertyChanging();
					this._IsTrading = value;
					this.SendPropertyChanged("IsTrading");
					this.OnIsTradingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="int")]
		public int ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					if (this._ServicesType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMainShipment", DbType="bit")]
		public bool IsMainShipment
		{
			get
			{
				return this._IsMainShipment;
			}
			set
			{
				if ((this._IsMainShipment != value))
				{
					this.OnIsMainShipmentChanging(value);
					this.SendPropertyChanging();
					this._IsMainShipment = value;
					this.SendPropertyChanged("IsMainShipment");
					this.OnIsMainShipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentRef", DbType="BigInt")]
		public System.Nullable<long> ShipmentRef
		{
			get
			{
				return this._ShipmentRef;
			}
			set
			{
				if ((this._ShipmentRef != value))
				{
					this.OnShipmentRefChanging(value);
					this.SendPropertyChanging();
					this._ShipmentRef = value;
					this.SendPropertyChanged("ShipmentRef");
					this.OnShipmentRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserListInControl", DbType="NVarChar(300)")]
		public string UserListInControl
		{
			get
			{
				return this._UserListInControl;
			}
			set
			{
				if ((this._UserListInControl != value))
				{
					this.OnUserListInControlChanging(value);
					this.SendPropertyChanging();
					this._UserListInControl = value;
					this.SendPropertyChanged("UserListInControl");
					this.OnUserListInControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsControl", DbType="Bit")]
		public bool IsControl
		{
			get
			{
				return this._IsControl;
			}
			set
			{
				if ((this._IsControl != value))
				{
					this.OnIsControlChanging(value);
					this.SendPropertyChanging();
					this._IsControl = value;
					this.SendPropertyChanged("IsControl");
					this.OnIsControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlStep", DbType="Int")]
		public System.Nullable<int> ControlStep
		{
			get
			{
				return this._ControlStep;
			}
			set
			{
				if ((this._ControlStep != value))
				{
					this.OnControlStepChanging(value);
					this.SendPropertyChanging();
					this._ControlStep = value;
					this.SendPropertyChanged("ControlStep");
					this.OnControlStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_ArriveNotice", Storage="_ArriveNotices", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<ArriveNotice> ArriveNotices
		{
			get
			{
				return this._ArriveNotices;
			}
			set
			{
				this._ArriveNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_AuthorLetter", Storage="_AuthorLetters", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<AuthorLetter> AuthorLetters
		{
			get
			{
				return this._AuthorLetters;
			}
			set
			{
				this._AuthorLetters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_BillLanding", Storage="_BillLandings", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<BillLanding> BillLandings
		{
			get
			{
				return this._BillLandings;
			}
			set
			{
				this._BillLandings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_BookingConfirm", Storage="_BookingConfirms", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<BookingConfirm> BookingConfirms
		{
			get
			{
				return this._BookingConfirms;
			}
			set
			{
				this._BookingConfirms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_BookingNote", Storage="_BookingNotes", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<BookingNote> BookingNotes
		{
			get
			{
				return this._BookingNotes;
			}
			set
			{
				this._BookingNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_BookingRequest", Storage="_BookingRequests", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<BookingRequest> BookingRequests
		{
			get
			{
				return this._BookingRequests;
			}
			set
			{
				this._BookingRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_DebitNote", Storage="_DebitNotes", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<DebitNote> DebitNotes
		{
			get
			{
				return this._DebitNotes;
			}
			set
			{
				this._DebitNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_HAirWayBill", Storage="_HAirWayBills", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<HAirWayBill> HAirWayBills
		{
			get
			{
				return this._HAirWayBills;
			}
			set
			{
				this._HAirWayBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_InvoideIssued", Storage="_InvoideIssueds", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<InvoideIssued> InvoideIssueds
		{
			get
			{
				return this._InvoideIssueds;
			}
			set
			{
				this._InvoideIssueds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_Manifest", Storage="_Manifests", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<Manifest> Manifests
		{
			get
			{
				return this._Manifests;
			}
			set
			{
				this._Manifests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_PaymentVoucher", Storage="_PaymentVouchers", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<PaymentVoucher> PaymentVouchers
		{
			get
			{
				return this._PaymentVouchers;
			}
			set
			{
				this._PaymentVouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_RequestPayment", Storage="_RequestPayments", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<RequestPayment> RequestPayments
		{
			get
			{
				return this._RequestPayments;
			}
			set
			{
				this._RequestPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_Revenue", Storage="_Revenue", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Revenue Revenue
		{
			get
			{
				return this._Revenue.Entity;
			}
			set
			{
				Revenue previousValue = this._Revenue.Entity;
				if (((previousValue != value) 
							|| (this._Revenue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Revenue.Entity = null;
						previousValue.Shipment = null;
					}
					this._Revenue.Entity = value;
					if ((value != null))
					{
						value.Shipment = this;
					}
					this.SendPropertyChanged("Revenue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_SOAInvoice", Storage="_SOAInvoices", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<SOAInvoice> SOAInvoices
		{
			get
			{
				return this._SOAInvoices;
			}
			set
			{
				this._SOAInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_SOAStatistic", Storage="_SOAStatistics", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<SOAStatistic> SOAStatistics
		{
			get
			{
				return this._SOAStatistics;
			}
			set
			{
				this._SOAStatistics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_TransitmentAdvised", Storage="_TransitmentAdviseds", ThisKey="Id", OtherKey="ShipmentId")]
		public EntitySet<TransitmentAdvised> TransitmentAdviseds
		{
			get
			{
				return this._TransitmentAdviseds;
			}
			set
			{
				this._TransitmentAdviseds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Shipment", Storage="_Agent", ThisKey="AgentId", OtherKey="Id", IsForeignKey=true)]
		public Agent Agent
		{
			get
			{
				return this._Agent.Entity;
			}
			set
			{
				Agent previousValue = this._Agent.Entity;
				if (((previousValue != value) 
							|| (this._Agent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agent.Entity = null;
						previousValue.Shipments.Remove(this);
					}
					this._Agent.Entity = value;
					if ((value != null))
					{
						value.Shipments.Add(this);
						this._AgentId = value.Id;
					}
					else
					{
						this._AgentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Agent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Shipment", Storage="_Area", ThisKey="DepartureId", OtherKey="Id", IsForeignKey=true)]
		public Area Area
		{
			get
			{
				return this._Area.Entity;
			}
			set
			{
				Area previousValue = this._Area.Entity;
				if (((previousValue != value) 
							|| (this._Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area.Entity = null;
						previousValue.Shipments.Remove(this);
					}
					this._Area.Entity = value;
					if ((value != null))
					{
						value.Shipments.Add(this);
						this._DepartureId = value.Id;
					}
					else
					{
						this._DepartureId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Shipment1", Storage="_Area1", ThisKey="DestinationId", OtherKey="Id", IsForeignKey=true)]
		public Area Area1
		{
			get
			{
				return this._Area1.Entity;
			}
			set
			{
				Area previousValue = this._Area1.Entity;
				if (((previousValue != value) 
							|| (this._Area1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area1.Entity = null;
						previousValue.Shipments1.Remove(this);
					}
					this._Area1.Entity = value;
					if ((value != null))
					{
						value.Shipments1.Add(this);
						this._DestinationId = value.Id;
					}
					else
					{
						this._DestinationId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Area1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarrierAirLine_Shipment", Storage="_CarrierAirLine", ThisKey="CarrierAirId", OtherKey="Id", IsForeignKey=true)]
		public CarrierAirLine CarrierAirLine
		{
			get
			{
				return this._CarrierAirLine.Entity;
			}
			set
			{
				CarrierAirLine previousValue = this._CarrierAirLine.Entity;
				if (((previousValue != value) 
							|| (this._CarrierAirLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarrierAirLine.Entity = null;
						previousValue.Shipments.Remove(this);
					}
					this._CarrierAirLine.Entity = value;
					if ((value != null))
					{
						value.Shipments.Add(this);
						this._CarrierAirId = value.Id;
					}
					else
					{
						this._CarrierAirId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CarrierAirLine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Shipment", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Shipments.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Shipments.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Shipment", Storage="_Customer", ThisKey="CneeId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Shipments.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Shipments.Add(this);
						this._CneeId = value.Id;
					}
					else
					{
						this._CneeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Shipment1", Storage="_Customer1", ThisKey="ShipperId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Shipments1.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Shipments1.Add(this);
						this._ShipperId = value.Id;
					}
					else
					{
						this._ShipperId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Shipment", Storage="_Department", ThisKey="DeptId", OtherKey="Id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Shipments.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Shipments.Add(this);
						this._DeptId = value.Id;
					}
					else
					{
						this._DeptId = default(long);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Shipment", Storage="_User", ThisKey="SaleId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Shipments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Shipments.Add(this);
						this._SaleId = value.Id;
					}
					else
					{
						this._SaleId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MT81_Shipment", Storage="_MT81", ThisKey="VoucherId", OtherKey="VoucherID", IsForeignKey=true)]
		public MT81 MT81
		{
			get
			{
				return this._MT81.Entity;
			}
			set
			{
				MT81 previousValue = this._MT81.Entity;
				if (((previousValue != value) 
							|| (this._MT81.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MT81.Entity = null;
						previousValue.Shipments = null;
					}
					this._MT81.Entity = value;
					if ((value != null))
					{
						value.Shipments = this;
						this._VoucherId = value.VoucherID;
					}
					else
					{
						this._VoucherId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MT81");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicesType_Shipment", Storage="_ServicesType", ThisKey="ServiceId", OtherKey="Id", IsForeignKey=true)]
		public ServicesType ServicesType
		{
			get
			{
				return this._ServicesType.Entity;
			}
			set
			{
				ServicesType previousValue = this._ServicesType.Entity;
				if (((previousValue != value) 
							|| (this._ServicesType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicesType.Entity = null;
						previousValue.Shipments.Remove(this);
					}
					this._ServicesType.Entity = value;
					if ((value != null))
					{
						value.Shipments.Add(this);
						this._ServiceId = value.Id;
					}
					else
					{
						this._ServiceId = default(int);
					}
					this.SendPropertyChanged("ServicesType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArriveNotices(ArriveNotice entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_ArriveNotices(ArriveNotice entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_AuthorLetters(AuthorLetter entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_AuthorLetters(AuthorLetter entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_BillLandings(BillLanding entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_BillLandings(BillLanding entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_BookingConfirms(BookingConfirm entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_BookingConfirms(BookingConfirm entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_BookingNotes(BookingNote entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_BookingNotes(BookingNote entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_BookingRequests(BookingRequest entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_BookingRequests(BookingRequest entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_DebitNotes(DebitNote entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_DebitNotes(DebitNote entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_HAirWayBills(HAirWayBill entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_HAirWayBills(HAirWayBill entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_InvoideIssueds(InvoideIssued entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_InvoideIssueds(InvoideIssued entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_Manifests(Manifest entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_Manifests(Manifest entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_PaymentVouchers(PaymentVoucher entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_PaymentVouchers(PaymentVoucher entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_SOAInvoices(SOAInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_SOAInvoices(SOAInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_SOAStatistics(SOAStatistic entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_SOAStatistics(SOAStatistic entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
		
		private void attach_TransitmentAdviseds(TransitmentAdvised entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = this;
		}
		
		private void detach_TransitmentAdviseds(TransitmentAdvised entity)
		{
			this.SendPropertyChanging();
			entity.Shipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SOAInvoice")]
	public partial class SOAInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _RevenueId;
		
		private long _AgentId;
		
		private string _AgentName;
		
		private System.Nullable<decimal> _Amount1;
		
		private System.Nullable<System.DateTime> _DateUpdate;
		
		private System.Nullable<decimal> _Amount2;
		
		private System.Nullable<long> _ShipmentId;
		
		private string _TypeNote1;
		
		private string _TypeNote2;
		
		private string _Currency1;
		
		private string _Currency2;
		
		private System.Nullable<System.DateTime> _DateShp;
		
		private bool _IsPayment;
		
		private EntityRef<Agent> _Agent;
		
		private EntityRef<Revenue> _Revenue;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRevenueIdChanging(long value);
    partial void OnRevenueIdChanged();
    partial void OnAgentIdChanging(long value);
    partial void OnAgentIdChanged();
    partial void OnAgentNameChanging(string value);
    partial void OnAgentNameChanged();
    partial void OnAmount1Changing(System.Nullable<decimal> value);
    partial void OnAmount1Changed();
    partial void OnDateUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdateChanged();
    partial void OnAmount2Changing(System.Nullable<decimal> value);
    partial void OnAmount2Changed();
    partial void OnShipmentIdChanging(System.Nullable<long> value);
    partial void OnShipmentIdChanged();
    partial void OnTypeNote1Changing(string value);
    partial void OnTypeNote1Changed();
    partial void OnTypeNote2Changing(string value);
    partial void OnTypeNote2Changed();
    partial void OnCurrency1Changing(string value);
    partial void OnCurrency1Changed();
    partial void OnCurrency2Changing(string value);
    partial void OnCurrency2Changed();
    partial void OnDateShpChanging(System.Nullable<System.DateTime> value);
    partial void OnDateShpChanged();
    partial void OnIsPaymentChanging(bool value);
    partial void OnIsPaymentChanged();
    #endregion
		
		public SOAInvoice()
		{
			this._Agent = default(EntityRef<Agent>);
			this._Revenue = default(EntityRef<Revenue>);
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueId", DbType="BigInt NOT NULL")]
		public long RevenueId
		{
			get
			{
				return this._RevenueId;
			}
			set
			{
				if ((this._RevenueId != value))
				{
					if (this._Revenue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevenueIdChanging(value);
					this.SendPropertyChanging();
					this._RevenueId = value;
					this.SendPropertyChanged("RevenueId");
					this.OnRevenueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentId", DbType="BigInt NOT NULL")]
		public long AgentId
		{
			get
			{
				return this._AgentId;
			}
			set
			{
				if ((this._AgentId != value))
				{
					if (this._Agent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgentIdChanging(value);
					this.SendPropertyChanging();
					this._AgentId = value;
					this.SendPropertyChanged("AgentId");
					this.OnAgentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentName", DbType="NVarChar(500)")]
		public string AgentName
		{
			get
			{
				return this._AgentName;
			}
			set
			{
				if ((this._AgentName != value))
				{
					this.OnAgentNameChanging(value);
					this.SendPropertyChanging();
					this._AgentName = value;
					this.SendPropertyChanged("AgentName");
					this.OnAgentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount1", DbType="Money")]
		public System.Nullable<decimal> Amount1
		{
			get
			{
				return this._Amount1;
			}
			set
			{
				if ((this._Amount1 != value))
				{
					this.OnAmount1Changing(value);
					this.SendPropertyChanging();
					this._Amount1 = value;
					this.SendPropertyChanged("Amount1");
					this.OnAmount1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdate
		{
			get
			{
				return this._DateUpdate;
			}
			set
			{
				if ((this._DateUpdate != value))
				{
					this.OnDateUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateUpdate = value;
					this.SendPropertyChanged("DateUpdate");
					this.OnDateUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount2", DbType="Money")]
		public System.Nullable<decimal> Amount2
		{
			get
			{
				return this._Amount2;
			}
			set
			{
				if ((this._Amount2 != value))
				{
					this.OnAmount2Changing(value);
					this.SendPropertyChanging();
					this._Amount2 = value;
					this.SendPropertyChanged("Amount2");
					this.OnAmount2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt")]
		public System.Nullable<long> ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeNote1", DbType="NVarChar(50)")]
		public string TypeNote1
		{
			get
			{
				return this._TypeNote1;
			}
			set
			{
				if ((this._TypeNote1 != value))
				{
					this.OnTypeNote1Changing(value);
					this.SendPropertyChanging();
					this._TypeNote1 = value;
					this.SendPropertyChanged("TypeNote1");
					this.OnTypeNote1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeNote2", DbType="NVarChar(50)")]
		public string TypeNote2
		{
			get
			{
				return this._TypeNote2;
			}
			set
			{
				if ((this._TypeNote2 != value))
				{
					this.OnTypeNote2Changing(value);
					this.SendPropertyChanging();
					this._TypeNote2 = value;
					this.SendPropertyChanged("TypeNote2");
					this.OnTypeNote2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency1", DbType="NVarChar(50)")]
		public string Currency1
		{
			get
			{
				return this._Currency1;
			}
			set
			{
				if ((this._Currency1 != value))
				{
					this.OnCurrency1Changing(value);
					this.SendPropertyChanging();
					this._Currency1 = value;
					this.SendPropertyChanged("Currency1");
					this.OnCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency2", DbType="NVarChar(50)")]
		public string Currency2
		{
			get
			{
				return this._Currency2;
			}
			set
			{
				if ((this._Currency2 != value))
				{
					this.OnCurrency2Changing(value);
					this.SendPropertyChanging();
					this._Currency2 = value;
					this.SendPropertyChanged("Currency2");
					this.OnCurrency2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateShp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateShp
		{
			get
			{
				return this._DateShp;
			}
			set
			{
				if ((this._DateShp != value))
				{
					this.OnDateShpChanging(value);
					this.SendPropertyChanging();
					this._DateShp = value;
					this.SendPropertyChanged("DateShp");
					this.OnDateShpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayment", DbType="bit")]
		public bool IsPayment
		{
			get
			{
				return this._IsPayment;
			}
			set
			{
				if ((this._IsPayment != value))
				{
					this.OnIsPaymentChanging(value);
					this.SendPropertyChanging();
					this._IsPayment = value;
					this.SendPropertyChanged("IsPayment");
					this.OnIsPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_SOAInvoice", Storage="_Agent", ThisKey="AgentId", OtherKey="Id", IsForeignKey=true)]
		public Agent Agent
		{
			get
			{
				return this._Agent.Entity;
			}
			set
			{
				Agent previousValue = this._Agent.Entity;
				if (((previousValue != value) 
							|| (this._Agent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agent.Entity = null;
						previousValue.SOAInvoices.Remove(this);
					}
					this._Agent.Entity = value;
					if ((value != null))
					{
						value.SOAInvoices.Add(this);
						this._AgentId = value.Id;
					}
					else
					{
						this._AgentId = default(long);
					}
					this.SendPropertyChanged("Agent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Revenue_SOAInvoice", Storage="_Revenue", ThisKey="RevenueId", OtherKey="Id", IsForeignKey=true)]
		public Revenue Revenue
		{
			get
			{
				return this._Revenue.Entity;
			}
			set
			{
				Revenue previousValue = this._Revenue.Entity;
				if (((previousValue != value) 
							|| (this._Revenue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Revenue.Entity = null;
						previousValue.SOAInvoices.Remove(this);
					}
					this._Revenue.Entity = value;
					if ((value != null))
					{
						value.SOAInvoices.Add(this);
						this._RevenueId = value.Id;
					}
					else
					{
						this._RevenueId = default(long);
					}
					this.SendPropertyChanged("Revenue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_SOAInvoice", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.SOAInvoices.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.SOAInvoices.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SOAStatistic")]
	public partial class SOAStatistic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AgentId;
		
		private long _ShipmentId;
		
		private System.DateTime _DateUpdate;
		
		private string _Currency;
		
		private string _TypeNote;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<System.DateTime> _DateShp;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAgentIdChanging(long value);
    partial void OnAgentIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnDateUpdateChanging(System.DateTime value);
    partial void OnDateUpdateChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnTypeNoteChanging(string value);
    partial void OnTypeNoteChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnDateShpChanging(System.Nullable<System.DateTime> value);
    partial void OnDateShpChanged();
    #endregion
		
		public SOAStatistic()
		{
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentId", DbType="BigInt NOT NULL")]
		public long AgentId
		{
			get
			{
				return this._AgentId;
			}
			set
			{
				if ((this._AgentId != value))
				{
					this.OnAgentIdChanging(value);
					this.SendPropertyChanging();
					this._AgentId = value;
					this.SendPropertyChanged("AgentId");
					this.OnAgentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime DateUpdate
		{
			get
			{
				return this._DateUpdate;
			}
			set
			{
				if ((this._DateUpdate != value))
				{
					this.OnDateUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateUpdate = value;
					this.SendPropertyChanged("DateUpdate");
					this.OnDateUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="NVarChar(50)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeNote", DbType="NVarChar(50)")]
		public string TypeNote
		{
			get
			{
				return this._TypeNote;
			}
			set
			{
				if ((this._TypeNote != value))
				{
					this.OnTypeNoteChanging(value);
					this.SendPropertyChanging();
					this._TypeNote = value;
					this.SendPropertyChanged("TypeNote");
					this.OnTypeNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateShp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateShp
		{
			get
			{
				return this._DateShp;
			}
			set
			{
				if ((this._DateShp != value))
				{
					this.OnDateShpChanging(value);
					this.SendPropertyChanging();
					this._DateShp = value;
					this.SendPropertyChanged("DateShp");
					this.OnDateShpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_SOAStatistic", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.SOAStatistics.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.SOAStatistics.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _FullName;
		
		private string _Address;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _Fax;
		
		private string _CompanyName;
		
		private string _Description;
		
		private string _CustomerType;
		
		private System.Nullable<long> _CountryId;
		
		private System.Nullable<long> _CreatedBy;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<System.DateTime> _DateModify;
		
		private EntitySet<MT72> _MT72s;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<StockCard> _StockCards;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCustomerTypeChanging(string value);
    partial void OnCustomerTypeChanged();
    partial void OnCountryIdChanging(System.Nullable<long> value);
    partial void OnCountryIdChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnDateModifyChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifyChanged();
    #endregion
		
		public Supplier()
		{
			this._MT72s = new EntitySet<MT72>(new Action<MT72>(this.attach_MT72s), new Action<MT72>(this.detach_MT72s));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._StockCards = new EntitySet<StockCard>(new Action<StockCard>(this.attach_StockCards), new Action<StockCard>(this.detach_StockCards));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(200)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="NVarChar(50)")]
		public string CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this.OnCustomerTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerType = value;
					this.SendPropertyChanged("CustomerType");
					this.OnCustomerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="BigInt")]
		public System.Nullable<long> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
		public System.Nullable<long> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModify", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModify
		{
			get
			{
				return this._DateModify;
			}
			set
			{
				if ((this._DateModify != value))
				{
					this.OnDateModifyChanging(value);
					this.SendPropertyChanging();
					this._DateModify = value;
					this.SendPropertyChanged("DateModify");
					this.OnDateModifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_MT72", Storage="_MT72s", ThisKey="Id", OtherKey="SupplierID")]
		public EntitySet<MT72> MT72s
		{
			get
			{
				return this._MT72s;
			}
			set
			{
				this._MT72s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Product", Storage="_Products", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_StockCard", Storage="_StockCards", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<StockCard> StockCards
		{
			get
			{
				return this._StockCards;
			}
			set
			{
				this._StockCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Supplier", Storage="_Country", ThisKey="CountryId", OtherKey="Id", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Suppliers.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Suppliers.Add(this);
						this._CountryId = value.Id;
					}
					else
					{
						this._CountryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MT72s(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_MT72s(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_StockCards(StockCard entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_StockCards(StockCard entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransitmentAdvised")]
	public partial class TransitmentAdvised : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ShipmentId;
		
		private string _AdvisedTo;
		
		private string _AdvisedATTN;
		
		private string _AdvisedBL;
		
		private string _Grossweight;
		
		private string _Measurement;
		
		private string _Vessel;
		
		private string _Portofloading;
		
		private string _ETD;
		
		private string _ETA;
		
		private string _Portofdischarge;
		
		private string _CustomerServices;
		
		private string _AdvisedTime;
		
		private bool _StatusOk;
		
		private bool _StatusReport;
		
		private bool _StatusNoReport;
		
		private bool _MachineNoReport;
		
		private string _ChargeFreight;
		
		private string _ChargeBill;
		
		private string _ChargeTHC;
		
		private string _ChargeAMS;
		
		private string _ChargeVAT;
		
		private EntityRef<Shipment> _Shipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnShipmentIdChanging(long value);
    partial void OnShipmentIdChanged();
    partial void OnAdvisedToChanging(string value);
    partial void OnAdvisedToChanged();
    partial void OnAdvisedATTNChanging(string value);
    partial void OnAdvisedATTNChanged();
    partial void OnAdvisedBLChanging(string value);
    partial void OnAdvisedBLChanged();
    partial void OnGrossweightChanging(string value);
    partial void OnGrossweightChanged();
    partial void OnMeasurementChanging(string value);
    partial void OnMeasurementChanged();
    partial void OnVesselChanging(string value);
    partial void OnVesselChanged();
    partial void OnPortofloadingChanging(string value);
    partial void OnPortofloadingChanged();
    partial void OnETDChanging(string value);
    partial void OnETDChanged();
    partial void OnETAChanging(string value);
    partial void OnETAChanged();
    partial void OnPortofdischargeChanging(string value);
    partial void OnPortofdischargeChanged();
    partial void OnCustomerServicesChanging(string value);
    partial void OnCustomerServicesChanged();
    partial void OnAdvisedTimeChanging(string value);
    partial void OnAdvisedTimeChanged();
    partial void OnStatusOkChanging(bool value);
    partial void OnStatusOkChanged();
    partial void OnStatusReportChanging(bool value);
    partial void OnStatusReportChanged();
    partial void OnStatusNoReportChanging(bool value);
    partial void OnStatusNoReportChanged();
    partial void OnMachineNoReportChanging(bool value);
    partial void OnMachineNoReportChanged();
    partial void OnChargeFreightChanging(string value);
    partial void OnChargeFreightChanged();
    partial void OnChargeBillChanging(string value);
    partial void OnChargeBillChanged();
    partial void OnChargeTHCChanging(string value);
    partial void OnChargeTHCChanged();
    partial void OnChargeAMSChanging(string value);
    partial void OnChargeAMSChanged();
    partial void OnChargeVATChanging(string value);
    partial void OnChargeVATChanged();
    #endregion
		
		public TransitmentAdvised()
		{
			this._Shipment = default(EntityRef<Shipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", DbType="BigInt NOT NULL")]
		public long ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					if (this._Shipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvisedTo", DbType="NVarChar(1000)")]
		public string AdvisedTo
		{
			get
			{
				return this._AdvisedTo;
			}
			set
			{
				if ((this._AdvisedTo != value))
				{
					this.OnAdvisedToChanging(value);
					this.SendPropertyChanging();
					this._AdvisedTo = value;
					this.SendPropertyChanged("AdvisedTo");
					this.OnAdvisedToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvisedATTN", DbType="NVarChar(200)")]
		public string AdvisedATTN
		{
			get
			{
				return this._AdvisedATTN;
			}
			set
			{
				if ((this._AdvisedATTN != value))
				{
					this.OnAdvisedATTNChanging(value);
					this.SendPropertyChanging();
					this._AdvisedATTN = value;
					this.SendPropertyChanged("AdvisedATTN");
					this.OnAdvisedATTNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvisedBL", DbType="NVarChar(100)")]
		public string AdvisedBL
		{
			get
			{
				return this._AdvisedBL;
			}
			set
			{
				if ((this._AdvisedBL != value))
				{
					this.OnAdvisedBLChanging(value);
					this.SendPropertyChanging();
					this._AdvisedBL = value;
					this.SendPropertyChanged("AdvisedBL");
					this.OnAdvisedBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grossweight", DbType="NVarChar(100)")]
		public string Grossweight
		{
			get
			{
				return this._Grossweight;
			}
			set
			{
				if ((this._Grossweight != value))
				{
					this.OnGrossweightChanging(value);
					this.SendPropertyChanging();
					this._Grossweight = value;
					this.SendPropertyChanged("Grossweight");
					this.OnGrossweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measurement", DbType="NVarChar(50)")]
		public string Measurement
		{
			get
			{
				return this._Measurement;
			}
			set
			{
				if ((this._Measurement != value))
				{
					this.OnMeasurementChanging(value);
					this.SendPropertyChanging();
					this._Measurement = value;
					this.SendPropertyChanged("Measurement");
					this.OnMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vessel", DbType="NVarChar(1000)")]
		public string Vessel
		{
			get
			{
				return this._Vessel;
			}
			set
			{
				if ((this._Vessel != value))
				{
					this.OnVesselChanging(value);
					this.SendPropertyChanging();
					this._Vessel = value;
					this.SendPropertyChanged("Vessel");
					this.OnVesselChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portofloading", DbType="NVarChar(1000)")]
		public string Portofloading
		{
			get
			{
				return this._Portofloading;
			}
			set
			{
				if ((this._Portofloading != value))
				{
					this.OnPortofloadingChanging(value);
					this.SendPropertyChanging();
					this._Portofloading = value;
					this.SendPropertyChanged("Portofloading");
					this.OnPortofloadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETD", DbType="NVarChar(50)")]
		public string ETD
		{
			get
			{
				return this._ETD;
			}
			set
			{
				if ((this._ETD != value))
				{
					this.OnETDChanging(value);
					this.SendPropertyChanging();
					this._ETD = value;
					this.SendPropertyChanged("ETD");
					this.OnETDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETA", DbType="NVarChar(50)")]
		public string ETA
		{
			get
			{
				return this._ETA;
			}
			set
			{
				if ((this._ETA != value))
				{
					this.OnETAChanging(value);
					this.SendPropertyChanging();
					this._ETA = value;
					this.SendPropertyChanged("ETA");
					this.OnETAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portofdischarge", DbType="NVarChar(1000)")]
		public string Portofdischarge
		{
			get
			{
				return this._Portofdischarge;
			}
			set
			{
				if ((this._Portofdischarge != value))
				{
					this.OnPortofdischargeChanging(value);
					this.SendPropertyChanging();
					this._Portofdischarge = value;
					this.SendPropertyChanged("Portofdischarge");
					this.OnPortofdischargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerServices", DbType="NVarChar(50)")]
		public string CustomerServices
		{
			get
			{
				return this._CustomerServices;
			}
			set
			{
				if ((this._CustomerServices != value))
				{
					this.OnCustomerServicesChanging(value);
					this.SendPropertyChanging();
					this._CustomerServices = value;
					this.SendPropertyChanged("CustomerServices");
					this.OnCustomerServicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvisedTime", DbType="NVarChar(50)")]
		public string AdvisedTime
		{
			get
			{
				return this._AdvisedTime;
			}
			set
			{
				if ((this._AdvisedTime != value))
				{
					this.OnAdvisedTimeChanging(value);
					this.SendPropertyChanging();
					this._AdvisedTime = value;
					this.SendPropertyChanged("AdvisedTime");
					this.OnAdvisedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusOk", DbType="Bit NOT NULL")]
		public bool StatusOk
		{
			get
			{
				return this._StatusOk;
			}
			set
			{
				if ((this._StatusOk != value))
				{
					this.OnStatusOkChanging(value);
					this.SendPropertyChanging();
					this._StatusOk = value;
					this.SendPropertyChanged("StatusOk");
					this.OnStatusOkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusReport", DbType="Bit NOT NULL")]
		public bool StatusReport
		{
			get
			{
				return this._StatusReport;
			}
			set
			{
				if ((this._StatusReport != value))
				{
					this.OnStatusReportChanging(value);
					this.SendPropertyChanging();
					this._StatusReport = value;
					this.SendPropertyChanged("StatusReport");
					this.OnStatusReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusNoReport", DbType="Bit NOT NULL")]
		public bool StatusNoReport
		{
			get
			{
				return this._StatusNoReport;
			}
			set
			{
				if ((this._StatusNoReport != value))
				{
					this.OnStatusNoReportChanging(value);
					this.SendPropertyChanging();
					this._StatusNoReport = value;
					this.SendPropertyChanged("StatusNoReport");
					this.OnStatusNoReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineNoReport", DbType="Bit NOT NULL")]
		public bool MachineNoReport
		{
			get
			{
				return this._MachineNoReport;
			}
			set
			{
				if ((this._MachineNoReport != value))
				{
					this.OnMachineNoReportChanging(value);
					this.SendPropertyChanging();
					this._MachineNoReport = value;
					this.SendPropertyChanged("MachineNoReport");
					this.OnMachineNoReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeFreight", DbType="NVarChar(50)")]
		public string ChargeFreight
		{
			get
			{
				return this._ChargeFreight;
			}
			set
			{
				if ((this._ChargeFreight != value))
				{
					this.OnChargeFreightChanging(value);
					this.SendPropertyChanging();
					this._ChargeFreight = value;
					this.SendPropertyChanged("ChargeFreight");
					this.OnChargeFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeBill", DbType="NVarChar(50)")]
		public string ChargeBill
		{
			get
			{
				return this._ChargeBill;
			}
			set
			{
				if ((this._ChargeBill != value))
				{
					this.OnChargeBillChanging(value);
					this.SendPropertyChanging();
					this._ChargeBill = value;
					this.SendPropertyChanged("ChargeBill");
					this.OnChargeBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeTHC", DbType="NVarChar(50)")]
		public string ChargeTHC
		{
			get
			{
				return this._ChargeTHC;
			}
			set
			{
				if ((this._ChargeTHC != value))
				{
					this.OnChargeTHCChanging(value);
					this.SendPropertyChanging();
					this._ChargeTHC = value;
					this.SendPropertyChanged("ChargeTHC");
					this.OnChargeTHCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeAMS", DbType="NVarChar(50)")]
		public string ChargeAMS
		{
			get
			{
				return this._ChargeAMS;
			}
			set
			{
				if ((this._ChargeAMS != value))
				{
					this.OnChargeAMSChanging(value);
					this.SendPropertyChanging();
					this._ChargeAMS = value;
					this.SendPropertyChanged("ChargeAMS");
					this.OnChargeAMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeVAT", DbType="NVarChar(50)")]
		public string ChargeVAT
		{
			get
			{
				return this._ChargeVAT;
			}
			set
			{
				if ((this._ChargeVAT != value))
				{
					this.OnChargeVATChanging(value);
					this.SendPropertyChanging();
					this._ChargeVAT = value;
					this.SendPropertyChanged("ChargeVAT");
					this.OnChargeVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipment_TransitmentAdvised", Storage="_Shipment", ThisKey="ShipmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shipment Shipment
		{
			get
			{
				return this._Shipment.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipment.Entity;
				if (((previousValue != value) 
							|| (this._Shipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipment.Entity = null;
						previousValue.TransitmentAdviseds.Remove(this);
					}
					this._Shipment.Entity = value;
					if ((value != null))
					{
						value.TransitmentAdviseds.Add(this);
						this._ShipmentId = value.Id;
					}
					else
					{
						this._ShipmentId = default(long);
					}
					this.SendPropertyChanged("Shipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Unit1;
		
		private string _Description;
		
		private string _ServiceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUnit1Changing(string value);
    partial void OnUnit1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnServiceTypeChanging(string value);
    partial void OnServiceTypeChanged();
    #endregion
		
		public Unit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit1", DbType="NVarChar(50)")]
		public string Unit1
		{
			get
			{
				return this._Unit1;
			}
			set
			{
				if ((this._Unit1 != value))
				{
					this.OnUnit1Changing(value);
					this.SendPropertyChanging();
					this._Unit1 = value;
					this.SendPropertyChanged("Unit1");
					this.OnUnit1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="NVarChar(100)")]
		public string ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vouchers")]
	public partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _name;
		
		private string _name2;
		
		private EntitySet<MT72> _MT72s;
		
		private EntitySet<MT81> _MT81s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onname2Changing(string value);
    partial void Onname2Changed();
    #endregion
		
		public Voucher()
		{
			this._MT72s = new EntitySet<MT72>(new Action<MT72>(this.attach_MT72s), new Action<MT72>(this.detach_MT72s));
			this._MT81s = new EntitySet<MT81>(new Action<MT81>(this.attach_MT81s), new Action<MT81>(this.detach_MT81s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Char(10)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name2", DbType="NVarChar(128)")]
		public string name2
		{
			get
			{
				return this._name2;
			}
			set
			{
				if ((this._name2 != value))
				{
					this.Onname2Changing(value);
					this.SendPropertyChanging();
					this._name2 = value;
					this.SendPropertyChanged("name2");
					this.Onname2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_MT72", Storage="_MT72s", ThisKey="id", OtherKey="VoucherCode")]
		public EntitySet<MT72> MT72s
		{
			get
			{
				return this._MT72s;
			}
			set
			{
				this._MT72s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_MT81", Storage="_MT81s", ThisKey="id", OtherKey="VoucherCode")]
		public EntitySet<MT81> MT81s
		{
			get
			{
				return this._MT81s;
			}
			set
			{
				this._MT81s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MT72s(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = this;
		}
		
		private void detach_MT72s(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = null;
		}
		
		private void attach_MT81s(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = this;
		}
		
		private void detach_MT81s(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MT81")]
	public partial class MT81 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _VoucherID;
		
		private System.Nullable<int> _VoucherCode;
		
		private System.Nullable<System.DateTime> _VoucherDate;
		
		private string _VoucherNo;
		
		private System.Nullable<long> _CustomerID;
		
		private string _Description;
		
		private System.Nullable<long> _CurencyID;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private System.Nullable<long> _CountryID;
		
		private System.Nullable<decimal> _T_Quantity;
		
		private System.Nullable<decimal> _T_Amount;
		
		private System.Nullable<decimal> _T_VATTax;
		
		private System.Nullable<decimal> _T_TransportFee;
		
		private System.Nullable<decimal> _T_Fee1;
		
		private System.Nullable<decimal> _T_Fee2;
		
		private System.Nullable<decimal> _T_Fee;
		
		private System.Nullable<decimal> _T_TT;
		
		private System.Nullable<decimal> _T_Amount0;
		
		private System.Nullable<decimal> _VAT_Rate;
		
		private System.Nullable<long> _SubmittedBy;
		
		private System.Nullable<long> _CheckedBy;
		
		private System.Nullable<long> _ApprovedBy;
		
		private System.Nullable<byte> _Status;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<System.DateTime> _DateModify;
		
		private System.Nullable<long> _CreateBy;
		
		private System.Nullable<long> _ModifyBy;
		
		private System.Nullable<System.DateTime> _DateSubmited;
		
		private System.Nullable<System.DateTime> _DateChecked;
		
		private System.Nullable<System.DateTime> _DateApproved;
		
		private string _NotePrints;
		
		private EntitySet<DT81> _DT81s;
		
		private EntityRef<Shipment> _Shipments;
		
		private EntityRef<Curency> _Curency;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Voucher> _Voucher;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<User> _User3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherIDChanging(long value);
    partial void OnVoucherIDChanged();
    partial void OnVoucherCodeChanging(System.Nullable<int> value);
    partial void OnVoucherCodeChanged();
    partial void OnVoucherDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVoucherDateChanged();
    partial void OnVoucherNoChanging(string value);
    partial void OnVoucherNoChanged();
    partial void OnCustomerIDChanging(System.Nullable<long> value);
    partial void OnCustomerIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCurencyIDChanging(System.Nullable<long> value);
    partial void OnCurencyIDChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnCountryIDChanging(System.Nullable<long> value);
    partial void OnCountryIDChanged();
    partial void OnT_QuantityChanging(System.Nullable<decimal> value);
    partial void OnT_QuantityChanged();
    partial void OnT_AmountChanging(System.Nullable<decimal> value);
    partial void OnT_AmountChanged();
    partial void OnT_VATTaxChanging(System.Nullable<decimal> value);
    partial void OnT_VATTaxChanged();
    partial void OnT_TransportFeeChanging(System.Nullable<decimal> value);
    partial void OnT_TransportFeeChanged();
    partial void OnT_Fee1Changing(System.Nullable<decimal> value);
    partial void OnT_Fee1Changed();
    partial void OnT_Fee2Changing(System.Nullable<decimal> value);
    partial void OnT_Fee2Changed();
    partial void OnT_FeeChanging(System.Nullable<decimal> value);
    partial void OnT_FeeChanged();
    partial void OnT_TTChanging(System.Nullable<decimal> value);
    partial void OnT_TTChanged();
    partial void OnT_Amount0Changing(System.Nullable<decimal> value);
    partial void OnT_Amount0Changed();
    partial void OnVAT_RateChanging(System.Nullable<decimal> value);
    partial void OnVAT_RateChanged();
    partial void OnSubmittedByChanging(System.Nullable<long> value);
    partial void OnSubmittedByChanged();
    partial void OnCheckedByChanging(System.Nullable<long> value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(System.Nullable<long> value);
    partial void OnApprovedByChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnDateModifyChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifyChanged();
    partial void OnCreateByChanging(System.Nullable<long> value);
    partial void OnCreateByChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnDateSubmitedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSubmitedChanged();
    partial void OnDateCheckedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCheckedChanged();
    partial void OnDateApprovedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateApprovedChanged();
    partial void OnNotePrintsChanging(string value);
    partial void OnNotePrintsChanged();
    #endregion
		
		public MT81()
		{
			this._DT81s = new EntitySet<DT81>(new Action<DT81>(this.attach_DT81s), new Action<DT81>(this.detach_DT81s));
			this._Shipments = default(EntityRef<Shipment>);
			this._Curency = default(EntityRef<Curency>);
			this._Customer = default(EntityRef<Customer>);
			this._Voucher = default(EntityRef<Voucher>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._User3 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long VoucherID
		{
			get
			{
				return this._VoucherID;
			}
			set
			{
				if ((this._VoucherID != value))
				{
					this.OnVoucherIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherID = value;
					this.SendPropertyChanged("VoucherID");
					this.OnVoucherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCode", DbType="Int")]
		public System.Nullable<int> VoucherCode
		{
			get
			{
				return this._VoucherCode;
			}
			set
			{
				if ((this._VoucherCode != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoucherCodeChanging(value);
					this.SendPropertyChanging();
					this._VoucherCode = value;
					this.SendPropertyChanged("VoucherCode");
					this.OnVoucherCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherDate", DbType="Date")]
		public System.Nullable<System.DateTime> VoucherDate
		{
			get
			{
				return this._VoucherDate;
			}
			set
			{
				if ((this._VoucherDate != value))
				{
					this.OnVoucherDateChanging(value);
					this.SendPropertyChanging();
					this._VoucherDate = value;
					this.SendPropertyChanged("VoucherDate");
					this.OnVoucherDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherNo", DbType="Char(12)")]
		public string VoucherNo
		{
			get
			{
				return this._VoucherNo;
			}
			set
			{
				if ((this._VoucherNo != value))
				{
					this.OnVoucherNoChanging(value);
					this.SendPropertyChanging();
					this._VoucherNo = value;
					this.SendPropertyChanged("VoucherNo");
					this.OnVoucherNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurencyID", DbType="BigInt")]
		public System.Nullable<long> CurencyID
		{
			get
			{
				return this._CurencyID;
			}
			set
			{
				if ((this._CurencyID != value))
				{
					if (this._Curency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurencyID = value;
					this.SendPropertyChanged("CurencyID");
					this.OnCurencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(24,12)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="BigInt")]
		public System.Nullable<long> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Quantity", DbType="Decimal(12,3)")]
		public System.Nullable<decimal> T_Quantity
		{
			get
			{
				return this._T_Quantity;
			}
			set
			{
				if ((this._T_Quantity != value))
				{
					this.OnT_QuantityChanging(value);
					this.SendPropertyChanging();
					this._T_Quantity = value;
					this.SendPropertyChanged("T_Quantity");
					this.OnT_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Amount", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_Amount
		{
			get
			{
				return this._T_Amount;
			}
			set
			{
				if ((this._T_Amount != value))
				{
					this.OnT_AmountChanging(value);
					this.SendPropertyChanging();
					this._T_Amount = value;
					this.SendPropertyChanged("T_Amount");
					this.OnT_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_VATTax", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_VATTax
		{
			get
			{
				return this._T_VATTax;
			}
			set
			{
				if ((this._T_VATTax != value))
				{
					this.OnT_VATTaxChanging(value);
					this.SendPropertyChanging();
					this._T_VATTax = value;
					this.SendPropertyChanged("T_VATTax");
					this.OnT_VATTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_TransportFee", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_TransportFee
		{
			get
			{
				return this._T_TransportFee;
			}
			set
			{
				if ((this._T_TransportFee != value))
				{
					this.OnT_TransportFeeChanging(value);
					this.SendPropertyChanging();
					this._T_TransportFee = value;
					this.SendPropertyChanged("T_TransportFee");
					this.OnT_TransportFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Fee1", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_Fee1
		{
			get
			{
				return this._T_Fee1;
			}
			set
			{
				if ((this._T_Fee1 != value))
				{
					this.OnT_Fee1Changing(value);
					this.SendPropertyChanging();
					this._T_Fee1 = value;
					this.SendPropertyChanged("T_Fee1");
					this.OnT_Fee1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Fee2", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_Fee2
		{
			get
			{
				return this._T_Fee2;
			}
			set
			{
				if ((this._T_Fee2 != value))
				{
					this.OnT_Fee2Changing(value);
					this.SendPropertyChanging();
					this._T_Fee2 = value;
					this.SendPropertyChanged("T_Fee2");
					this.OnT_Fee2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Fee", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_Fee
		{
			get
			{
				return this._T_Fee;
			}
			set
			{
				if ((this._T_Fee != value))
				{
					this.OnT_FeeChanging(value);
					this.SendPropertyChanging();
					this._T_Fee = value;
					this.SendPropertyChanged("T_Fee");
					this.OnT_FeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_TT", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_TT
		{
			get
			{
				return this._T_TT;
			}
			set
			{
				if ((this._T_TT != value))
				{
					this.OnT_TTChanging(value);
					this.SendPropertyChanging();
					this._T_TT = value;
					this.SendPropertyChanged("T_TT");
					this.OnT_TTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Amount0", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_Amount0
		{
			get
			{
				return this._T_Amount0;
			}
			set
			{
				if ((this._T_Amount0 != value))
				{
					this.OnT_Amount0Changing(value);
					this.SendPropertyChanging();
					this._T_Amount0 = value;
					this.SendPropertyChanged("T_Amount0");
					this.OnT_Amount0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT_Rate", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> VAT_Rate
		{
			get
			{
				return this._VAT_Rate;
			}
			set
			{
				if ((this._VAT_Rate != value))
				{
					this.OnVAT_RateChanging(value);
					this.SendPropertyChanging();
					this._VAT_Rate = value;
					this.SendPropertyChanged("VAT_Rate");
					this.OnVAT_RateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedBy", DbType="BigInt")]
		public System.Nullable<long> SubmittedBy
		{
			get
			{
				return this._SubmittedBy;
			}
			set
			{
				if ((this._SubmittedBy != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubmittedByChanging(value);
					this.SendPropertyChanging();
					this._SubmittedBy = value;
					this.SendPropertyChanged("SubmittedBy");
					this.OnSubmittedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="BigInt")]
		public System.Nullable<long> CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._User3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="BigInt")]
		public System.Nullable<long> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModify", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModify
		{
			get
			{
				return this._DateModify;
			}
			set
			{
				if ((this._DateModify != value))
				{
					this.OnDateModifyChanging(value);
					this.SendPropertyChanging();
					this._DateModify = value;
					this.SendPropertyChanged("DateModify");
					this.OnDateModifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt")]
		public System.Nullable<long> CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
		public System.Nullable<long> ModifyBy
		{
			get
			{
				return this._ModifyBy;
			}
			set
			{
				if ((this._ModifyBy != value))
				{
					this.OnModifyByChanging(value);
					this.SendPropertyChanging();
					this._ModifyBy = value;
					this.SendPropertyChanged("ModifyBy");
					this.OnModifyByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSubmited", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSubmited
		{
			get
			{
				return this._DateSubmited;
			}
			set
			{
				if ((this._DateSubmited != value))
				{
					this.OnDateSubmitedChanging(value);
					this.SendPropertyChanging();
					this._DateSubmited = value;
					this.SendPropertyChanged("DateSubmited");
					this.OnDateSubmitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChecked", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateChecked
		{
			get
			{
				return this._DateChecked;
			}
			set
			{
				if ((this._DateChecked != value))
				{
					this.OnDateCheckedChanging(value);
					this.SendPropertyChanging();
					this._DateChecked = value;
					this.SendPropertyChanged("DateChecked");
					this.OnDateCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateApproved", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateApproved
		{
			get
			{
				return this._DateApproved;
			}
			set
			{
				if ((this._DateApproved != value))
				{
					this.OnDateApprovedChanging(value);
					this.SendPropertyChanging();
					this._DateApproved = value;
					this.SendPropertyChanged("DateApproved");
					this.OnDateApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotePrints", DbType="NVarChar(MAX)")]
		public string NotePrints
		{
			get
			{
				return this._NotePrints;
			}
			set
			{
				if ((this._NotePrints != value))
				{
					this.OnNotePrintsChanging(value);
					this.SendPropertyChanging();
					this._NotePrints = value;
					this.SendPropertyChanged("NotePrints");
					this.OnNotePrintsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MT81_DT81", Storage="_DT81s", ThisKey="VoucherID", OtherKey="VoucherID")]
		public EntitySet<DT81> DT81s
		{
			get
			{
				return this._DT81s;
			}
			set
			{
				this._DT81s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MT81_Shipment", Storage="_Shipments", ThisKey="VoucherID", OtherKey="VoucherId", IsUnique=true, IsForeignKey=false)]
		public Shipment Shipments
		{
			get
			{
				return this._Shipments.Entity;
			}
			set
			{
				Shipment previousValue = this._Shipments.Entity;
				if (((previousValue != value) 
							|| (this._Shipments.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipments.Entity = null;
						previousValue.MT81 = null;
					}
					this._Shipments.Entity = value;
					if ((value != null))
					{
						value.MT81 = this;
					}
					this.SendPropertyChanged("Shipments");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curency_MT81", Storage="_Curency", ThisKey="CurencyID", OtherKey="Id", IsForeignKey=true)]
		public Curency Curency
		{
			get
			{
				return this._Curency.Entity;
			}
			set
			{
				Curency previousValue = this._Curency.Entity;
				if (((previousValue != value) 
							|| (this._Curency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Curency.Entity = null;
						previousValue.MT81s.Remove(this);
					}
					this._Curency.Entity = value;
					if ((value != null))
					{
						value.MT81s.Add(this);
						this._CurencyID = value.Id;
					}
					else
					{
						this._CurencyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Curency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_MT81", Storage="_Customer", ThisKey="CustomerID", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.MT81s.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.MT81s.Add(this);
						this._CustomerID = value.Id;
					}
					else
					{
						this._CustomerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_MT81", Storage="_Voucher", ThisKey="VoucherCode", OtherKey="id", IsForeignKey=true)]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.MT81s.Remove(this);
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.MT81s.Add(this);
						this._VoucherCode = value.id;
					}
					else
					{
						this._VoucherCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT81", Storage="_User", ThisKey="CreateBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.MT81s.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.MT81s.Add(this);
						this._CreateBy = value.Id;
					}
					else
					{
						this._CreateBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT811", Storage="_User1", ThisKey="SubmittedBy", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.MT81s1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.MT81s1.Add(this);
						this._SubmittedBy = value.Id;
					}
					else
					{
						this._SubmittedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT812", Storage="_User2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.MT81s2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.MT81s2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT813", Storage="_User3", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public User User3
		{
			get
			{
				return this._User3.Entity;
			}
			set
			{
				User previousValue = this._User3.Entity;
				if (((previousValue != value) 
							|| (this._User3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User3.Entity = null;
						previousValue.MT81s3.Remove(this);
					}
					this._User3.Entity = value;
					if ((value != null))
					{
						value.MT81s3.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("User3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DT81s(DT81 entity)
		{
			this.SendPropertyChanging();
			entity.MT81 = this;
		}
		
		private void detach_DT81s(DT81 entity)
		{
			this.SendPropertyChanging();
			entity.MT81 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _FullName;
		
		private string _UserName;
		
		private string _PassWord;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _CodeEmployer;
		
		private string _Note;
		
		private System.Nullable<long> _DeptId;
		
		private System.Nullable<long> _ComId;
		
		private System.Nullable<int> _DirectorLevel;
		
		private string _RoleName;
		
		private System.Nullable<bool> _SetPass;
		
		private bool _AllowUpdateSeaRate;
		
		private bool _AllowUpdateAirRate;
		
		private bool _AllowTrackSeaIn;
		
		private bool _AllowTrackSeaOut;
		
		private bool _AllowTrackAirIn;
		
		private bool _AllowTrackAirOut;
		
		private bool _AllowTrackInlandSer;
		
		private bool _AllowTrackProjectSer;
		
		private bool _AllowTrackOtherSer;
		
		private bool _AllowApproRevenue;
		
		private bool _AllowQuotaOffice;
		
		private bool _AllowSetSales;
		
		private bool _AllowQuotaDept;
		
		private bool _AllowSettingSystem;
		
		private bool _AllowUpdateAgent;
		
		private bool _AllowUpdatePartner;
		
		private bool _AllowSeaPort;
		
		private bool _AllowAirPort;
		
		private bool _AllowCustomer;
		
		private bool _AllowTrading;
		
		private bool _AllowApprovedStockCard;
		
		private bool _AllowFreight;
		
		private bool _AllowDataTrading;
		
		private bool _AllowInforEdit;
		
		private bool _AllowInfoAll;
		
		private bool _AllowRegulationEdit;
		
		private bool _AllowRegulationApproval;
		
		private bool _IsActve;
		
		private bool _CheckingRevenue;
		
		private bool _AllowFollowDept;
		
		private bool _AllowEditReport;
		
		private string _DeptFollowIds;
		
		private string _EmailPassword;
		
		private string _EmailNameDisplay;
		
		private EntitySet<Agent> _Agents;
		
		private EntitySet<ControlCompany> _ControlCompanies;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<Customer> _Customers1;
		
		private EntitySet<Freight> _Freights;
		
		private EntitySet<MT72> _MT72s;
		
		private EntitySet<MT72> _MT72s1;
		
		private EntitySet<MT72> _MT72s2;
		
		private EntitySet<MT72> _MT72s3;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Revenue> _Revenues;
		
		private EntitySet<SalePlan> _SalePlans;
		
		private EntitySet<Shipment> _Shipments;
		
		private EntitySet<MT81> _MT81s;
		
		private EntitySet<MT81> _MT81s1;
		
		private EntitySet<MT81> _MT81s2;
		
		private EntitySet<MT81> _MT81s3;
		
		private EntitySet<History> _Histories;
		
		private EntitySet<UserGroup> _UserGroups;
		
		private EntitySet<ScfNew> _ScfNews;
		
		private EntitySet<ScfNew> _ScfNews1;
		
		private EntitySet<ScfNew> _ScfNews2;
		
		private EntitySet<CRMPriceQuotation> _CRMPriceQuotations;
		
		private EntitySet<CRMPriceQuotation> _CRMPriceQuotations1;
		
		private EntitySet<CRMCusDocument> _CRMCusDocuments;
		
		private EntitySet<CRMCusDocument> _CRMCusDocuments1;
		
		private EntitySet<CRMPLanSale> _CRMPLanSales;
		
		private EntitySet<CRMCustomer> _CRMCustomers;
		
		private EntitySet<CRMCustomer> _CRMCustomers1;
		
		private EntitySet<CRMFollowCusUser> _CRMFollowCusUsers;
		
		private EntitySet<CRMFollowCusUser> _CRMFollowCusUsers1;
		
		private EntitySet<CRMFollowEventUser> _CRMFollowEventUsers;
		
		private EntitySet<CRMFollowEventUser> _CRMFollowEventUsers1;
		
		private EntitySet<CRMFollowEventUser> _CRMFollowEventUsers2;
		
		private EntitySet<CRMVisit> _CRMVisits;
		
		private EntitySet<CRMVisit> _CRMVisits1;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCodeEmployerChanging(string value);
    partial void OnCodeEmployerChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeptIdChanging(System.Nullable<long> value);
    partial void OnDeptIdChanged();
    partial void OnComIdChanging(System.Nullable<long> value);
    partial void OnComIdChanged();
    partial void OnDirectorLevelChanging(System.Nullable<int> value);
    partial void OnDirectorLevelChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnSetPassChanging(System.Nullable<bool> value);
    partial void OnSetPassChanged();
    partial void OnAllowUpdateSeaRateChanging(bool value);
    partial void OnAllowUpdateSeaRateChanged();
    partial void OnAllowUpdateAirRateChanging(bool value);
    partial void OnAllowUpdateAirRateChanged();
    partial void OnAllowTrackSeaInChanging(bool value);
    partial void OnAllowTrackSeaInChanged();
    partial void OnAllowTrackSeaOutChanging(bool value);
    partial void OnAllowTrackSeaOutChanged();
    partial void OnAllowTrackAirInChanging(bool value);
    partial void OnAllowTrackAirInChanged();
    partial void OnAllowTrackAirOutChanging(bool value);
    partial void OnAllowTrackAirOutChanged();
    partial void OnAllowTrackInlandSerChanging(bool value);
    partial void OnAllowTrackInlandSerChanged();
    partial void OnAllowTrackProjectSerChanging(bool value);
    partial void OnAllowTrackProjectSerChanged();
    partial void OnAllowTrackOtherSerChanging(bool value);
    partial void OnAllowTrackOtherSerChanged();
    partial void OnAllowApproRevenueChanging(bool value);
    partial void OnAllowApproRevenueChanged();
    partial void OnAllowQuotaOfficeChanging(bool value);
    partial void OnAllowQuotaOfficeChanged();
    partial void OnAllowSetSalesChanging(bool value);
    partial void OnAllowSetSalesChanged();
    partial void OnAllowQuotaDeptChanging(bool value);
    partial void OnAllowQuotaDeptChanged();
    partial void OnAllowSettingSystemChanging(bool value);
    partial void OnAllowSettingSystemChanged();
    partial void OnAllowUpdateAgentChanging(bool value);
    partial void OnAllowUpdateAgentChanged();
    partial void OnAllowUpdatePartnerChanging(bool value);
    partial void OnAllowUpdatePartnerChanged();
    partial void OnAllowSeaPortChanging(bool value);
    partial void OnAllowSeaPortChanged();
    partial void OnAllowAirPortChanging(bool value);
    partial void OnAllowAirPortChanged();
    partial void OnAllowCustomerChanging(bool value);
    partial void OnAllowCustomerChanged();
    partial void OnAllowTradingChanging(bool value);
    partial void OnAllowTradingChanged();
    partial void OnAllowApprovedStockCardChanging(bool value);
    partial void OnAllowApprovedStockCardChanged();
    partial void OnAllowFreightChanging(bool value);
    partial void OnAllowFreightChanged();
    partial void OnAllowDataTradingChanging(bool value);
    partial void OnAllowDataTradingChanged();
    partial void OnAllowInforEditChanging(bool value);
    partial void OnAllowInforEditChanged();
    partial void OnAllowInfoAllChanging(bool value);
    partial void OnAllowInfoAllChanged();
    partial void OnAllowRegulationEditChanging(bool value);
    partial void OnAllowRegulationEditChanged();
    partial void OnAllowRegulationApprovalChanging(bool value);
    partial void OnAllowRegulationApprovalChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCheckingRevenueChanging(bool value);
    partial void OnCheckingRevenueChanged();
    partial void OnAllowFollowDeptChanging(bool value);
    partial void OnAllowFollowDeptChanged();
    partial void OnAllowEditReportChanging(bool value);
    partial void OnAllowEditReportChanged();
    partial void OnDeptFollowIdsChanging(string value);
    partial void OnDeptFollowIdsChanged();
    partial void OnEmailPasswordChanging(string value);
    partial void OnEmailPasswordChanged();
    partial void OnEmailNameDisplayChanging(string value);
    partial void OnEmailNameDisplayChanged();
    #endregion
		
		public User()
		{
			this._Agents = new EntitySet<Agent>(new Action<Agent>(this.attach_Agents), new Action<Agent>(this.detach_Agents));
			this._ControlCompanies = new EntitySet<ControlCompany>(new Action<ControlCompany>(this.attach_ControlCompanies), new Action<ControlCompany>(this.detach_ControlCompanies));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Customers1 = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers1), new Action<Customer>(this.detach_Customers1));
			this._Freights = new EntitySet<Freight>(new Action<Freight>(this.attach_Freights), new Action<Freight>(this.detach_Freights));
			this._MT72s = new EntitySet<MT72>(new Action<MT72>(this.attach_MT72s), new Action<MT72>(this.detach_MT72s));
			this._MT72s1 = new EntitySet<MT72>(new Action<MT72>(this.attach_MT72s1), new Action<MT72>(this.detach_MT72s1));
			this._MT72s2 = new EntitySet<MT72>(new Action<MT72>(this.attach_MT72s2), new Action<MT72>(this.detach_MT72s2));
			this._MT72s3 = new EntitySet<MT72>(new Action<MT72>(this.attach_MT72s3), new Action<MT72>(this.detach_MT72s3));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Revenues = new EntitySet<Revenue>(new Action<Revenue>(this.attach_Revenues), new Action<Revenue>(this.detach_Revenues));
			this._SalePlans = new EntitySet<SalePlan>(new Action<SalePlan>(this.attach_SalePlans), new Action<SalePlan>(this.detach_SalePlans));
			this._Shipments = new EntitySet<Shipment>(new Action<Shipment>(this.attach_Shipments), new Action<Shipment>(this.detach_Shipments));
			this._MT81s = new EntitySet<MT81>(new Action<MT81>(this.attach_MT81s), new Action<MT81>(this.detach_MT81s));
			this._MT81s1 = new EntitySet<MT81>(new Action<MT81>(this.attach_MT81s1), new Action<MT81>(this.detach_MT81s1));
			this._MT81s2 = new EntitySet<MT81>(new Action<MT81>(this.attach_MT81s2), new Action<MT81>(this.detach_MT81s2));
			this._MT81s3 = new EntitySet<MT81>(new Action<MT81>(this.attach_MT81s3), new Action<MT81>(this.detach_MT81s3));
			this._Histories = new EntitySet<History>(new Action<History>(this.attach_Histories), new Action<History>(this.detach_Histories));
			this._UserGroups = new EntitySet<UserGroup>(new Action<UserGroup>(this.attach_UserGroups), new Action<UserGroup>(this.detach_UserGroups));
			this._ScfNews = new EntitySet<ScfNew>(new Action<ScfNew>(this.attach_ScfNews), new Action<ScfNew>(this.detach_ScfNews));
			this._ScfNews1 = new EntitySet<ScfNew>(new Action<ScfNew>(this.attach_ScfNews1), new Action<ScfNew>(this.detach_ScfNews1));
			this._ScfNews2 = new EntitySet<ScfNew>(new Action<ScfNew>(this.attach_ScfNews2), new Action<ScfNew>(this.detach_ScfNews2));
			this._CRMPriceQuotations = new EntitySet<CRMPriceQuotation>(new Action<CRMPriceQuotation>(this.attach_CRMPriceQuotations), new Action<CRMPriceQuotation>(this.detach_CRMPriceQuotations));
			this._CRMPriceQuotations1 = new EntitySet<CRMPriceQuotation>(new Action<CRMPriceQuotation>(this.attach_CRMPriceQuotations1), new Action<CRMPriceQuotation>(this.detach_CRMPriceQuotations1));
			this._CRMCusDocuments = new EntitySet<CRMCusDocument>(new Action<CRMCusDocument>(this.attach_CRMCusDocuments), new Action<CRMCusDocument>(this.detach_CRMCusDocuments));
			this._CRMCusDocuments1 = new EntitySet<CRMCusDocument>(new Action<CRMCusDocument>(this.attach_CRMCusDocuments1), new Action<CRMCusDocument>(this.detach_CRMCusDocuments1));
			this._CRMPLanSales = new EntitySet<CRMPLanSale>(new Action<CRMPLanSale>(this.attach_CRMPLanSales), new Action<CRMPLanSale>(this.detach_CRMPLanSales));
			this._CRMCustomers = new EntitySet<CRMCustomer>(new Action<CRMCustomer>(this.attach_CRMCustomers), new Action<CRMCustomer>(this.detach_CRMCustomers));
			this._CRMCustomers1 = new EntitySet<CRMCustomer>(new Action<CRMCustomer>(this.attach_CRMCustomers1), new Action<CRMCustomer>(this.detach_CRMCustomers1));
			this._CRMFollowCusUsers = new EntitySet<CRMFollowCusUser>(new Action<CRMFollowCusUser>(this.attach_CRMFollowCusUsers), new Action<CRMFollowCusUser>(this.detach_CRMFollowCusUsers));
			this._CRMFollowCusUsers1 = new EntitySet<CRMFollowCusUser>(new Action<CRMFollowCusUser>(this.attach_CRMFollowCusUsers1), new Action<CRMFollowCusUser>(this.detach_CRMFollowCusUsers1));
			this._CRMFollowEventUsers = new EntitySet<CRMFollowEventUser>(new Action<CRMFollowEventUser>(this.attach_CRMFollowEventUsers), new Action<CRMFollowEventUser>(this.detach_CRMFollowEventUsers));
			this._CRMFollowEventUsers1 = new EntitySet<CRMFollowEventUser>(new Action<CRMFollowEventUser>(this.attach_CRMFollowEventUsers1), new Action<CRMFollowEventUser>(this.detach_CRMFollowEventUsers1));
			this._CRMFollowEventUsers2 = new EntitySet<CRMFollowEventUser>(new Action<CRMFollowEventUser>(this.attach_CRMFollowEventUsers2), new Action<CRMFollowEventUser>(this.detach_CRMFollowEventUsers2));
			this._CRMVisits = new EntitySet<CRMVisit>(new Action<CRMVisit>(this.attach_CRMVisits), new Action<CRMVisit>(this.detach_CRMVisits));
			this._CRMVisits1 = new EntitySet<CRMVisit>(new Action<CRMVisit>(this.attach_CRMVisits1), new Action<CRMVisit>(this.detach_CRMVisits1));
			this._Company = default(EntityRef<Company>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(100)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeEmployer", DbType="NVarChar(50)")]
		public string CodeEmployer
		{
			get
			{
				return this._CodeEmployer;
			}
			set
			{
				if ((this._CodeEmployer != value))
				{
					this.OnCodeEmployerChanging(value);
					this.SendPropertyChanging();
					this._CodeEmployer = value;
					this.SendPropertyChanged("CodeEmployer");
					this.OnCodeEmployerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptId", DbType="BigInt")]
		public System.Nullable<long> DeptId
		{
			get
			{
				return this._DeptId;
			}
			set
			{
				if ((this._DeptId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeptIdChanging(value);
					this.SendPropertyChanging();
					this._DeptId = value;
					this.SendPropertyChanged("DeptId");
					this.OnDeptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComId", DbType="BigInt")]
		public System.Nullable<long> ComId
		{
			get
			{
				return this._ComId;
			}
			set
			{
				if ((this._ComId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComIdChanging(value);
					this.SendPropertyChanging();
					this._ComId = value;
					this.SendPropertyChanged("ComId");
					this.OnComIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorLevel", DbType="Int")]
		public System.Nullable<int> DirectorLevel
		{
			get
			{
				return this._DirectorLevel;
			}
			set
			{
				if ((this._DirectorLevel != value))
				{
					this.OnDirectorLevelChanging(value);
					this.SendPropertyChanging();
					this._DirectorLevel = value;
					this.SendPropertyChanged("DirectorLevel");
					this.OnDirectorLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetPass", DbType="Bit")]
		public System.Nullable<bool> SetPass
		{
			get
			{
				return this._SetPass;
			}
			set
			{
				if ((this._SetPass != value))
				{
					this.OnSetPassChanging(value);
					this.SendPropertyChanging();
					this._SetPass = value;
					this.SendPropertyChanged("SetPass");
					this.OnSetPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowUpdateSeaRate", DbType="Bit")]
		public bool AllowUpdateSeaRate
		{
			get
			{
				return this._AllowUpdateSeaRate;
			}
			set
			{
				if ((this._AllowUpdateSeaRate != value))
				{
					this.OnAllowUpdateSeaRateChanging(value);
					this.SendPropertyChanging();
					this._AllowUpdateSeaRate = value;
					this.SendPropertyChanged("AllowUpdateSeaRate");
					this.OnAllowUpdateSeaRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowUpdateAirRate", DbType="Bit")]
		public bool AllowUpdateAirRate
		{
			get
			{
				return this._AllowUpdateAirRate;
			}
			set
			{
				if ((this._AllowUpdateAirRate != value))
				{
					this.OnAllowUpdateAirRateChanging(value);
					this.SendPropertyChanging();
					this._AllowUpdateAirRate = value;
					this.SendPropertyChanged("AllowUpdateAirRate");
					this.OnAllowUpdateAirRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowTrackSeaIn", DbType="Bit")]
		public bool AllowTrackSeaIn
		{
			get
			{
				return this._AllowTrackSeaIn;
			}
			set
			{
				if ((this._AllowTrackSeaIn != value))
				{
					this.OnAllowTrackSeaInChanging(value);
					this.SendPropertyChanging();
					this._AllowTrackSeaIn = value;
					this.SendPropertyChanged("AllowTrackSeaIn");
					this.OnAllowTrackSeaInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowTrackSeaOut", DbType="Bit")]
		public bool AllowTrackSeaOut
		{
			get
			{
				return this._AllowTrackSeaOut;
			}
			set
			{
				if ((this._AllowTrackSeaOut != value))
				{
					this.OnAllowTrackSeaOutChanging(value);
					this.SendPropertyChanging();
					this._AllowTrackSeaOut = value;
					this.SendPropertyChanged("AllowTrackSeaOut");
					this.OnAllowTrackSeaOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowTrackAirIn", DbType="Bit")]
		public bool AllowTrackAirIn
		{
			get
			{
				return this._AllowTrackAirIn;
			}
			set
			{
				if ((this._AllowTrackAirIn != value))
				{
					this.OnAllowTrackAirInChanging(value);
					this.SendPropertyChanging();
					this._AllowTrackAirIn = value;
					this.SendPropertyChanged("AllowTrackAirIn");
					this.OnAllowTrackAirInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowTrackAirOut", DbType="Bit")]
		public bool AllowTrackAirOut
		{
			get
			{
				return this._AllowTrackAirOut;
			}
			set
			{
				if ((this._AllowTrackAirOut != value))
				{
					this.OnAllowTrackAirOutChanging(value);
					this.SendPropertyChanging();
					this._AllowTrackAirOut = value;
					this.SendPropertyChanged("AllowTrackAirOut");
					this.OnAllowTrackAirOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowTrackInlandSer", DbType="Bit")]
		public bool AllowTrackInlandSer
		{
			get
			{
				return this._AllowTrackInlandSer;
			}
			set
			{
				if ((this._AllowTrackInlandSer != value))
				{
					this.OnAllowTrackInlandSerChanging(value);
					this.SendPropertyChanging();
					this._AllowTrackInlandSer = value;
					this.SendPropertyChanged("AllowTrackInlandSer");
					this.OnAllowTrackInlandSerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowTrackProjectSer", DbType="Bit")]
		public bool AllowTrackProjectSer
		{
			get
			{
				return this._AllowTrackProjectSer;
			}
			set
			{
				if ((this._AllowTrackProjectSer != value))
				{
					this.OnAllowTrackProjectSerChanging(value);
					this.SendPropertyChanging();
					this._AllowTrackProjectSer = value;
					this.SendPropertyChanged("AllowTrackProjectSer");
					this.OnAllowTrackProjectSerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowTrackOtherSer", DbType="Bit")]
		public bool AllowTrackOtherSer
		{
			get
			{
				return this._AllowTrackOtherSer;
			}
			set
			{
				if ((this._AllowTrackOtherSer != value))
				{
					this.OnAllowTrackOtherSerChanging(value);
					this.SendPropertyChanging();
					this._AllowTrackOtherSer = value;
					this.SendPropertyChanged("AllowTrackOtherSer");
					this.OnAllowTrackOtherSerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowApproRevenue", DbType="Bit")]
		public bool AllowApproRevenue
		{
			get
			{
				return this._AllowApproRevenue;
			}
			set
			{
				if ((this._AllowApproRevenue != value))
				{
					this.OnAllowApproRevenueChanging(value);
					this.SendPropertyChanging();
					this._AllowApproRevenue = value;
					this.SendPropertyChanged("AllowApproRevenue");
					this.OnAllowApproRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowQuotaOffice", DbType="Bit")]
		public bool AllowQuotaOffice
		{
			get
			{
				return this._AllowQuotaOffice;
			}
			set
			{
				if ((this._AllowQuotaOffice != value))
				{
					this.OnAllowQuotaOfficeChanging(value);
					this.SendPropertyChanging();
					this._AllowQuotaOffice = value;
					this.SendPropertyChanged("AllowQuotaOffice");
					this.OnAllowQuotaOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSetSales", DbType="Bit")]
		public bool AllowSetSales
		{
			get
			{
				return this._AllowSetSales;
			}
			set
			{
				if ((this._AllowSetSales != value))
				{
					this.OnAllowSetSalesChanging(value);
					this.SendPropertyChanging();
					this._AllowSetSales = value;
					this.SendPropertyChanged("AllowSetSales");
					this.OnAllowSetSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowQuotaDept", DbType="Bit")]
		public bool AllowQuotaDept
		{
			get
			{
				return this._AllowQuotaDept;
			}
			set
			{
				if ((this._AllowQuotaDept != value))
				{
					this.OnAllowQuotaDeptChanging(value);
					this.SendPropertyChanging();
					this._AllowQuotaDept = value;
					this.SendPropertyChanged("AllowQuotaDept");
					this.OnAllowQuotaDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSettingSystem", DbType="Bit")]
		public bool AllowSettingSystem
		{
			get
			{
				return this._AllowSettingSystem;
			}
			set
			{
				if ((this._AllowSettingSystem != value))
				{
					this.OnAllowSettingSystemChanging(value);
					this.SendPropertyChanging();
					this._AllowSettingSystem = value;
					this.SendPropertyChanged("AllowSettingSystem");
					this.OnAllowSettingSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowUpdateAgent", DbType="Bit")]
		public bool AllowUpdateAgent
		{
			get
			{
				return this._AllowUpdateAgent;
			}
			set
			{
				if ((this._AllowUpdateAgent != value))
				{
					this.OnAllowUpdateAgentChanging(value);
					this.SendPropertyChanging();
					this._AllowUpdateAgent = value;
					this.SendPropertyChanged("AllowUpdateAgent");
					this.OnAllowUpdateAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowUpdatePartner", DbType="Bit")]
		public bool AllowUpdatePartner
		{
			get
			{
				return this._AllowUpdatePartner;
			}
			set
			{
				if ((this._AllowUpdatePartner != value))
				{
					this.OnAllowUpdatePartnerChanging(value);
					this.SendPropertyChanging();
					this._AllowUpdatePartner = value;
					this.SendPropertyChanged("AllowUpdatePartner");
					this.OnAllowUpdatePartnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSeaPort", DbType="Bit")]
		public bool AllowSeaPort
		{
			get
			{
				return this._AllowSeaPort;
			}
			set
			{
				if ((this._AllowSeaPort != value))
				{
					this.OnAllowSeaPortChanging(value);
					this.SendPropertyChanging();
					this._AllowSeaPort = value;
					this.SendPropertyChanged("AllowSeaPort");
					this.OnAllowSeaPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAirPort", DbType="Bit")]
		public bool AllowAirPort
		{
			get
			{
				return this._AllowAirPort;
			}
			set
			{
				if ((this._AllowAirPort != value))
				{
					this.OnAllowAirPortChanging(value);
					this.SendPropertyChanging();
					this._AllowAirPort = value;
					this.SendPropertyChanged("AllowAirPort");
					this.OnAllowAirPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowCustomer", DbType="Bit")]
		public bool AllowCustomer
		{
			get
			{
				return this._AllowCustomer;
			}
			set
			{
				if ((this._AllowCustomer != value))
				{
					this.OnAllowCustomerChanging(value);
					this.SendPropertyChanging();
					this._AllowCustomer = value;
					this.SendPropertyChanged("AllowCustomer");
					this.OnAllowCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowTrading", DbType="Bit")]
		public bool AllowTrading
		{
			get
			{
				return this._AllowTrading;
			}
			set
			{
				if ((this._AllowTrading != value))
				{
					this.OnAllowTradingChanging(value);
					this.SendPropertyChanging();
					this._AllowTrading = value;
					this.SendPropertyChanged("AllowTrading");
					this.OnAllowTradingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowApprovedStockCard", DbType="Bit")]
		public bool AllowApprovedStockCard
		{
			get
			{
				return this._AllowApprovedStockCard;
			}
			set
			{
				if ((this._AllowApprovedStockCard != value))
				{
					this.OnAllowApprovedStockCardChanging(value);
					this.SendPropertyChanging();
					this._AllowApprovedStockCard = value;
					this.SendPropertyChanged("AllowApprovedStockCard");
					this.OnAllowApprovedStockCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowFreight", DbType="Bit")]
		public bool AllowFreight
		{
			get
			{
				return this._AllowFreight;
			}
			set
			{
				if ((this._AllowFreight != value))
				{
					this.OnAllowFreightChanging(value);
					this.SendPropertyChanging();
					this._AllowFreight = value;
					this.SendPropertyChanged("AllowFreight");
					this.OnAllowFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowDataTrading", DbType="Bit")]
		public bool AllowDataTrading
		{
			get
			{
				return this._AllowDataTrading;
			}
			set
			{
				if ((this._AllowDataTrading != value))
				{
					this.OnAllowDataTradingChanging(value);
					this.SendPropertyChanging();
					this._AllowDataTrading = value;
					this.SendPropertyChanged("AllowDataTrading");
					this.OnAllowDataTradingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowInforEdit", DbType="Bit")]
		public bool AllowInforEdit
		{
			get
			{
				return this._AllowInforEdit;
			}
			set
			{
				if ((this._AllowInforEdit != value))
				{
					this.OnAllowInforEditChanging(value);
					this.SendPropertyChanging();
					this._AllowInforEdit = value;
					this.SendPropertyChanged("AllowInforEdit");
					this.OnAllowInforEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowInfoAll", DbType="bit")]
		public bool AllowInfoAll
		{
			get
			{
				return this._AllowInfoAll;
			}
			set
			{
				if ((this._AllowInfoAll != value))
				{
					this.OnAllowInfoAllChanging(value);
					this.SendPropertyChanging();
					this._AllowInfoAll = value;
					this.SendPropertyChanged("AllowInfoAll");
					this.OnAllowInfoAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowRegulationEdit", DbType="Bit")]
		public bool AllowRegulationEdit
		{
			get
			{
				return this._AllowRegulationEdit;
			}
			set
			{
				if ((this._AllowRegulationEdit != value))
				{
					this.OnAllowRegulationEditChanging(value);
					this.SendPropertyChanging();
					this._AllowRegulationEdit = value;
					this.SendPropertyChanged("AllowRegulationEdit");
					this.OnAllowRegulationEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowRegulationApproval", DbType="Bit")]
		public bool AllowRegulationApproval
		{
			get
			{
				return this._AllowRegulationApproval;
			}
			set
			{
				if ((this._AllowRegulationApproval != value))
				{
					this.OnAllowRegulationApprovalChanging(value);
					this.SendPropertyChanging();
					this._AllowRegulationApproval = value;
					this.SendPropertyChanged("AllowRegulationApproval");
					this.OnAllowRegulationApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActve", DbType="Bit")]
		public bool IsActive
		{
			get
			{
				return this._IsActve;
			}
			set
			{
				if ((this._IsActve != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActve = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingRevenue", DbType="Bit")]
		public bool CheckingRevenue
		{
			get
			{
				return this._CheckingRevenue;
			}
			set
			{
				if ((this._CheckingRevenue != value))
				{
					this.OnCheckingRevenueChanging(value);
					this.SendPropertyChanging();
					this._CheckingRevenue = value;
					this.SendPropertyChanged("CheckingRevenue");
					this.OnCheckingRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowFollowDept", DbType="Bit")]
		public bool AllowFollowDept
		{
			get
			{
				return this._AllowFollowDept;
			}
			set
			{
				if ((this._AllowFollowDept != value))
				{
					this.OnAllowFollowDeptChanging(value);
					this.SendPropertyChanging();
					this._AllowFollowDept = value;
					this.SendPropertyChanged("AllowFollowDept");
					this.OnAllowFollowDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowEditReport", DbType="Bit")]
		public bool AllowEditReport
		{
			get
			{
				return this._AllowEditReport;
			}
			set
			{
				if ((this._AllowEditReport != value))
				{
					this.OnAllowEditReportChanging(value);
					this.SendPropertyChanging();
					this._AllowEditReport = value;
					this.SendPropertyChanged("AllowEditReport");
					this.OnAllowEditReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptFollowIds", DbType="Varchar(5000)")]
		public string DeptFollowIds
		{
			get
			{
				return this._DeptFollowIds;
			}
			set
			{
				if ((this._DeptFollowIds != value))
				{
					this.OnDeptFollowIdsChanging(value);
					this.SendPropertyChanging();
					this._DeptFollowIds = value;
					this.SendPropertyChanged("DeptFollowIds");
					this.OnDeptFollowIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailPassword", DbType="NVarchar(200)")]
		public string EmailPassword
		{
			get
			{
				return this._EmailPassword;
			}
			set
			{
				if ((this._EmailPassword != value))
				{
					this.OnEmailPasswordChanging(value);
					this.SendPropertyChanging();
					this._EmailPassword = value;
					this.SendPropertyChanged("EmailPassword");
					this.OnEmailPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNameDisplay", DbType="NVarchar(2500)")]
		public string EmailNameDisplay
		{
			get
			{
				return this._EmailNameDisplay;
			}
			set
			{
				if ((this._EmailNameDisplay != value))
				{
					this.OnEmailNameDisplayChanging(value);
					this.SendPropertyChanging();
					this._EmailNameDisplay = value;
					this.SendPropertyChanged("EmailNameDisplay");
					this.OnEmailNameDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Agent", Storage="_Agents", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Agent> Agents
		{
			get
			{
				return this._Agents;
			}
			set
			{
				this._Agents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ControlCompany", Storage="_ControlCompanies", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<ControlCompany> ControlCompanies
		{
			get
			{
				return this._ControlCompanies;
			}
			set
			{
				this._ControlCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Customer", Storage="_Customers", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Customer1", Storage="_Customers1", ThisKey="Id", OtherKey="MovedBy")]
		public EntitySet<Customer> Customers1
		{
			get
			{
				return this._Customers1;
			}
			set
			{
				this._Customers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Freight", Storage="_Freights", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Freight> Freights
		{
			get
			{
				return this._Freights;
			}
			set
			{
				this._Freights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT72", Storage="_MT72s", ThisKey="Id", OtherKey="CreateBy")]
		public EntitySet<MT72> MT72s
		{
			get
			{
				return this._MT72s;
			}
			set
			{
				this._MT72s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT721", Storage="_MT72s1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<MT72> MT72s1
		{
			get
			{
				return this._MT72s1;
			}
			set
			{
				this._MT72s1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT722", Storage="_MT72s2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<MT72> MT72s2
		{
			get
			{
				return this._MT72s2;
			}
			set
			{
				this._MT72s2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT723", Storage="_MT72s3", ThisKey="Id", OtherKey="SubmittedBy")]
		public EntitySet<MT72> MT72s3
		{
			get
			{
				return this._MT72s3;
			}
			set
			{
				this._MT72s3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Product", Storage="_Products", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Revenue", Storage="_Revenues", ThisKey="Id", OtherKey="ApproveId")]
		public EntitySet<Revenue> Revenues
		{
			get
			{
				return this._Revenues;
			}
			set
			{
				this._Revenues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SalePlan", Storage="_SalePlans", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<SalePlan> SalePlans
		{
			get
			{
				return this._SalePlans;
			}
			set
			{
				this._SalePlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Shipment", Storage="_Shipments", ThisKey="Id", OtherKey="SaleId")]
		public EntitySet<Shipment> Shipments
		{
			get
			{
				return this._Shipments;
			}
			set
			{
				this._Shipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT81", Storage="_MT81s", ThisKey="Id", OtherKey="CreateBy")]
		public EntitySet<MT81> MT81s
		{
			get
			{
				return this._MT81s;
			}
			set
			{
				this._MT81s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT811", Storage="_MT81s1", ThisKey="Id", OtherKey="SubmittedBy")]
		public EntitySet<MT81> MT81s1
		{
			get
			{
				return this._MT81s1;
			}
			set
			{
				this._MT81s1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT812", Storage="_MT81s2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<MT81> MT81s2
		{
			get
			{
				return this._MT81s2;
			}
			set
			{
				this._MT81s2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MT813", Storage="_MT81s3", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<MT81> MT81s3
		{
			get
			{
				return this._MT81s3;
			}
			set
			{
				this._MT81s3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_History", Storage="_Histories", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<History> Histories
		{
			get
			{
				return this._Histories;
			}
			set
			{
				this._Histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserGroup", Storage="_UserGroups", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserGroup> UserGroups
		{
			get
			{
				return this._UserGroups;
			}
			set
			{
				this._UserGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ScfNew", Storage="_ScfNews", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<ScfNew> ScfNews
		{
			get
			{
				return this._ScfNews;
			}
			set
			{
				this._ScfNews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ScfNew1", Storage="_ScfNews1", ThisKey="Id", OtherKey="ModifiedBy")]
		public EntitySet<ScfNew> ScfNews1
		{
			get
			{
				return this._ScfNews1;
			}
			set
			{
				this._ScfNews1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ScfNew2", Storage="_ScfNews2", ThisKey="Id", OtherKey="Appvovedby")]
		public EntitySet<ScfNew> ScfNews2
		{
			get
			{
				return this._ScfNews2;
			}
			set
			{
				this._ScfNews2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMPriceQuotation", Storage="_CRMPriceQuotations", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<CRMPriceQuotation> CRMPriceQuotations
		{
			get
			{
				return this._CRMPriceQuotations;
			}
			set
			{
				this._CRMPriceQuotations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMPriceQuotation1", Storage="_CRMPriceQuotations1", ThisKey="Id", OtherKey="ModifiedById")]
		public EntitySet<CRMPriceQuotation> CRMPriceQuotations1
		{
			get
			{
				return this._CRMPriceQuotations1;
			}
			set
			{
				this._CRMPriceQuotations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMCusDocument", Storage="_CRMCusDocuments", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<CRMCusDocument> CRMCusDocuments
		{
			get
			{
				return this._CRMCusDocuments;
			}
			set
			{
				this._CRMCusDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMCusDocument1", Storage="_CRMCusDocuments1", ThisKey="Id", OtherKey="ModifiedById")]
		public EntitySet<CRMCusDocument> CRMCusDocuments1
		{
			get
			{
				return this._CRMCusDocuments1;
			}
			set
			{
				this._CRMCusDocuments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMPLanSale", Storage="_CRMPLanSales", ThisKey="Id", OtherKey="SalesId")]
		public EntitySet<CRMPLanSale> CRMPLanSales
		{
			get
			{
				return this._CRMPLanSales;
			}
			set
			{
				this._CRMPLanSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMCustomer", Storage="_CRMCustomers", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<CRMCustomer> CRMCustomers
		{
			get
			{
				return this._CRMCustomers;
			}
			set
			{
				this._CRMCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMCustomer1", Storage="_CRMCustomers1", ThisKey="Id", OtherKey="ModifyById")]
		public EntitySet<CRMCustomer> CRMCustomers1
		{
			get
			{
				return this._CRMCustomers1;
			}
			set
			{
				this._CRMCustomers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMFollowCusUser", Storage="_CRMFollowCusUsers", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<CRMFollowCusUser> CRMFollowCusUsers
		{
			get
			{
				return this._CRMFollowCusUsers;
			}
			set
			{
				this._CRMFollowCusUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMFollowCusUser1", Storage="_CRMFollowCusUsers1", ThisKey="Id", OtherKey="LockById")]
		public EntitySet<CRMFollowCusUser> CRMFollowCusUsers1
		{
			get
			{
				return this._CRMFollowCusUsers1;
			}
			set
			{
				this._CRMFollowCusUsers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMFollowEventUser", Storage="_CRMFollowEventUsers", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<CRMFollowEventUser> CRMFollowEventUsers
		{
			get
			{
				return this._CRMFollowEventUsers;
			}
			set
			{
				this._CRMFollowEventUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMFollowEventUser1", Storage="_CRMFollowEventUsers1", ThisKey="Id", OtherKey="AddById")]
		public EntitySet<CRMFollowEventUser> CRMFollowEventUsers1
		{
			get
			{
				return this._CRMFollowEventUsers1;
			}
			set
			{
				this._CRMFollowEventUsers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMFollowEventUser2", Storage="_CRMFollowEventUsers2", ThisKey="Id", OtherKey="LockById")]
		public EntitySet<CRMFollowEventUser> CRMFollowEventUsers2
		{
			get
			{
				return this._CRMFollowEventUsers2;
			}
			set
			{
				this._CRMFollowEventUsers2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMVisit", Storage="_CRMVisits", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<CRMVisit> CRMVisits
		{
			get
			{
				return this._CRMVisits;
			}
			set
			{
				this._CRMVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMVisit1", Storage="_CRMVisits1", ThisKey="Id", OtherKey="ModifiedById")]
		public EntitySet<CRMVisit> CRMVisits1
		{
			get
			{
				return this._CRMVisits1;
			}
			set
			{
				this._CRMVisits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_User", Storage="_Company", ThisKey="ComId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._ComId = value.Id;
					}
					else
					{
						this._ComId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_User", Storage="_Department", ThisKey="DeptId", OtherKey="Id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._DeptId = value.Id;
					}
					else
					{
						this._DeptId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agents(Agent entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Agents(Agent entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ControlCompanies(ControlCompany entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ControlCompanies(ControlCompany entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Customers1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Customers1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_MT72s(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_MT72s(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_MT72s1(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_MT72s1(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_MT72s2(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_MT72s2(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_MT72s3(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.User3 = this;
		}
		
		private void detach_MT72s3(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.User3 = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Revenues(Revenue entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Revenues(Revenue entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SalePlans(SalePlan entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SalePlans(SalePlan entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_MT81s(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_MT81s(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_MT81s1(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_MT81s1(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_MT81s2(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_MT81s2(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_MT81s3(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.User3 = this;
		}
		
		private void detach_MT81s3(MT81 entity)
		{
			this.SendPropertyChanging();
			entity.User3 = null;
		}
		
		private void attach_Histories(History entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Histories(History entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ScfNews(ScfNew entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ScfNews(ScfNew entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ScfNews1(ScfNew entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_ScfNews1(ScfNew entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_ScfNews2(ScfNew entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_ScfNews2(ScfNew entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_CRMPriceQuotations(CRMPriceQuotation entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CRMPriceQuotations(CRMPriceQuotation entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CRMPriceQuotations1(CRMPriceQuotation entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_CRMPriceQuotations1(CRMPriceQuotation entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_CRMCusDocuments(CRMCusDocument entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CRMCusDocuments(CRMCusDocument entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CRMCusDocuments1(CRMCusDocument entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_CRMCusDocuments1(CRMCusDocument entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_CRMPLanSales(CRMPLanSale entity)
		{
			this.SendPropertyChanging();
			entity.Sales = this;
		}
		
		private void detach_CRMPLanSales(CRMPLanSale entity)
		{
			this.SendPropertyChanging();
			entity.Sales = null;
		}
		
		private void attach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CRMCustomers1(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_CRMCustomers1(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_CRMFollowCusUsers(CRMFollowCusUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CRMFollowCusUsers(CRMFollowCusUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CRMFollowCusUsers1(CRMFollowCusUser entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_CRMFollowCusUsers1(CRMFollowCusUser entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_CRMFollowEventUsers(CRMFollowEventUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CRMFollowEventUsers(CRMFollowEventUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CRMFollowEventUsers1(CRMFollowEventUser entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_CRMFollowEventUsers1(CRMFollowEventUser entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_CRMFollowEventUsers2(CRMFollowEventUser entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_CRMFollowEventUsers2(CRMFollowEventUser entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_CRMVisits(CRMVisit entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CRMVisits(CRMVisit entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CRMVisits1(CRMVisit entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_CRMVisits1(CRMVisit entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockCard")]
	public partial class StockCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _VoucherID;
		
		private int _RowID;
		
		private System.Nullable<int> _UnitID;
		
		private System.Nullable<int> _VoucherCode;
		
		private System.Nullable<bool> _nxt;
		
		private System.Nullable<bool> _ct_dc;
		
		private System.Nullable<bool> _pn_gia_tb;
		
		private System.Nullable<bool> _px_gia_dd;
		
		private System.Nullable<System.DateTime> _VoucherDate;
		
		private string _VoucherNo;
		
		private System.Nullable<long> _SupplierId;
		
		private System.Nullable<long> _CustomerId;
		
		private System.Nullable<int> _WarehouseID;
		
		private System.Nullable<int> _WarehouseIdTo;
		
		private string _Description;
		
		private System.Nullable<int> _SalesmanID;
		
		private System.Nullable<int> _CurencyId;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private System.Nullable<long> _ProductID;
		
		private System.Nullable<decimal> _sl_nhap;
		
		private System.Nullable<decimal> _sl_xuat;
		
		private System.Nullable<decimal> _gia_nt;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _tien_nhap;
		
		private System.Nullable<decimal> _tien_xuat;
		
		private System.Nullable<decimal> _gia2;
		
		private System.Nullable<decimal> _tien2;
		
		private System.Nullable<decimal> _ck;
		
		private System.Nullable<byte> _status;
		
		private System.Nullable<decimal> _Fee;
		
		private System.Nullable<decimal> _PriceReceive;
		
		private System.Nullable<decimal> _TT;
		
		private EntityRef<Warehouse> _Warehouse;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherIDChanging(long value);
    partial void OnVoucherIDChanged();
    partial void OnRowIDChanging(int value);
    partial void OnRowIDChanged();
    partial void OnUnitIDChanging(System.Nullable<int> value);
    partial void OnUnitIDChanged();
    partial void OnVoucherCodeChanging(System.Nullable<int> value);
    partial void OnVoucherCodeChanged();
    partial void OnnxtChanging(System.Nullable<bool> value);
    partial void OnnxtChanged();
    partial void Onct_dcChanging(System.Nullable<bool> value);
    partial void Onct_dcChanged();
    partial void Onpn_gia_tbChanging(System.Nullable<bool> value);
    partial void Onpn_gia_tbChanged();
    partial void Onpx_gia_ddChanging(System.Nullable<bool> value);
    partial void Onpx_gia_ddChanged();
    partial void OnVoucherDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVoucherDateChanged();
    partial void OnVoucherNoChanging(string value);
    partial void OnVoucherNoChanged();
    partial void OnSupplierIdChanging(System.Nullable<long> value);
    partial void OnSupplierIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<long> value);
    partial void OnCustomerIdChanged();
    partial void OnWarehouseIDChanging(System.Nullable<int> value);
    partial void OnWarehouseIDChanged();
    partial void OnWarehouseIdToChanging(System.Nullable<int> value);
    partial void OnWarehouseIdToChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSalesmanIDChanging(System.Nullable<int> value);
    partial void OnSalesmanIDChanged();
    partial void OnCurencyIdChanging(System.Nullable<int> value);
    partial void OnCurencyIdChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnProductIDChanging(System.Nullable<long> value);
    partial void OnProductIDChanged();
    partial void Onsl_nhapChanging(System.Nullable<decimal> value);
    partial void Onsl_nhapChanged();
    partial void Onsl_xuatChanging(System.Nullable<decimal> value);
    partial void Onsl_xuatChanged();
    partial void Ongia_ntChanging(System.Nullable<decimal> value);
    partial void Ongia_ntChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void Ontien_nhapChanging(System.Nullable<decimal> value);
    partial void Ontien_nhapChanged();
    partial void Ontien_xuatChanging(System.Nullable<decimal> value);
    partial void Ontien_xuatChanged();
    partial void Ongia2Changing(System.Nullable<decimal> value);
    partial void Ongia2Changed();
    partial void Ontien2Changing(System.Nullable<decimal> value);
    partial void Ontien2Changed();
    partial void OnckChanging(System.Nullable<decimal> value);
    partial void OnckChanged();
    partial void OnstatusChanging(System.Nullable<byte> value);
    partial void OnstatusChanged();
    partial void OnFeeChanging(System.Nullable<decimal> value);
    partial void OnFeeChanged();
    partial void OnPriceReceiveChanging(System.Nullable<decimal> value);
    partial void OnPriceReceiveChanged();
    partial void OnTTChanging(System.Nullable<decimal> value);
    partial void OnTTChanged();
    #endregion
		
		public StockCard()
		{
			this._Warehouse = default(EntityRef<Warehouse>);
			this._Product = default(EntityRef<Product>);
			this._Supplier = default(EntityRef<Supplier>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long VoucherID
		{
			get
			{
				return this._VoucherID;
			}
			set
			{
				if ((this._VoucherID != value))
				{
					this.OnVoucherIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherID = value;
					this.SendPropertyChanged("VoucherID");
					this.OnVoucherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RowID
		{
			get
			{
				return this._RowID;
			}
			set
			{
				if ((this._RowID != value))
				{
					this.OnRowIDChanging(value);
					this.SendPropertyChanging();
					this._RowID = value;
					this.SendPropertyChanged("RowID");
					this.OnRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int")]
		public System.Nullable<int> UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCode", DbType="Int")]
		public System.Nullable<int> VoucherCode
		{
			get
			{
				return this._VoucherCode;
			}
			set
			{
				if ((this._VoucherCode != value))
				{
					this.OnVoucherCodeChanging(value);
					this.SendPropertyChanging();
					this._VoucherCode = value;
					this.SendPropertyChanged("VoucherCode");
					this.OnVoucherCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nxt", DbType="Bit")]
		public System.Nullable<bool> nxt
		{
			get
			{
				return this._nxt;
			}
			set
			{
				if ((this._nxt != value))
				{
					this.OnnxtChanging(value);
					this.SendPropertyChanging();
					this._nxt = value;
					this.SendPropertyChanged("nxt");
					this.OnnxtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ct_dc", DbType="Bit")]
		public System.Nullable<bool> ct_dc
		{
			get
			{
				return this._ct_dc;
			}
			set
			{
				if ((this._ct_dc != value))
				{
					this.Onct_dcChanging(value);
					this.SendPropertyChanging();
					this._ct_dc = value;
					this.SendPropertyChanged("ct_dc");
					this.Onct_dcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn_gia_tb", DbType="Bit")]
		public System.Nullable<bool> pn_gia_tb
		{
			get
			{
				return this._pn_gia_tb;
			}
			set
			{
				if ((this._pn_gia_tb != value))
				{
					this.Onpn_gia_tbChanging(value);
					this.SendPropertyChanging();
					this._pn_gia_tb = value;
					this.SendPropertyChanged("pn_gia_tb");
					this.Onpn_gia_tbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_px_gia_dd", DbType="Bit")]
		public System.Nullable<bool> px_gia_dd
		{
			get
			{
				return this._px_gia_dd;
			}
			set
			{
				if ((this._px_gia_dd != value))
				{
					this.Onpx_gia_ddChanging(value);
					this.SendPropertyChanging();
					this._px_gia_dd = value;
					this.SendPropertyChanged("px_gia_dd");
					this.Onpx_gia_ddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherDate", DbType="Date")]
		public System.Nullable<System.DateTime> VoucherDate
		{
			get
			{
				return this._VoucherDate;
			}
			set
			{
				if ((this._VoucherDate != value))
				{
					this.OnVoucherDateChanging(value);
					this.SendPropertyChanging();
					this._VoucherDate = value;
					this.SendPropertyChanged("VoucherDate");
					this.OnVoucherDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherNo", DbType="Char(12)")]
		public string VoucherNo
		{
			get
			{
				return this._VoucherNo;
			}
			set
			{
				if ((this._VoucherNo != value))
				{
					this.OnVoucherNoChanging(value);
					this.SendPropertyChanging();
					this._VoucherNo = value;
					this.SendPropertyChanged("VoucherNo");
					this.OnVoucherNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="BigInt")]
		public System.Nullable<long> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="BigInt")]
		public System.Nullable<long> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseID", DbType="Int")]
		public System.Nullable<int> WarehouseID
		{
			get
			{
				return this._WarehouseID;
			}
			set
			{
				if ((this._WarehouseID != value))
				{
					if (this._Warehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseID = value;
					this.SendPropertyChanged("WarehouseID");
					this.OnWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseIdTo", DbType="Int")]
		public System.Nullable<int> WarehouseIdTo
		{
			get
			{
				return this._WarehouseIdTo;
			}
			set
			{
				if ((this._WarehouseIdTo != value))
				{
					this.OnWarehouseIdToChanging(value);
					this.SendPropertyChanging();
					this._WarehouseIdTo = value;
					this.SendPropertyChanged("WarehouseIdTo");
					this.OnWarehouseIdToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesmanID", DbType="Int")]
		public System.Nullable<int> SalesmanID
		{
			get
			{
				return this._SalesmanID;
			}
			set
			{
				if ((this._SalesmanID != value))
				{
					this.OnSalesmanIDChanging(value);
					this.SendPropertyChanging();
					this._SalesmanID = value;
					this.SendPropertyChanged("SalesmanID");
					this.OnSalesmanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurencyId", DbType="Int")]
		public System.Nullable<int> CurencyId
		{
			get
			{
				return this._CurencyId;
			}
			set
			{
				if ((this._CurencyId != value))
				{
					this.OnCurencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurencyId = value;
					this.SendPropertyChanged("CurencyId");
					this.OnCurencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(24,12)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="BigInt")]
		public System.Nullable<long> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sl_nhap", DbType="Decimal(13,3)")]
		public System.Nullable<decimal> sl_nhap
		{
			get
			{
				return this._sl_nhap;
			}
			set
			{
				if ((this._sl_nhap != value))
				{
					this.Onsl_nhapChanging(value);
					this.SendPropertyChanging();
					this._sl_nhap = value;
					this.SendPropertyChanged("sl_nhap");
					this.Onsl_nhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sl_xuat", DbType="Decimal(13,3)")]
		public System.Nullable<decimal> sl_xuat
		{
			get
			{
				return this._sl_xuat;
			}
			set
			{
				if ((this._sl_xuat != value))
				{
					this.Onsl_xuatChanging(value);
					this.SendPropertyChanging();
					this._sl_xuat = value;
					this.SendPropertyChanged("sl_xuat");
					this.Onsl_xuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia_nt", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> gia_nt
		{
			get
			{
				return this._gia_nt;
			}
			set
			{
				if ((this._gia_nt != value))
				{
					this.Ongia_ntChanging(value);
					this.SendPropertyChanging();
					this._gia_nt = value;
					this.SendPropertyChanged("gia_nt");
					this.Ongia_ntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tien_nhap", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> tien_nhap
		{
			get
			{
				return this._tien_nhap;
			}
			set
			{
				if ((this._tien_nhap != value))
				{
					this.Ontien_nhapChanging(value);
					this.SendPropertyChanging();
					this._tien_nhap = value;
					this.SendPropertyChanged("tien_nhap");
					this.Ontien_nhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tien_xuat", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> tien_xuat
		{
			get
			{
				return this._tien_xuat;
			}
			set
			{
				if ((this._tien_xuat != value))
				{
					this.Ontien_xuatChanging(value);
					this.SendPropertyChanging();
					this._tien_xuat = value;
					this.SendPropertyChanged("tien_xuat");
					this.Ontien_xuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia2", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> gia2
		{
			get
			{
				return this._gia2;
			}
			set
			{
				if ((this._gia2 != value))
				{
					this.Ongia2Changing(value);
					this.SendPropertyChanging();
					this._gia2 = value;
					this.SendPropertyChanged("gia2");
					this.Ongia2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tien2", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> tien2
		{
			get
			{
				return this._tien2;
			}
			set
			{
				if ((this._tien2 != value))
				{
					this.Ontien2Changing(value);
					this.SendPropertyChanging();
					this._tien2 = value;
					this.SendPropertyChanged("tien2");
					this.Ontien2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ck", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> ck
		{
			get
			{
				return this._ck;
			}
			set
			{
				if ((this._ck != value))
				{
					this.OnckChanging(value);
					this.SendPropertyChanging();
					this._ck = value;
					this.SendPropertyChanged("ck");
					this.OnckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt")]
		public System.Nullable<byte> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fee", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> Fee
		{
			get
			{
				return this._Fee;
			}
			set
			{
				if ((this._Fee != value))
				{
					this.OnFeeChanging(value);
					this.SendPropertyChanging();
					this._Fee = value;
					this.SendPropertyChanged("Fee");
					this.OnFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceReceive", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> PriceReceive
		{
			get
			{
				return this._PriceReceive;
			}
			set
			{
				if ((this._PriceReceive != value))
				{
					this.OnPriceReceiveChanging(value);
					this.SendPropertyChanging();
					this._PriceReceive = value;
					this.SendPropertyChanged("PriceReceive");
					this.OnPriceReceiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TT", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> TT
		{
			get
			{
				return this._TT;
			}
			set
			{
				if ((this._TT != value))
				{
					this.OnTTChanging(value);
					this.SendPropertyChanging();
					this._TT = value;
					this.SendPropertyChanged("TT");
					this.OnTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_StockCard", Storage="_Warehouse", ThisKey="WarehouseID", OtherKey="Id", IsForeignKey=true)]
		public Warehouse Warehouse
		{
			get
			{
				return this._Warehouse.Entity;
			}
			set
			{
				Warehouse previousValue = this._Warehouse.Entity;
				if (((previousValue != value) 
							|| (this._Warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Warehouse.Entity = null;
						previousValue.StockCards.Remove(this);
					}
					this._Warehouse.Entity = value;
					if ((value != null))
					{
						value.StockCards.Add(this);
						this._WarehouseID = value.Id;
					}
					else
					{
						this._WarehouseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Warehouse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_StockCard", Storage="_Product", ThisKey="ProductID", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.StockCards.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.StockCards.Add(this);
						this._ProductID = value.Id;
					}
					else
					{
						this._ProductID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_StockCard", Storage="_Supplier", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.StockCards.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.StockCards.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_StockCard", Storage="_Customer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.StockCards.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.StockCards.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DT72")]
	public partial class DT72 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _VoucherID;
		
		private int _RowID;
		
		private System.Nullable<long> _ProductID;
		
		private string _UOM;
		
		private System.Nullable<int> _WarehouseID;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _ImportTaxRate;
		
		private System.Nullable<decimal> _ImportTax;
		
		private System.Nullable<decimal> _VATTaxRate;
		
		private System.Nullable<decimal> _VATTax;
		
		private System.Nullable<decimal> _TransportFee;
		
		private System.Nullable<decimal> _InlandFee;
		
		private System.Nullable<decimal> _Fee1;
		
		private System.Nullable<decimal> _Fee2;
		
		private System.Nullable<decimal> _T_Fee;
		
		private System.Nullable<decimal> _TT;
		
		private string _Description;
		
		private System.Nullable<decimal> _PriceReceive;
		
		private EntityRef<MT72> _MT72;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Warehouse> _Warehouse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherIDChanging(long value);
    partial void OnVoucherIDChanged();
    partial void OnRowIDChanging(int value);
    partial void OnRowIDChanged();
    partial void OnProductIDChanging(System.Nullable<long> value);
    partial void OnProductIDChanged();
    partial void OnUOMChanging(string value);
    partial void OnUOMChanged();
    partial void OnWarehouseIDChanging(System.Nullable<int> value);
    partial void OnWarehouseIDChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnImportTaxRateChanging(System.Nullable<decimal> value);
    partial void OnImportTaxRateChanged();
    partial void OnImportTaxChanging(System.Nullable<decimal> value);
    partial void OnImportTaxChanged();
    partial void OnVATTaxRateChanging(System.Nullable<decimal> value);
    partial void OnVATTaxRateChanged();
    partial void OnVATTaxChanging(System.Nullable<decimal> value);
    partial void OnVATTaxChanged();
    partial void OnTransportFeeChanging(System.Nullable<decimal> value);
    partial void OnTransportFeeChanged();
    partial void OnInlandFeeChanging(System.Nullable<decimal> value);
    partial void OnInlandFeeChanged();
    partial void OnFee1Changing(System.Nullable<decimal> value);
    partial void OnFee1Changed();
    partial void OnFee2Changing(System.Nullable<decimal> value);
    partial void OnFee2Changed();
    partial void OnT_FeeChanging(System.Nullable<decimal> value);
    partial void OnT_FeeChanged();
    partial void OnTTChanging(System.Nullable<decimal> value);
    partial void OnTTChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceReceiveChanging(System.Nullable<decimal> value);
    partial void OnPriceReceiveChanged();
    #endregion
		
		public DT72()
		{
			this._MT72 = default(EntityRef<MT72>);
			this._Product = default(EntityRef<Product>);
			this._Warehouse = default(EntityRef<Warehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long VoucherID
		{
			get
			{
				return this._VoucherID;
			}
			set
			{
				if ((this._VoucherID != value))
				{
					if (this._MT72.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoucherIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherID = value;
					this.SendPropertyChanged("VoucherID");
					this.OnVoucherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RowID
		{
			get
			{
				return this._RowID;
			}
			set
			{
				if ((this._RowID != value))
				{
					this.OnRowIDChanging(value);
					this.SendPropertyChanging();
					this._RowID = value;
					this.SendPropertyChanged("RowID");
					this.OnRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="BigInt")]
		public System.Nullable<long> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOM", DbType="NChar(16)")]
		public string UOM
		{
			get
			{
				return this._UOM;
			}
			set
			{
				if ((this._UOM != value))
				{
					this.OnUOMChanging(value);
					this.SendPropertyChanging();
					this._UOM = value;
					this.SendPropertyChanged("UOM");
					this.OnUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseID", DbType="Int")]
		public System.Nullable<int> WarehouseID
		{
			get
			{
				return this._WarehouseID;
			}
			set
			{
				if ((this._WarehouseID != value))
				{
					if (this._Warehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseID = value;
					this.SendPropertyChanged("WarehouseID");
					this.OnWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(12,3)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportTaxRate", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> ImportTaxRate
		{
			get
			{
				return this._ImportTaxRate;
			}
			set
			{
				if ((this._ImportTaxRate != value))
				{
					this.OnImportTaxRateChanging(value);
					this.SendPropertyChanging();
					this._ImportTaxRate = value;
					this.SendPropertyChanged("ImportTaxRate");
					this.OnImportTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportTax", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> ImportTax
		{
			get
			{
				return this._ImportTax;
			}
			set
			{
				if ((this._ImportTax != value))
				{
					this.OnImportTaxChanging(value);
					this.SendPropertyChanging();
					this._ImportTax = value;
					this.SendPropertyChanged("ImportTax");
					this.OnImportTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATTaxRate", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> VATTaxRate
		{
			get
			{
				return this._VATTaxRate;
			}
			set
			{
				if ((this._VATTaxRate != value))
				{
					this.OnVATTaxRateChanging(value);
					this.SendPropertyChanging();
					this._VATTaxRate = value;
					this.SendPropertyChanged("VATTaxRate");
					this.OnVATTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATTax", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> VATTax
		{
			get
			{
				return this._VATTax;
			}
			set
			{
				if ((this._VATTax != value))
				{
					this.OnVATTaxChanging(value);
					this.SendPropertyChanging();
					this._VATTax = value;
					this.SendPropertyChanged("VATTax");
					this.OnVATTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportFee", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> TransportFee
		{
			get
			{
				return this._TransportFee;
			}
			set
			{
				if ((this._TransportFee != value))
				{
					this.OnTransportFeeChanging(value);
					this.SendPropertyChanging();
					this._TransportFee = value;
					this.SendPropertyChanged("TransportFee");
					this.OnTransportFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InlandFee", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> InlandFee
		{
			get
			{
				return this._InlandFee;
			}
			set
			{
				if ((this._InlandFee != value))
				{
					this.OnInlandFeeChanging(value);
					this.SendPropertyChanging();
					this._InlandFee = value;
					this.SendPropertyChanged("InlandFee");
					this.OnInlandFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fee1", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> Fee1
		{
			get
			{
				return this._Fee1;
			}
			set
			{
				if ((this._Fee1 != value))
				{
					this.OnFee1Changing(value);
					this.SendPropertyChanging();
					this._Fee1 = value;
					this.SendPropertyChanged("Fee1");
					this.OnFee1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fee2", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> Fee2
		{
			get
			{
				return this._Fee2;
			}
			set
			{
				if ((this._Fee2 != value))
				{
					this.OnFee2Changing(value);
					this.SendPropertyChanging();
					this._Fee2 = value;
					this.SendPropertyChanged("Fee2");
					this.OnFee2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Fee", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> T_Fee
		{
			get
			{
				return this._T_Fee;
			}
			set
			{
				if ((this._T_Fee != value))
				{
					this.OnT_FeeChanging(value);
					this.SendPropertyChanging();
					this._T_Fee = value;
					this.SendPropertyChanged("T_Fee");
					this.OnT_FeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TT", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> TT
		{
			get
			{
				return this._TT;
			}
			set
			{
				if ((this._TT != value))
				{
					this.OnTTChanging(value);
					this.SendPropertyChanging();
					this._TT = value;
					this.SendPropertyChanged("TT");
					this.OnTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceReceive", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> PriceReceive
		{
			get
			{
				return this._PriceReceive;
			}
			set
			{
				if ((this._PriceReceive != value))
				{
					this.OnPriceReceiveChanging(value);
					this.SendPropertyChanging();
					this._PriceReceive = value;
					this.SendPropertyChanged("PriceReceive");
					this.OnPriceReceiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MT72_DT72", Storage="_MT72", ThisKey="VoucherID", OtherKey="VoucherID", IsForeignKey=true)]
		public MT72 MT72
		{
			get
			{
				return this._MT72.Entity;
			}
			set
			{
				MT72 previousValue = this._MT72.Entity;
				if (((previousValue != value) 
							|| (this._MT72.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MT72.Entity = null;
						previousValue.DT72s.Remove(this);
					}
					this._MT72.Entity = value;
					if ((value != null))
					{
						value.DT72s.Add(this);
						this._VoucherID = value.VoucherID;
					}
					else
					{
						this._VoucherID = default(long);
					}
					this.SendPropertyChanged("MT72");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DT72", Storage="_Product", ThisKey="ProductID", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.DT72s.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.DT72s.Add(this);
						this._ProductID = value.Id;
					}
					else
					{
						this._ProductID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_DT72", Storage="_Warehouse", ThisKey="WarehouseID", OtherKey="Id", IsForeignKey=true)]
		public Warehouse Warehouse
		{
			get
			{
				return this._Warehouse.Entity;
			}
			set
			{
				Warehouse previousValue = this._Warehouse.Entity;
				if (((previousValue != value) 
							|| (this._Warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Warehouse.Entity = null;
						previousValue.DT72s.Remove(this);
					}
					this._Warehouse.Entity = value;
					if ((value != null))
					{
						value.DT72s.Add(this);
						this._WarehouseID = value.Id;
					}
					else
					{
						this._WarehouseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Warehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServicesType")]
	public partial class ServicesType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SerivceName;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<long> _CreatedBy;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<System.DateTime> _DateModify;
		
		private bool _IsActive;
		
		private EntitySet<Freight> _Freights;
		
		private EntitySet<Shipment> _Shipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSerivceNameChanging(string value);
    partial void OnSerivceNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnDateModifyChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifyChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ServicesType()
		{
			this._Freights = new EntitySet<Freight>(new Action<Freight>(this.attach_Freights), new Action<Freight>(this.detach_Freights));
			this._Shipments = new EntitySet<Shipment>(new Action<Shipment>(this.attach_Shipments), new Action<Shipment>(this.detach_Shipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerivceName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SerivceName
		{
			get
			{
				return this._SerivceName;
			}
			set
			{
				if ((this._SerivceName != value))
				{
					this.OnSerivceNameChanging(value);
					this.SendPropertyChanging();
					this._SerivceName = value;
					this.SendPropertyChanged("SerivceName");
					this.OnSerivceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
		public System.Nullable<long> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModify", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModify
		{
			get
			{
				return this._DateModify;
			}
			set
			{
				if ((this._DateModify != value))
				{
					this.OnDateModifyChanging(value);
					this.SendPropertyChanging();
					this._DateModify = value;
					this.SendPropertyChanged("DateModify");
					this.OnDateModifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicesType_Freight", Storage="_Freights", ThisKey="Id", OtherKey="ServiceId")]
		public EntitySet<Freight> Freights
		{
			get
			{
				return this._Freights;
			}
			set
			{
				this._Freights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicesType_Shipment", Storage="_Shipments", ThisKey="Id", OtherKey="ServiceId")]
		public EntitySet<Shipment> Shipments
		{
			get
			{
				return this._Shipments;
			}
			set
			{
				this._Shipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.ServicesType = this;
		}
		
		private void detach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.ServicesType = null;
		}
		
		private void attach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.ServicesType = this;
		}
		
		private void detach_Shipments(Shipment entity)
		{
			this.SendPropertyChanging();
			entity.ServicesType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catelory")]
	public partial class Catelory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NameType;
		
		private string _NameTypeViet;
		
		private System.Nullable<byte> _Type;
		
		private EntitySet<ScfNew> _ScfNews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameTypeChanging(string value);
    partial void OnNameTypeChanged();
    partial void OnNameTypeVietChanging(string value);
    partial void OnNameTypeVietChanged();
    partial void OnTypeChanging(System.Nullable<byte> value);
    partial void OnTypeChanged();
    #endregion
		
		public Catelory()
		{
			this._ScfNews = new EntitySet<ScfNew>(new Action<ScfNew>(this.attach_ScfNews), new Action<ScfNew>(this.detach_ScfNews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NameType
		{
			get
			{
				return this._NameType;
			}
			set
			{
				if ((this._NameType != value))
				{
					this.OnNameTypeChanging(value);
					this.SendPropertyChanging();
					this._NameType = value;
					this.SendPropertyChanged("NameType");
					this.OnNameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTypeViet", DbType="NVarChar(50)")]
		public string NameTypeViet
		{
			get
			{
				return this._NameTypeViet;
			}
			set
			{
				if ((this._NameTypeViet != value))
				{
					this.OnNameTypeVietChanging(value);
					this.SendPropertyChanging();
					this._NameTypeViet = value;
					this.SendPropertyChanged("NameTypeViet");
					this.OnNameTypeVietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt")]
		public System.Nullable<byte> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catelory_ScfNew", Storage="_ScfNews", ThisKey="Id", OtherKey="CateloryId")]
		public EntitySet<ScfNew> ScfNews
		{
			get
			{
				return this._ScfNews;
			}
			set
			{
				this._ScfNews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScfNews(ScfNew entity)
		{
			this.SendPropertyChanging();
			entity.Catelory = this;
		}
		
		private void detach_ScfNews(ScfNew entity)
		{
			this.SendPropertyChanging();
			entity.Catelory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.History")]
	public partial class History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateTime;
		
		private long _UserId;
		
		private string _ActionName;
		
		private string _HistoryMessage;
		
		private System.Nullable<long> _ObjectId;
		
		private string _ObjectType;
		
		private bool _IsLasted;
		
		private bool _IsRevisedRequest;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    partial void OnHistoryMessageChanging(string value);
    partial void OnHistoryMessageChanged();
    partial void OnObjectIdChanging(System.Nullable<long> value);
    partial void OnObjectIdChanged();
    partial void OnObjectTypeChanging(string value);
    partial void OnObjectTypeChanged();
    partial void OnIsLastedChanging(bool value);
    partial void OnIsLastedChanged();
    partial void OnIsRevisedRequestChanging(bool value);
    partial void OnIsRevisedRequestChanged();
    #endregion
		
		public History()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryMessage", DbType="Text")]
		public string HistoryMessage
		{
			get
			{
				return this._HistoryMessage;
			}
			set
			{
				if ((this._HistoryMessage != value))
				{
					this.OnHistoryMessageChanging(value);
					this.SendPropertyChanging();
					this._HistoryMessage = value;
					this.SendPropertyChanged("HistoryMessage");
					this.OnHistoryMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt")]
		public System.Nullable<long> ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="NVarChar(150)")]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLasted", DbType="Bit NOT NULL")]
		public bool IsLasted
		{
			get
			{
				return this._IsLasted;
			}
			set
			{
				if ((this._IsLasted != value))
				{
					this.OnIsLastedChanging(value);
					this.SendPropertyChanging();
					this._IsLasted = value;
					this.SendPropertyChanged("IsLasted");
					this.OnIsLastedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRevisedRequest", DbType="Bit")]
		public bool IsRevisedRequest
		{
			get
			{
				return this._IsRevisedRequest;
			}
			set
			{
				if ((this._IsRevisedRequest != value))
				{
					this.OnIsRevisedRequestChanging(value);
					this.SendPropertyChanging();
					this._IsRevisedRequest = value;
					this.SendPropertyChanged("IsRevisedRequest");
					this.OnIsRevisedRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_History", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Histories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Histories.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroup")]
	public partial class UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserId;
		
		private int _GroupId;
		
		private long _Id;
		
		private EntityRef<User> _User;
		
		private EntityRef<Group> _Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    #endregion
		
		public UserGroup()
		{
			this._User = default(EntityRef<User>);
			this._Group = default(EntityRef<Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserGroup", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserGroups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserGroups.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_UserGroup", Storage="_Group", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.UserGroups.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.UserGroups.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Group]")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsActive;
		
		private EntitySet<UserGroup> _UserGroups;
		
		private EntitySet<GroupAccessPermission> _GroupAccessPermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Group()
		{
			this._UserGroups = new EntitySet<UserGroup>(new Action<UserGroup>(this.attach_UserGroups), new Action<UserGroup>(this.detach_UserGroups));
			this._GroupAccessPermissions = new EntitySet<GroupAccessPermission>(new Action<GroupAccessPermission>(this.attach_GroupAccessPermissions), new Action<GroupAccessPermission>(this.detach_GroupAccessPermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_UserGroup", Storage="_UserGroups", ThisKey="Id", OtherKey="GroupId")]
		public EntitySet<UserGroup> UserGroups
		{
			get
			{
				return this._UserGroups;
			}
			set
			{
				this._UserGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupAccessPermission", Storage="_GroupAccessPermissions", ThisKey="Id", OtherKey="GroupId")]
		public EntitySet<GroupAccessPermission> GroupAccessPermissions
		{
			get
			{
				return this._GroupAccessPermissions;
			}
			set
			{
				this._GroupAccessPermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupAccessPermissions(GroupAccessPermission entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupAccessPermissions(GroupAccessPermission entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupAccessPermission")]
	public partial class GroupAccessPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _GroupId;
		
		private int _AboutId;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<ScfNew> _ScfNew;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnAboutIdChanging(int value);
    partial void OnAboutIdChanged();
    #endregion
		
		public GroupAccessPermission()
		{
			this._Group = default(EntityRef<Group>);
			this._ScfNew = default(EntityRef<ScfNew>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutId", DbType="Int NOT NULL")]
		public int AboutId
		{
			get
			{
				return this._AboutId;
			}
			set
			{
				if ((this._AboutId != value))
				{
					if (this._ScfNew.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAboutIdChanging(value);
					this.SendPropertyChanging();
					this._AboutId = value;
					this.SendPropertyChanged("AboutId");
					this.OnAboutIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupAccessPermission", Storage="_Group", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupAccessPermissions.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupAccessPermissions.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScfNew_GroupAccessPermission", Storage="_ScfNew", ThisKey="AboutId", OtherKey="Id", IsForeignKey=true)]
		public ScfNew ScfNew
		{
			get
			{
				return this._ScfNew.Entity;
			}
			set
			{
				ScfNew previousValue = this._ScfNew.Entity;
				if (((previousValue != value) 
							|| (this._ScfNew.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScfNew.Entity = null;
						previousValue.GroupAccessPermissions.Remove(this);
					}
					this._ScfNew.Entity = value;
					if ((value != null))
					{
						value.GroupAccessPermissions.Add(this);
						this._AboutId = value.Id;
					}
					else
					{
						this._AboutId = default(int);
					}
					this.SendPropertyChanged("ScfNew");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScfNews")]
	public partial class ScfNew : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Header;
		
		private string _Content;
		
		private byte _Type;
		
		private string _Sourse;
		
		private long _CreatedBy;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.DateTime _DateCreate;
		
		private System.Nullable<System.DateTime> _DateModify;
		
		private bool _IsAllowAnotherUpdate;
		
		private string _UserIds;
		
		private int _CateloryId;
		
		private bool _IsApproved;
		
		private System.Nullable<long> _Appvovedby;
		
		private System.Nullable<System.DateTime> _DatePromulgate;
		
		private string _RefDoc;
		
		private System.Nullable<System.DateTime> _DateApproved;
		
		private string _UsersCanUpdate;
		
		private string _UserView;
		
		private EntitySet<GroupAccessPermission> _GroupAccessPermissions;
		
		private EntityRef<Catelory> _Catelory;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnSourseChanging(string value);
    partial void OnSourseChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateCreateChanging(System.DateTime value);
    partial void OnDateCreateChanged();
    partial void OnDateModifyChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifyChanged();
    partial void OnIsAllowAnotherUpdateChanging(bool value);
    partial void OnIsAllowAnotherUpdateChanged();
    partial void OnUserIdsChanging(string value);
    partial void OnUserIdsChanged();
    partial void OnCateloryIdChanging(int value);
    partial void OnCateloryIdChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnAppvovedbyChanging(System.Nullable<long> value);
    partial void OnAppvovedbyChanged();
    partial void OnDatePromulgateChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePromulgateChanged();
    partial void OnRefDocChanging(string value);
    partial void OnRefDocChanged();
    partial void OnDateApprovedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateApprovedChanged();
    partial void OnUsersCanUpdateChanging(string value);
    partial void OnUsersCanUpdateChanged();
    partial void OnUserViewChanging(string value);
    partial void OnUserViewChanged();
    #endregion
		
		public ScfNew()
		{
			this._GroupAccessPermissions = new EntitySet<GroupAccessPermission>(new Action<GroupAccessPermission>(this.attach_GroupAccessPermissions), new Action<GroupAccessPermission>(this.detach_GroupAccessPermissions));
			this._Catelory = default(EntityRef<Catelory>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sourse", DbType="NVarChar(255)")]
		public string Sourse
		{
			get
			{
				return this._Sourse;
			}
			set
			{
				if ((this._Sourse != value))
				{
					this.OnSourseChanging(value);
					this.SendPropertyChanging();
					this._Sourse = value;
					this.SendPropertyChanged("Sourse");
					this.OnSourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModify", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModify
		{
			get
			{
				return this._DateModify;
			}
			set
			{
				if ((this._DateModify != value))
				{
					this.OnDateModifyChanging(value);
					this.SendPropertyChanging();
					this._DateModify = value;
					this.SendPropertyChanged("DateModify");
					this.OnDateModifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllowAnotherUpdate", DbType="Bit NOT NULL")]
		public bool IsAllowAnotherUpdate
		{
			get
			{
				return this._IsAllowAnotherUpdate;
			}
			set
			{
				if ((this._IsAllowAnotherUpdate != value))
				{
					this.OnIsAllowAnotherUpdateChanging(value);
					this.SendPropertyChanging();
					this._IsAllowAnotherUpdate = value;
					this.SendPropertyChanged("IsAllowAnotherUpdate");
					this.OnIsAllowAnotherUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIds", DbType="VarChar(500)")]
		public string UserIds
		{
			get
			{
				return this._UserIds;
			}
			set
			{
				if ((this._UserIds != value))
				{
					this.OnUserIdsChanging(value);
					this.SendPropertyChanging();
					this._UserIds = value;
					this.SendPropertyChanged("UserIds");
					this.OnUserIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CateloryId", DbType="Int NOT NULL")]
		public int CateloryId
		{
			get
			{
				return this._CateloryId;
			}
			set
			{
				if ((this._CateloryId != value))
				{
					if (this._Catelory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCateloryIdChanging(value);
					this.SendPropertyChanging();
					this._CateloryId = value;
					this.SendPropertyChanged("CateloryId");
					this.OnCateloryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appvovedby", DbType="BigInt")]
		public System.Nullable<long> Appvovedby
		{
			get
			{
				return this._Appvovedby;
			}
			set
			{
				if ((this._Appvovedby != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppvovedbyChanging(value);
					this.SendPropertyChanging();
					this._Appvovedby = value;
					this.SendPropertyChanged("Appvovedby");
					this.OnAppvovedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePromulgate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePromulgate
		{
			get
			{
				return this._DatePromulgate;
			}
			set
			{
				if ((this._DatePromulgate != value))
				{
					this.OnDatePromulgateChanging(value);
					this.SendPropertyChanging();
					this._DatePromulgate = value;
					this.SendPropertyChanged("DatePromulgate");
					this.OnDatePromulgateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefDoc", DbType="NVarChar(255)")]
		public string RefDoc
		{
			get
			{
				return this._RefDoc;
			}
			set
			{
				if ((this._RefDoc != value))
				{
					this.OnRefDocChanging(value);
					this.SendPropertyChanging();
					this._RefDoc = value;
					this.SendPropertyChanged("RefDoc");
					this.OnRefDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateApproved", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateApproved
		{
			get
			{
				return this._DateApproved;
			}
			set
			{
				if ((this._DateApproved != value))
				{
					this.OnDateApprovedChanging(value);
					this.SendPropertyChanging();
					this._DateApproved = value;
					this.SendPropertyChanged("DateApproved");
					this.OnDateApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersCanUpdate", DbType="NVarChar(250)")]
		public string UsersCanUpdate
		{
			get
			{
				return this._UsersCanUpdate;
			}
			set
			{
				if ((this._UsersCanUpdate != value))
				{
					this.OnUsersCanUpdateChanging(value);
					this.SendPropertyChanging();
					this._UsersCanUpdate = value;
					this.SendPropertyChanged("UsersCanUpdate");
					this.OnUsersCanUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserView", DbType="Nvarchar(255)")]
		public string UserView
		{
			get
			{
				return this._UserView;
			}
			set
			{
				if ((this._UserView != value))
				{
					this.OnUserViewChanging(value);
					this.SendPropertyChanging();
					this._UserView = value;
					this.SendPropertyChanged("UserView");
					this.OnUserViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScfNew_GroupAccessPermission", Storage="_GroupAccessPermissions", ThisKey="Id", OtherKey="AboutId")]
		public EntitySet<GroupAccessPermission> GroupAccessPermissions
		{
			get
			{
				return this._GroupAccessPermissions;
			}
			set
			{
				this._GroupAccessPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catelory_ScfNew", Storage="_Catelory", ThisKey="CateloryId", OtherKey="Id", IsForeignKey=true)]
		public Catelory Catelory
		{
			get
			{
				return this._Catelory.Entity;
			}
			set
			{
				Catelory previousValue = this._Catelory.Entity;
				if (((previousValue != value) 
							|| (this._Catelory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catelory.Entity = null;
						previousValue.ScfNews.Remove(this);
					}
					this._Catelory.Entity = value;
					if ((value != null))
					{
						value.ScfNews.Add(this);
						this._CateloryId = value.Id;
					}
					else
					{
						this._CateloryId = default(int);
					}
					this.SendPropertyChanged("Catelory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ScfNew", Storage="_User", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ScfNews.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ScfNews.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ScfNew1", Storage="_User1", ThisKey="ModifiedBy", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.ScfNews1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.ScfNews1.Add(this);
						this._ModifiedBy = value.Id;
					}
					else
					{
						this._ModifiedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ScfNew2", Storage="_User2", ThisKey="Appvovedby", OtherKey="Id", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.ScfNews2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.ScfNews2.Add(this);
						this._Appvovedby = value.Id;
					}
					else
					{
						this._Appvovedby = default(Nullable<long>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupAccessPermissions(GroupAccessPermission entity)
		{
			this.SendPropertyChanging();
			entity.ScfNew = this;
		}
		
		private void detach_GroupAccessPermissions(GroupAccessPermission entity)
		{
			this.SendPropertyChanging();
			entity.ScfNew = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _CountryName;
		
		private EntitySet<Area> _Areas;
		
		private EntitySet<MT72> _MT72s;
		
		private EntitySet<Supplier> _Suppliers;
		
		private EntitySet<Province> _Provinces;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    #endregion
		
		public Country()
		{
			this._Areas = new EntitySet<Area>(new Action<Area>(this.attach_Areas), new Action<Area>(this.detach_Areas));
			this._MT72s = new EntitySet<MT72>(new Action<MT72>(this.attach_MT72s), new Action<MT72>(this.detach_MT72s));
			this._Suppliers = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Suppliers), new Action<Supplier>(this.detach_Suppliers));
			this._Provinces = new EntitySet<Province>(new Action<Province>(this.attach_Provinces), new Action<Province>(this.detach_Provinces));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(100)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Area", Storage="_Areas", ThisKey="Id", OtherKey="CountryId")]
		public EntitySet<Area> Areas
		{
			get
			{
				return this._Areas;
			}
			set
			{
				this._Areas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_MT72", Storage="_MT72s", ThisKey="Id", OtherKey="CountryID")]
		public EntitySet<MT72> MT72s
		{
			get
			{
				return this._MT72s;
			}
			set
			{
				this._MT72s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Supplier", Storage="_Suppliers", ThisKey="Id", OtherKey="CountryId")]
		public EntitySet<Supplier> Suppliers
		{
			get
			{
				return this._Suppliers;
			}
			set
			{
				this._Suppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Province", Storage="_Provinces", ThisKey="Id", OtherKey="CountryId")]
		public EntitySet<Province> Provinces
		{
			get
			{
				return this._Provinces;
			}
			set
			{
				this._Provinces.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Areas(Area entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Areas(Area entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_MT72s(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_MT72s(MT72 entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Suppliers(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Suppliers(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Provinces(Province entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Provinces(Province entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMContact")]
	public partial class CRMContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FullName;
		
		private string _Phone;
		
		private string _Phone2;
		
		private string _Email;
		
		private string _Email2;
		
		private System.Nullable<long> _CmrCustomerId;
		
		private EntityRef<CRMCustomer> _CRMCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmail2Changing(string value);
    partial void OnEmail2Changed();
    partial void OnCmrCustomerIdChanging(System.Nullable<long> value);
    partial void OnCmrCustomerIdChanged();
    #endregion
		
		public CRMContact()
		{
			this._CRMCustomer = default(EntityRef<CRMCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="VarChar(15)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email2", DbType="NVarChar(150)")]
		public string Email2
		{
			get
			{
				return this._Email2;
			}
			set
			{
				if ((this._Email2 != value))
				{
					this.OnEmail2Changing(value);
					this.SendPropertyChanging();
					this._Email2 = value;
					this.SendPropertyChanged("Email2");
					this.OnEmail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CmrCustomerId", DbType="BigInt")]
		public System.Nullable<long> CmrCustomerId
		{
			get
			{
				return this._CmrCustomerId;
			}
			set
			{
				if ((this._CmrCustomerId != value))
				{
					if (this._CRMCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCmrCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CmrCustomerId = value;
					this.SendPropertyChanged("CmrCustomerId");
					this.OnCmrCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMCustomer_CRMContact", Storage="_CRMCustomer", ThisKey="CmrCustomerId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public CRMCustomer CRMCustomer
		{
			get
			{
				return this._CRMCustomer.Entity;
			}
			set
			{
				CRMCustomer previousValue = this._CRMCustomer.Entity;
				if (((previousValue != value) 
							|| (this._CRMCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMCustomer.Entity = null;
						previousValue.CRMContacts.Remove(this);
					}
					this._CRMCustomer.Entity = value;
					if ((value != null))
					{
						value.CRMContacts.Add(this);
						this._CmrCustomerId = value.Id;
					}
					else
					{
						this._CmrCustomerId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CRMCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMGroup")]
	public partial class CRMGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _ParentId;
		
		private EntitySet<CRMCustomer> _CRMCustomers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    #endregion
		
		public CRMGroup()
		{
			this._CRMCustomers = new EntitySet<CRMCustomer>(new Action<CRMCustomer>(this.attach_CRMCustomers), new Action<CRMCustomer>(this.detach_CRMCustomers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMGroup_CRMCustomer", Storage="_CRMCustomers", ThisKey="Id", OtherKey="CrmGroupId")]
		public EntitySet<CRMCustomer> CRMCustomers
		{
			get
			{
				return this._CRMCustomers;
			}
			set
			{
				this._CRMCustomers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.CRMGroup = this;
		}
		
		private void detach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.CRMGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMJobCategory")]
	public partial class CRMJobCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<CRMCustomer> _CRMCustomers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CRMJobCategory()
		{
			this._CRMCustomers = new EntitySet<CRMCustomer>(new Action<CRMCustomer>(this.attach_CRMCustomers), new Action<CRMCustomer>(this.detach_CRMCustomers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMJobCategory_CRMCustomer", Storage="_CRMCustomers", ThisKey="Id", OtherKey="CrmCategoryId")]
		public EntitySet<CRMCustomer> CRMCustomers
		{
			get
			{
				return this._CRMCustomers;
			}
			set
			{
				this._CRMCustomers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.CRMJobCategory = this;
		}
		
		private void detach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.CRMJobCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMSource")]
	public partial class CRMSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<CRMCustomer> _CRMCustomers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CRMSource()
		{
			this._CRMCustomers = new EntitySet<CRMCustomer>(new Action<CRMCustomer>(this.attach_CRMCustomers), new Action<CRMCustomer>(this.detach_CRMCustomers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMSource_CRMCustomer", Storage="_CRMCustomers", ThisKey="Id", OtherKey="CrmSourceId")]
		public EntitySet<CRMCustomer> CRMCustomers
		{
			get
			{
				return this._CRMCustomers;
			}
			set
			{
				this._CRMCustomers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.CRMSource = this;
		}
		
		private void detach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.CRMSource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMStatus")]
	public partial class CRMStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsSystem;
		
		private byte _Code;
		
		private EntitySet<CRMCustomer> _CRMCustomers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    partial void OnCodeChanging(byte value);
    partial void OnCodeChanged();
    #endregion
		
		public CRMStatus()
		{
			this._CRMCustomers = new EntitySet<CRMCustomer>(new Action<CRMCustomer>(this.attach_CRMCustomers), new Action<CRMCustomer>(this.detach_CRMCustomers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystem", DbType="Bit")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Tinyint")]
		public byte Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMStatus_CRMCustomer", Storage="_CRMCustomers", ThisKey="Id", OtherKey="CrmStatusId")]
		public EntitySet<CRMCustomer> CRMCustomers
		{
			get
			{
				return this._CRMCustomers;
			}
			set
			{
				this._CRMCustomers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.CRMStatus = this;
		}
		
		private void detach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.CRMStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMEmailHistory")]
	public partial class CRMEmailHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _ToAddress;
		
		private string _CcAddress;
		
		private string _Subject;
		
		private System.DateTime _DateSend;
		
		private long _PriceId;
		
		private EntityRef<CRMPriceQuotation> _CRMPriceQuotation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnToAddressChanging(string value);
    partial void OnToAddressChanged();
    partial void OnCcAddressChanging(string value);
    partial void OnCcAddressChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDateSendChanging(System.DateTime value);
    partial void OnDateSendChanged();
    partial void OnPriceIdChanging(long value);
    partial void OnPriceIdChanged();
    #endregion
		
		public CRMEmailHistory()
		{
			this._CRMPriceQuotation = default(EntityRef<CRMPriceQuotation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ToAddress
		{
			get
			{
				return this._ToAddress;
			}
			set
			{
				if ((this._ToAddress != value))
				{
					this.OnToAddressChanging(value);
					this.SendPropertyChanging();
					this._ToAddress = value;
					this.SendPropertyChanged("ToAddress");
					this.OnToAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CcAddress", DbType="NVarChar(255)")]
		public string CcAddress
		{
			get
			{
				return this._CcAddress;
			}
			set
			{
				if ((this._CcAddress != value))
				{
					this.OnCcAddressChanging(value);
					this.SendPropertyChanging();
					this._CcAddress = value;
					this.SendPropertyChanged("CcAddress");
					this.OnCcAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSend", DbType="DateTime NOT NULL")]
		public System.DateTime DateSend
		{
			get
			{
				return this._DateSend;
			}
			set
			{
				if ((this._DateSend != value))
				{
					this.OnDateSendChanging(value);
					this.SendPropertyChanging();
					this._DateSend = value;
					this.SendPropertyChanged("DateSend");
					this.OnDateSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceId", DbType="BigInt NOT NULL")]
		public long PriceId
		{
			get
			{
				return this._PriceId;
			}
			set
			{
				if ((this._PriceId != value))
				{
					if (this._CRMPriceQuotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceIdChanging(value);
					this.SendPropertyChanging();
					this._PriceId = value;
					this.SendPropertyChanged("PriceId");
					this.OnPriceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMPriceQuotation_CRMEmailHistory", Storage="_CRMPriceQuotation", ThisKey="PriceId", OtherKey="Id", IsForeignKey=true)]
		public CRMPriceQuotation CRMPriceQuotation
		{
			get
			{
				return this._CRMPriceQuotation.Entity;
			}
			set
			{
				CRMPriceQuotation previousValue = this._CRMPriceQuotation.Entity;
				if (((previousValue != value) 
							|| (this._CRMPriceQuotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMPriceQuotation.Entity = null;
						previousValue.CRMEmailHistories.Remove(this);
					}
					this._CRMPriceQuotation.Entity = value;
					if ((value != null))
					{
						value.CRMEmailHistories.Add(this);
						this._PriceId = value.Id;
					}
					else
					{
						this._PriceId = default(long);
					}
					this.SendPropertyChanged("CRMPriceQuotation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMEventType")]
	public partial class CRMEventType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<CRMVisit> _CRMVisits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CRMEventType()
		{
			this._CRMVisits = new EntitySet<CRMVisit>(new Action<CRMVisit>(this.attach_CRMVisits), new Action<CRMVisit>(this.detach_CRMVisits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMEventType_CRMVisit", Storage="_CRMVisits", ThisKey="Id", OtherKey="EventTypeId")]
		public EntitySet<CRMVisit> CRMVisits
		{
			get
			{
				return this._CRMVisits;
			}
			set
			{
				this._CRMVisits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMVisits(CRMVisit entity)
		{
			this.SendPropertyChanging();
			entity.CRMEventType = this;
		}
		
		private void detach_CRMVisits(CRMVisit entity)
		{
			this.SendPropertyChanging();
			entity.CRMEventType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMPriceQuotation")]
	public partial class CRMPriceQuotation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Subject;
		
		private string _Description;
		
		private long _CrmCusId;
		
		private int _CountSendMail;
		
		private int _Status;
		
		private System.Nullable<long> _ModifiedById;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _LastDateSend;
		
		private bool _IsDelete;
		
		private EntitySet<CRMEmailHistory> _CRMEmailHistories;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<CRMCustomer> _CRMCustomer;
		
		private EntityRef<CRMPriceStatus> _CRMPriceStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCrmCusIdChanging(long value);
    partial void OnCrmCusIdChanged();
    partial void OnCountSendMailChanging(int value);
    partial void OnCountSendMailChanged();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnModifiedByIdChanging(System.Nullable<long> value);
    partial void OnModifiedByIdChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLastDateSendChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDateSendChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public CRMPriceQuotation()
		{
			this._CRMEmailHistories = new EntitySet<CRMEmailHistory>(new Action<CRMEmailHistory>(this.attach_CRMEmailHistories), new Action<CRMEmailHistory>(this.detach_CRMEmailHistories));
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._CRMCustomer = default(EntityRef<CRMCustomer>);
			this._CRMPriceStatus = default(EntityRef<CRMPriceStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmCusId", DbType="BigInt NOT NULL")]
		public long CrmCusId
		{
			get
			{
				return this._CrmCusId;
			}
			set
			{
				if ((this._CrmCusId != value))
				{
					if (this._CRMCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrmCusIdChanging(value);
					this.SendPropertyChanging();
					this._CrmCusId = value;
					this.SendPropertyChanged("CrmCusId");
					this.OnCrmCusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountSendMail", DbType="Int NOT NULL")]
		public int CountSendMail
		{
			get
			{
				return this._CountSendMail;
			}
			set
			{
				if ((this._CountSendMail != value))
				{
					this.OnCountSendMailChanging(value);
					this.SendPropertyChanging();
					this._CountSendMail = value;
					this.SendPropertyChanged("CountSendMail");
					this.OnCountSendMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public int StatusId
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._CRMPriceStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedById", DbType="BigInt")]
		public System.Nullable<long> ModifiedById
		{
			get
			{
				return this._ModifiedById;
			}
			set
			{
				if ((this._ModifiedById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedById = value;
					this.SendPropertyChanged("ModifiedById");
					this.OnModifiedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDateSend", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDateSend
		{
			get
			{
				return this._LastDateSend;
			}
			set
			{
				if ((this._LastDateSend != value))
				{
					this.OnLastDateSendChanging(value);
					this.SendPropertyChanging();
					this._LastDateSend = value;
					this.SendPropertyChanged("LastDateSend");
					this.OnLastDateSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMPriceQuotation_CRMEmailHistory", Storage="_CRMEmailHistories", ThisKey="Id", OtherKey="PriceId")]
		public EntitySet<CRMEmailHistory> CRMEmailHistories
		{
			get
			{
				return this._CRMEmailHistories;
			}
			set
			{
				this._CRMEmailHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMPriceQuotation", Storage="_User", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CRMPriceQuotations.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CRMPriceQuotations.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMPriceQuotation1", Storage="_User1", ThisKey="ModifiedById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.CRMPriceQuotations1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.CRMPriceQuotations1.Add(this);
						this._ModifiedById = value.Id;
					}
					else
					{
						this._ModifiedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMCustomer_CRMPriceQuotation", Storage="_CRMCustomer", ThisKey="CrmCusId", OtherKey="Id", IsForeignKey=true)]
		public CRMCustomer CRMCustomer
		{
			get
			{
				return this._CRMCustomer.Entity;
			}
			set
			{
				CRMCustomer previousValue = this._CRMCustomer.Entity;
				if (((previousValue != value) 
							|| (this._CRMCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMCustomer.Entity = null;
						previousValue.CRMPriceQuotations.Remove(this);
					}
					this._CRMCustomer.Entity = value;
					if ((value != null))
					{
						value.CRMPriceQuotations.Add(this);
						this._CrmCusId = value.Id;
					}
					else
					{
						this._CrmCusId = default(long);
					}
					this.SendPropertyChanged("CRMCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMPriceStatus_CRMPriceQuotation", Storage="_CRMPriceStatus", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public CRMPriceStatus CRMPriceStatus
		{
			get
			{
				return this._CRMPriceStatus.Entity;
			}
			set
			{
				CRMPriceStatus previousValue = this._CRMPriceStatus.Entity;
				if (((previousValue != value) 
							|| (this._CRMPriceStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMPriceStatus.Entity = null;
						previousValue.CRMPriceQuotations.Remove(this);
					}
					this._CRMPriceStatus.Entity = value;
					if ((value != null))
					{
						value.CRMPriceQuotations.Add(this);
						this._Status = value.Id;
					}
					else
					{
						this._Status = default(int);
					}
					this.SendPropertyChanged("CRMPriceStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMEmailHistories(CRMEmailHistory entity)
		{
			this.SendPropertyChanging();
			entity.CRMPriceQuotation = this;
		}
		
		private void detach_CRMEmailHistories(CRMEmailHistory entity)
		{
			this.SendPropertyChanging();
			entity.CRMPriceQuotation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMCusDocuments")]
	public partial class CRMCusDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _DocName;
		
		private System.DateTime _ModifiedDate;
		
		private long _CrmCusId;
		
		private string _Description;
		
		private string _LinkDoc;
		
		private long _CreatedById;
		
		private System.Nullable<long> _ModifiedById;
		
		private EntityRef<CRMCustomer> _CRMCustomer;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDocNameChanging(string value);
    partial void OnDocNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnCrmCusIdChanging(long value);
    partial void OnCrmCusIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLinkDocChanging(string value);
    partial void OnLinkDocChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnModifiedByIdChanging(System.Nullable<long> value);
    partial void OnModifiedByIdChanged();
    #endregion
		
		public CRMCusDocument()
		{
			this._CRMCustomer = default(EntityRef<CRMCustomer>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DocName
		{
			get
			{
				return this._DocName;
			}
			set
			{
				if ((this._DocName != value))
				{
					this.OnDocNameChanging(value);
					this.SendPropertyChanging();
					this._DocName = value;
					this.SendPropertyChanged("DocName");
					this.OnDocNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmCusId", DbType="BigInt NOT NULL")]
		public long CrmCusId
		{
			get
			{
				return this._CrmCusId;
			}
			set
			{
				if ((this._CrmCusId != value))
				{
					if (this._CRMCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrmCusIdChanging(value);
					this.SendPropertyChanging();
					this._CrmCusId = value;
					this.SendPropertyChanged("CrmCusId");
					this.OnCrmCusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkDoc", DbType="NVarChar(MAX)")]
		public string LinkDoc
		{
			get
			{
				return this._LinkDoc;
			}
			set
			{
				if ((this._LinkDoc != value))
				{
					this.OnLinkDocChanging(value);
					this.SendPropertyChanging();
					this._LinkDoc = value;
					this.SendPropertyChanged("LinkDoc");
					this.OnLinkDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedById", DbType="BigInt")]
		public System.Nullable<long> ModifiedById
		{
			get
			{
				return this._ModifiedById;
			}
			set
			{
				if ((this._ModifiedById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedById = value;
					this.SendPropertyChanged("ModifiedById");
					this.OnModifiedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMCustomer_CRMCusDocument", Storage="_CRMCustomer", ThisKey="CrmCusId", OtherKey="Id", IsForeignKey=true)]
		public CRMCustomer CRMCustomer
		{
			get
			{
				return this._CRMCustomer.Entity;
			}
			set
			{
				CRMCustomer previousValue = this._CRMCustomer.Entity;
				if (((previousValue != value) 
							|| (this._CRMCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMCustomer.Entity = null;
						previousValue.CRMCusDocuments.Remove(this);
					}
					this._CRMCustomer.Entity = value;
					if ((value != null))
					{
						value.CRMCusDocuments.Add(this);
						this._CrmCusId = value.Id;
					}
					else
					{
						this._CrmCusId = default(long);
					}
					this.SendPropertyChanged("CRMCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMCusDocument", Storage="_User", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CRMCusDocuments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CRMCusDocuments.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMCusDocument1", Storage="_User1", ThisKey="ModifiedById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.CRMCusDocuments1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.CRMCusDocuments1.Add(this);
						this._ModifiedById = value.Id;
					}
					else
					{
						this._ModifiedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMSchedule")]
	public partial class CRMSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DayOfWeek;
		
		private System.Nullable<int> _DayBeforeOfDatePlan;
		
		private System.Nullable<int> _DayBeforeOfDateRevise;
		
		private System.Nullable<System.DateTime> _DateOfSchedule;
		
		private System.DateTime _DateBegin;
		
		private System.DateTime _DateEnd;
		
		private string _TimeOfSchedule;
		
		private System.Nullable<int> _DayAlert;
		
		private System.Nullable<int> _MountAlert;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDayOfWeekChanging(string value);
    partial void OnDayOfWeekChanged();
    partial void OnDayBeforeOfDatePlanChanging(System.Nullable<int> value);
    partial void OnDayBeforeOfDatePlanChanged();
    partial void OnDayBeforeOfDateReviseChanging(System.Nullable<int> value);
    partial void OnDayBeforeOfDateReviseChanged();
    partial void OnDateOfScheduleChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfScheduleChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.DateTime value);
    partial void OnDateEndChanged();
    partial void OnTimeOfScheduleChanging(string value);
    partial void OnTimeOfScheduleChanged();
    partial void OnDayAlertChanging(System.Nullable<int> value);
    partial void OnDayAlertChanged();
    partial void OnMountAlertChanging(System.Nullable<int> value);
    partial void OnMountAlertChanged();
    #endregion
		
		public CRMSchedule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeek", DbType="NVarChar(20)")]
		public string DayOfWeek
		{
			get
			{
				return this._DayOfWeek;
			}
			set
			{
				if ((this._DayOfWeek != value))
				{
					this.OnDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeek = value;
					this.SendPropertyChanged("DayOfWeek");
					this.OnDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayBeforeOfDatePlan", DbType="Int")]
		public System.Nullable<int> DayBeforeOfDatePlan
		{
			get
			{
				return this._DayBeforeOfDatePlan;
			}
			set
			{
				if ((this._DayBeforeOfDatePlan != value))
				{
					this.OnDayBeforeOfDatePlanChanging(value);
					this.SendPropertyChanging();
					this._DayBeforeOfDatePlan = value;
					this.SendPropertyChanged("DayBeforeOfDatePlan");
					this.OnDayBeforeOfDatePlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayBeforeOfDateRevise", DbType="Int")]
		public System.Nullable<int> DayBeforeOfDateRevise
		{
			get
			{
				return this._DayBeforeOfDateRevise;
			}
			set
			{
				if ((this._DayBeforeOfDateRevise != value))
				{
					this.OnDayBeforeOfDateReviseChanging(value);
					this.SendPropertyChanging();
					this._DayBeforeOfDateRevise = value;
					this.SendPropertyChanged("DayBeforeOfDateRevise");
					this.OnDayBeforeOfDateReviseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfSchedule", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfSchedule
		{
			get
			{
				return this._DateOfSchedule;
			}
			set
			{
				if ((this._DateOfSchedule != value))
				{
					this.OnDateOfScheduleChanging(value);
					this.SendPropertyChanging();
					this._DateOfSchedule = value;
					this.SendPropertyChanged("DateOfSchedule");
					this.OnDateOfScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfSchedule", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TimeOfSchedule
		{
			get
			{
				return this._TimeOfSchedule;
			}
			set
			{
				if ((this._TimeOfSchedule != value))
				{
					this.OnTimeOfScheduleChanging(value);
					this.SendPropertyChanging();
					this._TimeOfSchedule = value;
					this.SendPropertyChanged("TimeOfSchedule");
					this.OnTimeOfScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayAlert", DbType="Int")]
		public System.Nullable<int> DayAlert
		{
			get
			{
				return this._DayAlert;
			}
			set
			{
				if ((this._DayAlert != value))
				{
					this.OnDayAlertChanging(value);
					this.SendPropertyChanging();
					this._DayAlert = value;
					this.SendPropertyChanged("DayAlert");
					this.OnDayAlertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MountAlert", DbType="Int")]
		public System.Nullable<int> MountAlert
		{
			get
			{
				return this._MountAlert;
			}
			set
			{
				if ((this._MountAlert != value))
				{
					this.OnMountAlertChanging(value);
					this.SendPropertyChanging();
					this._MountAlert = value;
					this.SendPropertyChanged("MountAlert");
					this.OnMountAlertChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMPLanSales")]
	public partial class CRMPLanSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _SalesId;
		
		private int _PlanYear;
		
		private System.Nullable<long> _SubmitedById;
		
		private System.Nullable<System.DateTime> _SubmitedDate;
		
		private System.Nullable<long> _ApprovedById;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private EntitySet<CRMPlanProgMonth> _CRMPlanProgMonths;
		
		private EntityRef<User> _Sales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSalesIdChanging(long value);
    partial void OnSalesIdChanged();
    partial void OnPlanYearChanging(int value);
    partial void OnPlanYearChanged();
    partial void OnSubmitedByIdChanging(System.Nullable<long> value);
    partial void OnSubmitedByIdChanged();
    partial void OnSubmitedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmitedDateChanged();
    partial void OnApprovedByIdChanging(System.Nullable<long> value);
    partial void OnApprovedByIdChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    #endregion
		
		public CRMPLanSale()
		{
			this._CRMPlanProgMonths = new EntitySet<CRMPlanProgMonth>(new Action<CRMPlanProgMonth>(this.attach_CRMPlanProgMonths), new Action<CRMPlanProgMonth>(this.detach_CRMPlanProgMonths));
			this._Sales = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesId", DbType="BigInt NOT NULL")]
		public long SalesId
		{
			get
			{
				return this._SalesId;
			}
			set
			{
				if ((this._SalesId != value))
				{
					if (this._Sales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesIdChanging(value);
					this.SendPropertyChanging();
					this._SalesId = value;
					this.SendPropertyChanged("SalesId");
					this.OnSalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanYear", DbType="Int NOT NULL")]
		public int PlanYear
		{
			get
			{
				return this._PlanYear;
			}
			set
			{
				if ((this._PlanYear != value))
				{
					this.OnPlanYearChanging(value);
					this.SendPropertyChanging();
					this._PlanYear = value;
					this.SendPropertyChanged("PlanYear");
					this.OnPlanYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitedById", DbType="BigInt")]
		public System.Nullable<long> SubmitedById
		{
			get
			{
				return this._SubmitedById;
			}
			set
			{
				if ((this._SubmitedById != value))
				{
					this.OnSubmitedByIdChanging(value);
					this.SendPropertyChanging();
					this._SubmitedById = value;
					this.SendPropertyChanged("SubmitedById");
					this.OnSubmitedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubmitedDate
		{
			get
			{
				return this._SubmitedDate;
			}
			set
			{
				if ((this._SubmitedDate != value))
				{
					this.OnSubmitedDateChanging(value);
					this.SendPropertyChanging();
					this._SubmitedDate = value;
					this.SendPropertyChanged("SubmitedDate");
					this.OnSubmitedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt")]
		public System.Nullable<long> ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMPLanSale_CRMPlanProgMonth", Storage="_CRMPlanProgMonths", ThisKey="Id", OtherKey="PlanSalesId")]
		public EntitySet<CRMPlanProgMonth> CRMPlanProgMonths
		{
			get
			{
				return this._CRMPlanProgMonths;
			}
			set
			{
				this._CRMPlanProgMonths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMPLanSale", Storage="_Sales", ThisKey="SalesId", OtherKey="Id", IsForeignKey=true)]
		public User Sales
		{
			get
			{
				return this._Sales.Entity;
			}
			set
			{
				User previousValue = this._Sales.Entity;
				if (((previousValue != value) 
							|| (this._Sales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sales.Entity = null;
						previousValue.CRMPLanSales.Remove(this);
					}
					this._Sales.Entity = value;
					if ((value != null))
					{
						value.CRMPLanSales.Add(this);
						this._SalesId = value.Id;
					}
					else
					{
						this._SalesId = default(long);
					}
					this.SendPropertyChanged("Sales");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMPlanProgMonths(CRMPlanProgMonth entity)
		{
			this.SendPropertyChanging();
			entity.CRMPLanSale = this;
		}
		
		private void detach_CRMPlanProgMonths(CRMPlanProgMonth entity)
		{
			this.SendPropertyChanging();
			entity.CRMPLanSale = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMPlanProgram")]
	public partial class CRMPlanProgram : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsSystem;
		
		private EntitySet<CRMPlanProgMonth> _CRMPlanProgMonths;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    #endregion
		
		public CRMPlanProgram()
		{
			this._CRMPlanProgMonths = new EntitySet<CRMPlanProgMonth>(new Action<CRMPlanProgMonth>(this.attach_CRMPlanProgMonths), new Action<CRMPlanProgMonth>(this.detach_CRMPlanProgMonths));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystem", DbType="Bit NOT NULL")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMPlanProgram_CRMPlanProgMonth", Storage="_CRMPlanProgMonths", ThisKey="Id", OtherKey="ProgramId")]
		public EntitySet<CRMPlanProgMonth> CRMPlanProgMonths
		{
			get
			{
				return this._CRMPlanProgMonths;
			}
			set
			{
				this._CRMPlanProgMonths.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMPlanProgMonths(CRMPlanProgMonth entity)
		{
			this.SendPropertyChanging();
			entity.CRMPlanProgram = this;
		}
		
		private void detach_CRMPlanProgMonths(CRMPlanProgMonth entity)
		{
			this.SendPropertyChanging();
			entity.CRMPlanProgram = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMPlanProgMonth")]
	public partial class CRMPlanProgMonth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _PlanYear;
		
		private int _ProgramId;
		
		private long _PlanSalesId;
		
		private EntitySet<CRMPlanMonth> _CRMPlanMonths;
		
		private EntityRef<CRMPlanProgram> _CRMPlanProgram;
		
		private EntityRef<CRMPLanSale> _CRMPLanSale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPlanYearChanging(int value);
    partial void OnPlanYearChanged();
    partial void OnProgramIdChanging(int value);
    partial void OnProgramIdChanged();
    partial void OnPlanSalesIdChanging(long value);
    partial void OnPlanSalesIdChanged();
    #endregion
		
		public CRMPlanProgMonth()
		{
			this._CRMPlanMonths = new EntitySet<CRMPlanMonth>(new Action<CRMPlanMonth>(this.attach_CRMPlanMonths), new Action<CRMPlanMonth>(this.detach_CRMPlanMonths));
			this._CRMPlanProgram = default(EntityRef<CRMPlanProgram>);
			this._CRMPLanSale = default(EntityRef<CRMPLanSale>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanYear", DbType="Int NOT NULL")]
		public int PlanYear
		{
			get
			{
				return this._PlanYear;
			}
			set
			{
				if ((this._PlanYear != value))
				{
					this.OnPlanYearChanging(value);
					this.SendPropertyChanging();
					this._PlanYear = value;
					this.SendPropertyChanged("PlanYear");
					this.OnPlanYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramId", DbType="Int NOT NULL")]
		public int ProgramId
		{
			get
			{
				return this._ProgramId;
			}
			set
			{
				if ((this._ProgramId != value))
				{
					if (this._CRMPlanProgram.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramId = value;
					this.SendPropertyChanged("ProgramId");
					this.OnProgramIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanSalesId", DbType="BigInt NOT NULL")]
		public long PlanSalesId
		{
			get
			{
				return this._PlanSalesId;
			}
			set
			{
				if ((this._PlanSalesId != value))
				{
					if (this._CRMPLanSale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanSalesIdChanging(value);
					this.SendPropertyChanging();
					this._PlanSalesId = value;
					this.SendPropertyChanged("PlanSalesId");
					this.OnPlanSalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMPlanProgMonth_CRMPlanMonth", Storage="_CRMPlanMonths", ThisKey="Id", OtherKey="ProgramMonthId")]
		public EntitySet<CRMPlanMonth> CRMPlanMonths
		{
			get
			{
				return this._CRMPlanMonths;
			}
			set
			{
				this._CRMPlanMonths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMPlanProgram_CRMPlanProgMonth", Storage="_CRMPlanProgram", ThisKey="ProgramId", OtherKey="Id", IsForeignKey=true)]
		public CRMPlanProgram CRMPlanProgram
		{
			get
			{
				return this._CRMPlanProgram.Entity;
			}
			set
			{
				CRMPlanProgram previousValue = this._CRMPlanProgram.Entity;
				if (((previousValue != value) 
							|| (this._CRMPlanProgram.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMPlanProgram.Entity = null;
						previousValue.CRMPlanProgMonths.Remove(this);
					}
					this._CRMPlanProgram.Entity = value;
					if ((value != null))
					{
						value.CRMPlanProgMonths.Add(this);
						this._ProgramId = value.Id;
					}
					else
					{
						this._ProgramId = default(int);
					}
					this.SendPropertyChanged("CRMPlanProgram");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMPLanSale_CRMPlanProgMonth", Storage="_CRMPLanSale", ThisKey="PlanSalesId", OtherKey="Id", IsForeignKey=true)]
		public CRMPLanSale CRMPLanSale
		{
			get
			{
				return this._CRMPLanSale.Entity;
			}
			set
			{
				CRMPLanSale previousValue = this._CRMPLanSale.Entity;
				if (((previousValue != value) 
							|| (this._CRMPLanSale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMPLanSale.Entity = null;
						previousValue.CRMPlanProgMonths.Remove(this);
					}
					this._CRMPLanSale.Entity = value;
					if ((value != null))
					{
						value.CRMPlanProgMonths.Add(this);
						this._PlanSalesId = value.Id;
					}
					else
					{
						this._PlanSalesId = default(long);
					}
					this.SendPropertyChanged("CRMPLanSale");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMPlanMonths(CRMPlanMonth entity)
		{
			this.SendPropertyChanging();
			entity.CRMPlanProgMonth = this;
		}
		
		private void detach_CRMPlanMonths(CRMPlanMonth entity)
		{
			this.SendPropertyChanging();
			entity.CRMPlanProgMonth = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMPlanMonth")]
	public partial class CRMPlanMonth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _PlanMonth;
		
		private int _PlanYear;
		
		private long _ProgramMonthId;
		
		private int _PlanValue;
		
		private EntityRef<CRMPlanProgMonth> _CRMPlanProgMonth;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPlanMonthChanging(int value);
    partial void OnPlanMonthChanged();
    partial void OnPlanYearChanging(int value);
    partial void OnPlanYearChanged();
    partial void OnProgramMonthIdChanging(long value);
    partial void OnProgramMonthIdChanged();
    partial void OnPlanValueChanging(int value);
    partial void OnPlanValueChanged();
    #endregion
		
		public CRMPlanMonth()
		{
			this._CRMPlanProgMonth = default(EntityRef<CRMPlanProgMonth>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanMonth", DbType="Int NOT NULL")]
		public int PlanMonth
		{
			get
			{
				return this._PlanMonth;
			}
			set
			{
				if ((this._PlanMonth != value))
				{
					this.OnPlanMonthChanging(value);
					this.SendPropertyChanging();
					this._PlanMonth = value;
					this.SendPropertyChanged("PlanMonth");
					this.OnPlanMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanYear", DbType="Int NOT NULL")]
		public int PlanYear
		{
			get
			{
				return this._PlanYear;
			}
			set
			{
				if ((this._PlanYear != value))
				{
					this.OnPlanYearChanging(value);
					this.SendPropertyChanging();
					this._PlanYear = value;
					this.SendPropertyChanged("PlanYear");
					this.OnPlanYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramMonthId", DbType="BigInt NOT NULL")]
		public long ProgramMonthId
		{
			get
			{
				return this._ProgramMonthId;
			}
			set
			{
				if ((this._ProgramMonthId != value))
				{
					if (this._CRMPlanProgMonth.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramMonthIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramMonthId = value;
					this.SendPropertyChanged("ProgramMonthId");
					this.OnProgramMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanValue", DbType="Int NOT NULL")]
		public int PlanValue
		{
			get
			{
				return this._PlanValue;
			}
			set
			{
				if ((this._PlanValue != value))
				{
					this.OnPlanValueChanging(value);
					this.SendPropertyChanging();
					this._PlanValue = value;
					this.SendPropertyChanged("PlanValue");
					this.OnPlanValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMPlanProgMonth_CRMPlanMonth", Storage="_CRMPlanProgMonth", ThisKey="ProgramMonthId", OtherKey="Id", IsForeignKey=true)]
		public CRMPlanProgMonth CRMPlanProgMonth
		{
			get
			{
				return this._CRMPlanProgMonth.Entity;
			}
			set
			{
				CRMPlanProgMonth previousValue = this._CRMPlanProgMonth.Entity;
				if (((previousValue != value) 
							|| (this._CRMPlanProgMonth.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMPlanProgMonth.Entity = null;
						previousValue.CRMPlanMonths.Remove(this);
					}
					this._CRMPlanProgMonth.Entity = value;
					if ((value != null))
					{
						value.CRMPlanMonths.Add(this);
						this._ProgramMonthId = value.Id;
					}
					else
					{
						this._ProgramMonthId = default(long);
					}
					this.SendPropertyChanged("CRMPlanProgMonth");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMCustomer")]
	public partial class CRMCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _CompanyName;
		
		private string _CompanyShortName;
		
		private System.Nullable<int> _CrmCategoryId;
		
		private System.Nullable<int> _CrmSourceId;
		
		private System.Nullable<int> _CrmStatusId;
		
		private System.Nullable<int> _CrmGroupId;
		
		private string _CrmAddress;
		
		private System.Nullable<int> _CrmDistrictId;
		
		private System.Nullable<long> _CrmProvinceId;
		
		private string _CrmPhone;
		
		private System.Nullable<long> _SaleTypeId;
		
		private System.Nullable<long> _CreatedById;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<long> _ModifyById;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private byte _CrmDataType;
		
		private string _Description;
		
		private System.Nullable<byte> _CustomerType;
		
		private System.Nullable<long> _SsmCusId;
		
		private bool _IsUserDelete;
		
		private System.Nullable<System.DateTime> _DateCancel;
		
		private EntitySet<CRMContact> _CRMContacts;
		
		private EntitySet<CRMPriceQuotation> _CRMPriceQuotations;
		
		private EntitySet<CRMCusDocument> _CRMCusDocuments;
		
		private EntitySet<CRMFollowCusUser> _CRMFollowCusUsers;
		
		private EntitySet<CRMVisit> _CRMVisits;
		
		private EntityRef<CRMGroup> _CRMGroup;
		
		private EntityRef<CRMJobCategory> _CRMJobCategory;
		
		private EntityRef<CRMSource> _CRMSource;
		
		private EntityRef<CRMStatus> _CRMStatus;
		
		private EntityRef<SaleType> _SaleType;
		
		private EntityRef<Province> _Province;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyShortNameChanging(string value);
    partial void OnCompanyShortNameChanged();
    partial void OnCrmCategoryIdChanging(System.Nullable<int> value);
    partial void OnCrmCategoryIdChanged();
    partial void OnCrmSourceIdChanging(System.Nullable<int> value);
    partial void OnCrmSourceIdChanged();
    partial void OnCrmStatusIdChanging(System.Nullable<int> value);
    partial void OnCrmStatusIdChanged();
    partial void OnCrmGroupIdChanging(System.Nullable<int> value);
    partial void OnCrmGroupIdChanged();
    partial void OnCrmAddressChanging(string value);
    partial void OnCrmAddressChanged();
    partial void OnCrmDistrictIdChanging(System.Nullable<int> value);
    partial void OnCrmDistrictIdChanged();
    partial void OnCrmProvinceIdChanging(System.Nullable<long> value);
    partial void OnCrmProvinceIdChanged();
    partial void OnCrmPhoneChanging(string value);
    partial void OnCrmPhoneChanged();
    partial void OnSaleTypeIdChanging(System.Nullable<long> value);
    partial void OnSaleTypeIdChanged();
    partial void OnCreatedByIdChanging(System.Nullable<long> value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByIdChanging(System.Nullable<long> value);
    partial void OnModifyByIdChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnCrmDataTypeChanging(byte value);
    partial void OnCrmDataTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCustomerTypeChanging(System.Nullable<byte> value);
    partial void OnCustomerTypeChanged();
    partial void OnSsmCusIdChanging(System.Nullable<long> value);
    partial void OnSsmCusIdChanged();
    partial void OnIsUserDeleteChanging(bool value);
    partial void OnIsUserDeleteChanged();
    partial void OnDateCancelChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCancelChanged();
    #endregion
		
		public CRMCustomer()
		{
			this._CRMContacts = new EntitySet<CRMContact>(new Action<CRMContact>(this.attach_CRMContacts), new Action<CRMContact>(this.detach_CRMContacts));
			this._CRMPriceQuotations = new EntitySet<CRMPriceQuotation>(new Action<CRMPriceQuotation>(this.attach_CRMPriceQuotations), new Action<CRMPriceQuotation>(this.detach_CRMPriceQuotations));
			this._CRMCusDocuments = new EntitySet<CRMCusDocument>(new Action<CRMCusDocument>(this.attach_CRMCusDocuments), new Action<CRMCusDocument>(this.detach_CRMCusDocuments));
			this._CRMFollowCusUsers = new EntitySet<CRMFollowCusUser>(new Action<CRMFollowCusUser>(this.attach_CRMFollowCusUsers), new Action<CRMFollowCusUser>(this.detach_CRMFollowCusUsers));
			this._CRMVisits = new EntitySet<CRMVisit>(new Action<CRMVisit>(this.attach_CRMVisits), new Action<CRMVisit>(this.detach_CRMVisits));
			this._CRMGroup = default(EntityRef<CRMGroup>);
			this._CRMJobCategory = default(EntityRef<CRMJobCategory>);
			this._CRMSource = default(EntityRef<CRMSource>);
			this._CRMStatus = default(EntityRef<CRMStatus>);
			this._SaleType = default(EntityRef<SaleType>);
			this._Province = default(EntityRef<Province>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyShortName", DbType="NVarChar(100)")]
		public string CompanyShortName
		{
			get
			{
				return this._CompanyShortName;
			}
			set
			{
				if ((this._CompanyShortName != value))
				{
					this.OnCompanyShortNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyShortName = value;
					this.SendPropertyChanged("CompanyShortName");
					this.OnCompanyShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmCategoryId", DbType="Int")]
		public System.Nullable<int> CrmCategoryId
		{
			get
			{
				return this._CrmCategoryId;
			}
			set
			{
				if ((this._CrmCategoryId != value))
				{
					if (this._CRMJobCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrmCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CrmCategoryId = value;
					this.SendPropertyChanged("CrmCategoryId");
					this.OnCrmCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmSourceId", DbType="Int")]
		public System.Nullable<int> CrmSourceId
		{
			get
			{
				return this._CrmSourceId;
			}
			set
			{
				if ((this._CrmSourceId != value))
				{
					if (this._CRMSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrmSourceIdChanging(value);
					this.SendPropertyChanging();
					this._CrmSourceId = value;
					this.SendPropertyChanged("CrmSourceId");
					this.OnCrmSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmStatusId", DbType="Int")]
		public System.Nullable<int> CrmStatusId
		{
			get
			{
				return this._CrmStatusId;
			}
			set
			{
				if ((this._CrmStatusId != value))
				{
					if (this._CRMStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrmStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CrmStatusId = value;
					this.SendPropertyChanged("CrmStatusId");
					this.OnCrmStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmGroupId", DbType="Int")]
		public System.Nullable<int> CrmGroupId
		{
			get
			{
				return this._CrmGroupId;
			}
			set
			{
				if ((this._CrmGroupId != value))
				{
					if (this._CRMGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrmGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CrmGroupId = value;
					this.SendPropertyChanged("CrmGroupId");
					this.OnCrmGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmAddress", DbType="NVarChar(250)")]
		public string CrmAddress
		{
			get
			{
				return this._CrmAddress;
			}
			set
			{
				if ((this._CrmAddress != value))
				{
					this.OnCrmAddressChanging(value);
					this.SendPropertyChanging();
					this._CrmAddress = value;
					this.SendPropertyChanged("CrmAddress");
					this.OnCrmAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmDistrictId", DbType="Int")]
		public System.Nullable<int> CrmDistrictId
		{
			get
			{
				return this._CrmDistrictId;
			}
			set
			{
				if ((this._CrmDistrictId != value))
				{
					this.OnCrmDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._CrmDistrictId = value;
					this.SendPropertyChanged("CrmDistrictId");
					this.OnCrmDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmProvinceId", DbType="BigInt")]
		public System.Nullable<long> CrmProvinceId
		{
			get
			{
				return this._CrmProvinceId;
			}
			set
			{
				if ((this._CrmProvinceId != value))
				{
					if (this._Province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrmProvinceIdChanging(value);
					this.SendPropertyChanging();
					this._CrmProvinceId = value;
					this.SendPropertyChanged("CrmProvinceId");
					this.OnCrmProvinceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmPhone", DbType="NVarChar(15)")]
		public string CrmPhone
		{
			get
			{
				return this._CrmPhone;
			}
			set
			{
				if ((this._CrmPhone != value))
				{
					this.OnCrmPhoneChanging(value);
					this.SendPropertyChanging();
					this._CrmPhone = value;
					this.SendPropertyChanged("CrmPhone");
					this.OnCrmPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleTypeId", DbType="BigInt")]
		public System.Nullable<long> SaleTypeId
		{
			get
			{
				return this._SaleTypeId;
			}
			set
			{
				if ((this._SaleTypeId != value))
				{
					if (this._SaleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSaleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SaleTypeId = value;
					this.SendPropertyChanged("SaleTypeId");
					this.OnSaleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt")]
		public System.Nullable<long> CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyById", DbType="BigInt")]
		public System.Nullable<long> ModifyById
		{
			get
			{
				return this._ModifyById;
			}
			set
			{
				if ((this._ModifyById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifyByIdChanging(value);
					this.SendPropertyChanging();
					this._ModifyById = value;
					this.SendPropertyChanged("ModifyById");
					this.OnModifyByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmDataType", DbType="TinyInt NOT NULL")]
		public byte CrmDataType
		{
			get
			{
				return this._CrmDataType;
			}
			set
			{
				if ((this._CrmDataType != value))
				{
					this.OnCrmDataTypeChanging(value);
					this.SendPropertyChanging();
					this._CrmDataType = value;
					this.SendPropertyChanged("CrmDataType");
					this.OnCrmDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="TinyInt")]
		public System.Nullable<byte> CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this.OnCustomerTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerType = value;
					this.SendPropertyChanged("CustomerType");
					this.OnCustomerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SsmCusId", DbType="BigInt")]
		public System.Nullable<long> SsmCusId
		{
			get
			{
				return this._SsmCusId;
			}
			set
			{
				if ((this._SsmCusId != value))
				{
					this.OnSsmCusIdChanging(value);
					this.SendPropertyChanging();
					this._SsmCusId = value;
					this.SendPropertyChanged("SsmCusId");
					this.OnSsmCusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUserDelete", DbType="Bit")]
		public bool IsUserDelete
		{
			get
			{
				return this._IsUserDelete;
			}
			set
			{
				if ((this._IsUserDelete != value))
				{
					this.OnIsUserDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsUserDelete = value;
					this.SendPropertyChanged("IsUserDelete");
					this.OnIsUserDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCancel", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCancel
		{
			get
			{
				return this._DateCancel;
			}
			set
			{
				if ((this._DateCancel != value))
				{
					this.OnDateCancelChanging(value);
					this.SendPropertyChanging();
					this._DateCancel = value;
					this.SendPropertyChanged("DateCancel");
					this.OnDateCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMCustomer_CRMContact", Storage="_CRMContacts", ThisKey="Id", OtherKey="CmrCustomerId")]
		public EntitySet<CRMContact> CRMContacts
		{
			get
			{
				return this._CRMContacts;
			}
			set
			{
				this._CRMContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMCustomer_CRMPriceQuotation", Storage="_CRMPriceQuotations", ThisKey="Id", OtherKey="CrmCusId")]
		public EntitySet<CRMPriceQuotation> CRMPriceQuotations
		{
			get
			{
				return this._CRMPriceQuotations;
			}
			set
			{
				this._CRMPriceQuotations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMCustomer_CRMCusDocument", Storage="_CRMCusDocuments", ThisKey="Id", OtherKey="CrmCusId")]
		public EntitySet<CRMCusDocument> CRMCusDocuments
		{
			get
			{
				return this._CRMCusDocuments;
			}
			set
			{
				this._CRMCusDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMCustomer_CRMFollowCusUser", Storage="_CRMFollowCusUsers", ThisKey="Id", OtherKey="CrmId")]
		public EntitySet<CRMFollowCusUser> CRMFollowCusUsers
		{
			get
			{
				return this._CRMFollowCusUsers;
			}
			set
			{
				this._CRMFollowCusUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMCustomer_CRMVisit", Storage="_CRMVisits", ThisKey="Id", OtherKey="CrmCusId")]
		public EntitySet<CRMVisit> CRMVisits
		{
			get
			{
				return this._CRMVisits;
			}
			set
			{
				this._CRMVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMGroup_CRMCustomer", Storage="_CRMGroup", ThisKey="CrmGroupId", OtherKey="Id", IsForeignKey=true, DeleteRule="SET NULL")]
		public CRMGroup CRMGroup
		{
			get
			{
				return this._CRMGroup.Entity;
			}
			set
			{
				CRMGroup previousValue = this._CRMGroup.Entity;
				if (((previousValue != value) 
							|| (this._CRMGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMGroup.Entity = null;
						previousValue.CRMCustomers.Remove(this);
					}
					this._CRMGroup.Entity = value;
					if ((value != null))
					{
						value.CRMCustomers.Add(this);
						this._CrmGroupId = value.Id;
					}
					else
					{
						this._CrmGroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRMGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMJobCategory_CRMCustomer", Storage="_CRMJobCategory", ThisKey="CrmCategoryId", OtherKey="Id", IsForeignKey=true, DeleteRule="SET NULL")]
		public CRMJobCategory CRMJobCategory
		{
			get
			{
				return this._CRMJobCategory.Entity;
			}
			set
			{
				CRMJobCategory previousValue = this._CRMJobCategory.Entity;
				if (((previousValue != value) 
							|| (this._CRMJobCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMJobCategory.Entity = null;
						previousValue.CRMCustomers.Remove(this);
					}
					this._CRMJobCategory.Entity = value;
					if ((value != null))
					{
						value.CRMCustomers.Add(this);
						this._CrmCategoryId = value.Id;
					}
					else
					{
						this._CrmCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRMJobCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMSource_CRMCustomer", Storage="_CRMSource", ThisKey="CrmSourceId", OtherKey="Id", IsForeignKey=true, DeleteRule="SET NULL")]
		public CRMSource CRMSource
		{
			get
			{
				return this._CRMSource.Entity;
			}
			set
			{
				CRMSource previousValue = this._CRMSource.Entity;
				if (((previousValue != value) 
							|| (this._CRMSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMSource.Entity = null;
						previousValue.CRMCustomers.Remove(this);
					}
					this._CRMSource.Entity = value;
					if ((value != null))
					{
						value.CRMCustomers.Add(this);
						this._CrmSourceId = value.Id;
					}
					else
					{
						this._CrmSourceId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRMSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMStatus_CRMCustomer", Storage="_CRMStatus", ThisKey="CrmStatusId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public CRMStatus CRMStatus
		{
			get
			{
				return this._CRMStatus.Entity;
			}
			set
			{
				CRMStatus previousValue = this._CRMStatus.Entity;
				if (((previousValue != value) 
							|| (this._CRMStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMStatus.Entity = null;
						previousValue.CRMCustomers.Remove(this);
					}
					this._CRMStatus.Entity = value;
					if ((value != null))
					{
						value.CRMCustomers.Add(this);
						this._CrmStatusId = value.Id;
					}
					else
					{
						this._CrmStatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRMStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SaleType_CRMCustomer", Storage="_SaleType", ThisKey="SaleTypeId", OtherKey="Id", IsForeignKey=true)]
		public SaleType SaleType
		{
			get
			{
				return this._SaleType.Entity;
			}
			set
			{
				SaleType previousValue = this._SaleType.Entity;
				if (((previousValue != value) 
							|| (this._SaleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SaleType.Entity = null;
						previousValue.CRMCustomers.Remove(this);
					}
					this._SaleType.Entity = value;
					if ((value != null))
					{
						value.CRMCustomers.Add(this);
						this._SaleTypeId = value.Id;
					}
					else
					{
						this._SaleTypeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SaleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_CRMCustomer", Storage="_Province", ThisKey="CrmProvinceId", OtherKey="Id", IsForeignKey=true)]
		public Province Province
		{
			get
			{
				return this._Province.Entity;
			}
			set
			{
				Province previousValue = this._Province.Entity;
				if (((previousValue != value) 
							|| (this._Province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Province.Entity = null;
						previousValue.CRMCustomers.Remove(this);
					}
					this._Province.Entity = value;
					if ((value != null))
					{
						value.CRMCustomers.Add(this);
						this._CrmProvinceId = value.Id;
					}
					else
					{
						this._CrmProvinceId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Province");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMCustomer", Storage="_User", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CRMCustomers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CRMCustomers.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMCustomer1", Storage="_User1", ThisKey="ModifyById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.CRMCustomers1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.CRMCustomers1.Add(this);
						this._ModifyById = value.Id;
					}
					else
					{
						this._ModifyById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMContacts(CRMContact entity)
		{
			this.SendPropertyChanging();
			entity.CRMCustomer = this;
		}
		
		private void detach_CRMContacts(CRMContact entity)
		{
			this.SendPropertyChanging();
			entity.CRMCustomer = null;
		}
		
		private void attach_CRMPriceQuotations(CRMPriceQuotation entity)
		{
			this.SendPropertyChanging();
			entity.CRMCustomer = this;
		}
		
		private void detach_CRMPriceQuotations(CRMPriceQuotation entity)
		{
			this.SendPropertyChanging();
			entity.CRMCustomer = null;
		}
		
		private void attach_CRMCusDocuments(CRMCusDocument entity)
		{
			this.SendPropertyChanging();
			entity.CRMCustomer = this;
		}
		
		private void detach_CRMCusDocuments(CRMCusDocument entity)
		{
			this.SendPropertyChanging();
			entity.CRMCustomer = null;
		}
		
		private void attach_CRMFollowCusUsers(CRMFollowCusUser entity)
		{
			this.SendPropertyChanging();
			entity.CRMCustomer = this;
		}
		
		private void detach_CRMFollowCusUsers(CRMFollowCusUser entity)
		{
			this.SendPropertyChanging();
			entity.CRMCustomer = null;
		}
		
		private void attach_CRMVisits(CRMVisit entity)
		{
			this.SendPropertyChanging();
			entity.CRMCustomer = this;
		}
		
		private void detach_CRMVisits(CRMVisit entity)
		{
			this.SendPropertyChanging();
			entity.CRMCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Province")]
	public partial class Province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _TimeZone;
		
		private long _CountryId;
		
		private EntitySet<CRMCustomer> _CRMCustomers;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTimeZoneChanging(string value);
    partial void OnTimeZoneChanged();
    partial void OnCountryIdChanging(long value);
    partial void OnCountryIdChanged();
    #endregion
		
		public Province()
		{
			this._CRMCustomers = new EntitySet<CRMCustomer>(new Action<CRMCustomer>(this.attach_CRMCustomers), new Action<CRMCustomer>(this.detach_CRMCustomers));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZone", DbType="NVarChar(50)")]
		public string TimeZone
		{
			get
			{
				return this._TimeZone;
			}
			set
			{
				if ((this._TimeZone != value))
				{
					this.OnTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._TimeZone = value;
					this.SendPropertyChanged("TimeZone");
					this.OnTimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="BigInt NOT NULL")]
		public long CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_CRMCustomer", Storage="_CRMCustomers", ThisKey="Id", OtherKey="CrmProvinceId")]
		public EntitySet<CRMCustomer> CRMCustomers
		{
			get
			{
				return this._CRMCustomers;
			}
			set
			{
				this._CRMCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Province", Storage="_Country", ThisKey="CountryId", OtherKey="Id", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Provinces.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Provinces.Add(this);
						this._CountryId = value.Id;
					}
					else
					{
						this._CountryId = default(long);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Province = this;
		}
		
		private void detach_CRMCustomers(CRMCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Province = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMPriceStatus")]
	public partial class CRMPriceStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private byte _Code;
		
		private bool _IsSystem;
		
		private EntitySet<CRMPriceQuotation> _CRMPriceQuotations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCodeChanging(byte value);
    partial void OnCodeChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    #endregion
		
		public CRMPriceStatus()
		{
			this._CRMPriceQuotations = new EntitySet<CRMPriceQuotation>(new Action<CRMPriceQuotation>(this.attach_CRMPriceQuotations), new Action<CRMPriceQuotation>(this.detach_CRMPriceQuotations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="TinyInt NOT NULL")]
		public byte Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystem", DbType="Bit NOT NULL")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMPriceStatus_CRMPriceQuotation", Storage="_CRMPriceQuotations", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<CRMPriceQuotation> CRMPriceQuotations
		{
			get
			{
				return this._CRMPriceQuotations;
			}
			set
			{
				this._CRMPriceQuotations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMPriceQuotations(CRMPriceQuotation entity)
		{
			this.SendPropertyChanging();
			entity.CRMPriceStatus = this;
		}
		
		private void detach_CRMPriceQuotations(CRMPriceQuotation entity)
		{
			this.SendPropertyChanging();
			entity.CRMPriceStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMFollowCusUser")]
	public partial class CRMFollowCusUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private long _CrmId;
		
		private bool _IsLook;
		
		private System.Nullable<long> _LockById;
		
		private System.Nullable<long> _AddById;
		
		private EntityRef<CRMCustomer> _CRMCustomer;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnCrmIdChanging(long value);
    partial void OnCrmIdChanged();
    partial void OnIsLookChanging(bool value);
    partial void OnIsLookChanged();
    partial void OnLockByIdChanging(System.Nullable<long> value);
    partial void OnLockByIdChanged();
    partial void OnAddByIdChanging(System.Nullable<long> value);
    partial void OnAddByIdChanged();
    #endregion
		
		public CRMFollowCusUser()
		{
			this._CRMCustomer = default(EntityRef<CRMCustomer>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmId", DbType="BigInt NOT NULL")]
		public long CrmId
		{
			get
			{
				return this._CrmId;
			}
			set
			{
				if ((this._CrmId != value))
				{
					if (this._CRMCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrmIdChanging(value);
					this.SendPropertyChanging();
					this._CrmId = value;
					this.SendPropertyChanged("CrmId");
					this.OnCrmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLook", DbType="Bit NOT NULL")]
		public bool IsLook
		{
			get
			{
				return this._IsLook;
			}
			set
			{
				if ((this._IsLook != value))
				{
					this.OnIsLookChanging(value);
					this.SendPropertyChanging();
					this._IsLook = value;
					this.SendPropertyChanged("IsLook");
					this.OnIsLookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockById", DbType="BigInt")]
		public System.Nullable<long> LockById
		{
			get
			{
				return this._LockById;
			}
			set
			{
				if ((this._LockById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLockByIdChanging(value);
					this.SendPropertyChanging();
					this._LockById = value;
					this.SendPropertyChanged("LockById");
					this.OnLockByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddById", DbType="BigInt")]
		public System.Nullable<long> AddById
		{
			get
			{
				return this._AddById;
			}
			set
			{
				if ((this._AddById != value))
				{
					this.OnAddByIdChanging(value);
					this.SendPropertyChanging();
					this._AddById = value;
					this.SendPropertyChanged("AddById");
					this.OnAddByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMCustomer_CRMFollowCusUser", Storage="_CRMCustomer", ThisKey="CrmId", OtherKey="Id", IsForeignKey=true)]
		public CRMCustomer CRMCustomer
		{
			get
			{
				return this._CRMCustomer.Entity;
			}
			set
			{
				CRMCustomer previousValue = this._CRMCustomer.Entity;
				if (((previousValue != value) 
							|| (this._CRMCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMCustomer.Entity = null;
						previousValue.CRMFollowCusUsers.Remove(this);
					}
					this._CRMCustomer.Entity = value;
					if ((value != null))
					{
						value.CRMFollowCusUsers.Add(this);
						this._CrmId = value.Id;
					}
					else
					{
						this._CrmId = default(long);
					}
					this.SendPropertyChanged("CRMCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMFollowCusUser", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CRMFollowCusUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CRMFollowCusUsers.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMFollowCusUser1", Storage="_User1", ThisKey="LockById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.CRMFollowCusUsers1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.CRMFollowCusUsers1.Add(this);
						this._LockById = value.Id;
					}
					else
					{
						this._LockById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMFollowEventUser")]
	public partial class CRMFollowEventUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private long _VisitId;
		
		private bool _IsLook;
		
		private long _AddById;
		
		private System.Nullable<long> _LockById;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<CRMVisit> _CRMVisit;
		
		private EntityRef<User> _User2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnVisitIdChanging(long value);
    partial void OnVisitIdChanged();
    partial void OnIsLookChanging(bool value);
    partial void OnIsLookChanged();
    partial void OnAddByIdChanging(long value);
    partial void OnAddByIdChanged();
    partial void OnLockByIdChanging(System.Nullable<long> value);
    partial void OnLockByIdChanged();
    #endregion
		
		public CRMFollowEventUser()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._CRMVisit = default(EntityRef<CRMVisit>);
			this._User2 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitId", DbType="BigInt NOT NULL")]
		public long VisitId
		{
			get
			{
				return this._VisitId;
			}
			set
			{
				if ((this._VisitId != value))
				{
					if (this._CRMVisit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIdChanging(value);
					this.SendPropertyChanging();
					this._VisitId = value;
					this.SendPropertyChanged("VisitId");
					this.OnVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLook", DbType="Bit NOT NULL")]
		public bool IsLook
		{
			get
			{
				return this._IsLook;
			}
			set
			{
				if ((this._IsLook != value))
				{
					this.OnIsLookChanging(value);
					this.SendPropertyChanging();
					this._IsLook = value;
					this.SendPropertyChanged("IsLook");
					this.OnIsLookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddById", DbType="BigInt NOT NULL")]
		public long AddById
		{
			get
			{
				return this._AddById;
			}
			set
			{
				if ((this._AddById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddByIdChanging(value);
					this.SendPropertyChanging();
					this._AddById = value;
					this.SendPropertyChanged("AddById");
					this.OnAddByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockById", DbType="BigInt")]
		public System.Nullable<long> LockById
		{
			get
			{
				return this._LockById;
			}
			set
			{
				if ((this._LockById != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLockByIdChanging(value);
					this.SendPropertyChanging();
					this._LockById = value;
					this.SendPropertyChanged("LockById");
					this.OnLockByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMFollowEventUser", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CRMFollowEventUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CRMFollowEventUsers.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMFollowEventUser1", Storage="_User1", ThisKey="AddById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.CRMFollowEventUsers1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.CRMFollowEventUsers1.Add(this);
						this._AddById = value.Id;
					}
					else
					{
						this._AddById = default(long);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMVisit_CRMFollowEventUser", Storage="_CRMVisit", ThisKey="VisitId", OtherKey="Id", IsForeignKey=true)]
		public CRMVisit CRMVisit
		{
			get
			{
				return this._CRMVisit.Entity;
			}
			set
			{
				CRMVisit previousValue = this._CRMVisit.Entity;
				if (((previousValue != value) 
							|| (this._CRMVisit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMVisit.Entity = null;
						previousValue.CRMFollowEventUsers.Remove(this);
					}
					this._CRMVisit.Entity = value;
					if ((value != null))
					{
						value.CRMFollowEventUsers.Add(this);
						this._VisitId = value.Id;
					}
					else
					{
						this._VisitId = default(long);
					}
					this.SendPropertyChanged("CRMVisit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMFollowEventUser2", Storage="_User2", ThisKey="LockById", OtherKey="Id", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.CRMFollowEventUsers2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.CRMFollowEventUsers2.Add(this);
						this._LockById = value.Id;
					}
					else
					{
						this._LockById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRMVisit")]
	public partial class CRMVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Description;
		
		private System.DateTime _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private byte _Status;
		
		private bool _IsSchedule;
		
		private System.DateTime _DateEvent;
		
		private bool _AllowEdit;
		
		private bool _AllowAdd;
		
		private bool _AllowViewList;
		
		private string _Subject;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDate;
		
		private long _CrmCusId;
		
		private System.Nullable<long> _ModifiedById;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _EventTypeId;
		
		private bool _IsEventAction;
		
		private System.Nullable<System.DateTime> _LastTimeReminder;
		
		private string _TimeOfRemider;
		
		private string _DayWeekOfRemider;
		
		private EntitySet<CRMFollowEventUser> _CRMFollowEventUsers;
		
		private EntityRef<CRMCustomer> _CRMCustomer;
		
		private EntityRef<CRMEventType> _CRMEventType;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnIsScheduleChanging(bool value);
    partial void OnIsScheduleChanged();
    partial void OnDateEventChanging(System.DateTime value);
    partial void OnDateEventChanged();
    partial void OnAllowEditChanging(bool value);
    partial void OnAllowEditChanged();
    partial void OnAllowAddChanging(bool value);
    partial void OnAllowAddChanged();
    partial void OnAllowViewListChanging(bool value);
    partial void OnAllowViewListChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCrmCusIdChanging(long value);
    partial void OnCrmCusIdChanged();
    partial void OnModifiedByIdChanging(System.Nullable<long> value);
    partial void OnModifiedByIdChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnEventTypeIdChanging(System.Nullable<int> value);
    partial void OnEventTypeIdChanged();
    partial void OnIsEventActionChanging(bool value);
    partial void OnIsEventActionChanged();
    partial void OnLastTimeReminderChanging(System.Nullable<System.DateTime> value);
    partial void OnLastTimeReminderChanged();
    partial void OnTimeOfRemiderChanging(string value);
    partial void OnTimeOfRemiderChanged();
    partial void OnDayWeekOfRemiderChanging(string value);
    partial void OnDayWeekOfRemiderChanged();
    #endregion
		
		public CRMVisit()
		{
			this._CRMFollowEventUsers = new EntitySet<CRMFollowEventUser>(new Action<CRMFollowEventUser>(this.attach_CRMFollowEventUsers), new Action<CRMFollowEventUser>(this.detach_CRMFollowEventUsers));
			this._CRMCustomer = default(EntityRef<CRMCustomer>);
			this._CRMEventType = default(EntityRef<CRMEventType>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSchedule", DbType="Bit NOT NULL")]
		public bool IsSchedule
		{
			get
			{
				return this._IsSchedule;
			}
			set
			{
				if ((this._IsSchedule != value))
				{
					this.OnIsScheduleChanging(value);
					this.SendPropertyChanging();
					this._IsSchedule = value;
					this.SendPropertyChanged("IsSchedule");
					this.OnIsScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEvent", DbType="DateTime NOT NULL")]
		public System.DateTime DateEvent
		{
			get
			{
				return this._DateEvent;
			}
			set
			{
				if ((this._DateEvent != value))
				{
					this.OnDateEventChanging(value);
					this.SendPropertyChanging();
					this._DateEvent = value;
					this.SendPropertyChanged("DateEvent");
					this.OnDateEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowEdit", DbType="Bit NOT NULL")]
		public bool AllowEdit
		{
			get
			{
				return this._AllowEdit;
			}
			set
			{
				if ((this._AllowEdit != value))
				{
					this.OnAllowEditChanging(value);
					this.SendPropertyChanging();
					this._AllowEdit = value;
					this.SendPropertyChanged("AllowEdit");
					this.OnAllowEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAdd", DbType="Bit NOT NULL")]
		public bool AllowAdd
		{
			get
			{
				return this._AllowAdd;
			}
			set
			{
				if ((this._AllowAdd != value))
				{
					this.OnAllowAddChanging(value);
					this.SendPropertyChanging();
					this._AllowAdd = value;
					this.SendPropertyChanged("AllowAdd");
					this.OnAllowAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowViewList", DbType="Bit NOT NULL")]
		public bool AllowViewList
		{
			get
			{
				return this._AllowViewList;
			}
			set
			{
				if ((this._AllowViewList != value))
				{
					this.OnAllowViewListChanging(value);
					this.SendPropertyChanging();
					this._AllowViewList = value;
					this.SendPropertyChanged("AllowViewList");
					this.OnAllowViewListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmCusId", DbType="BigInt NOT NULL")]
		public long CrmCusId
		{
			get
			{
				return this._CrmCusId;
			}
			set
			{
				if ((this._CrmCusId != value))
				{
					if (this._CRMCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrmCusIdChanging(value);
					this.SendPropertyChanging();
					this._CrmCusId = value;
					this.SendPropertyChanged("CrmCusId");
					this.OnCrmCusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedById", DbType="BigInt")]
		public System.Nullable<long> ModifiedById
		{
			get
			{
				return this._ModifiedById;
			}
			set
			{
				if ((this._ModifiedById != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedById = value;
					this.SendPropertyChanged("ModifiedById");
					this.OnModifiedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTypeId", DbType="Int")]
		public System.Nullable<int> EventTypeId
		{
			get
			{
				return this._EventTypeId;
			}
			set
			{
				if ((this._EventTypeId != value))
				{
					if (this._CRMEventType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EventTypeId = value;
					this.SendPropertyChanged("EventTypeId");
					this.OnEventTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEventAction", DbType="Bit NOT NULL")]
		public bool IsEventAction
		{
			get
			{
				return this._IsEventAction;
			}
			set
			{
				if ((this._IsEventAction != value))
				{
					this.OnIsEventActionChanging(value);
					this.SendPropertyChanging();
					this._IsEventAction = value;
					this.SendPropertyChanged("IsEventAction");
					this.OnIsEventActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTimeReminder", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastTimeReminder
		{
			get
			{
				return this._LastTimeReminder;
			}
			set
			{
				if ((this._LastTimeReminder != value))
				{
					this.OnLastTimeReminderChanging(value);
					this.SendPropertyChanging();
					this._LastTimeReminder = value;
					this.SendPropertyChanged("LastTimeReminder");
					this.OnLastTimeReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfRemider", DbType="VarChar(10)")]
		public string TimeOfRemider
		{
			get
			{
				return this._TimeOfRemider;
			}
			set
			{
				if ((this._TimeOfRemider != value))
				{
					this.OnTimeOfRemiderChanging(value);
					this.SendPropertyChanging();
					this._TimeOfRemider = value;
					this.SendPropertyChanged("TimeOfRemider");
					this.OnTimeOfRemiderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayWeekOfRemider", DbType="VarChar(50)")]
		public string DayWeekOfRemider
		{
			get
			{
				return this._DayWeekOfRemider;
			}
			set
			{
				if ((this._DayWeekOfRemider != value))
				{
					this.OnDayWeekOfRemiderChanging(value);
					this.SendPropertyChanging();
					this._DayWeekOfRemider = value;
					this.SendPropertyChanged("DayWeekOfRemider");
					this.OnDayWeekOfRemiderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMVisit_CRMFollowEventUser", Storage="_CRMFollowEventUsers", ThisKey="Id", OtherKey="VisitId")]
		public EntitySet<CRMFollowEventUser> CRMFollowEventUsers
		{
			get
			{
				return this._CRMFollowEventUsers;
			}
			set
			{
				this._CRMFollowEventUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMCustomer_CRMVisit", Storage="_CRMCustomer", ThisKey="CrmCusId", OtherKey="Id", IsForeignKey=true)]
		public CRMCustomer CRMCustomer
		{
			get
			{
				return this._CRMCustomer.Entity;
			}
			set
			{
				CRMCustomer previousValue = this._CRMCustomer.Entity;
				if (((previousValue != value) 
							|| (this._CRMCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMCustomer.Entity = null;
						previousValue.CRMVisits.Remove(this);
					}
					this._CRMCustomer.Entity = value;
					if ((value != null))
					{
						value.CRMVisits.Add(this);
						this._CrmCusId = value.Id;
					}
					else
					{
						this._CrmCusId = default(long);
					}
					this.SendPropertyChanged("CRMCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRMEventType_CRMVisit", Storage="_CRMEventType", ThisKey="EventTypeId", OtherKey="Id", IsForeignKey=true)]
		public CRMEventType CRMEventType
		{
			get
			{
				return this._CRMEventType.Entity;
			}
			set
			{
				CRMEventType previousValue = this._CRMEventType.Entity;
				if (((previousValue != value) 
							|| (this._CRMEventType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRMEventType.Entity = null;
						previousValue.CRMVisits.Remove(this);
					}
					this._CRMEventType.Entity = value;
					if ((value != null))
					{
						value.CRMVisits.Add(this);
						this._EventTypeId = value.Id;
					}
					else
					{
						this._EventTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRMEventType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMVisit", Storage="_User", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CRMVisits.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CRMVisits.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CRMVisit1", Storage="_User1", ThisKey="ModifiedById", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.CRMVisits1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.CRMVisits1.Add(this);
						this._ModifiedById = value.Id;
					}
					else
					{
						this._ModifiedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRMFollowEventUsers(CRMFollowEventUser entity)
		{
			this.SendPropertyChanging();
			entity.CRMVisit = this;
		}
		
		private void detach_CRMFollowEventUsers(CRMFollowEventUser entity)
		{
			this.SendPropertyChanging();
			entity.CRMVisit = null;
		}
	}
}
#pragma warning restore 1591
