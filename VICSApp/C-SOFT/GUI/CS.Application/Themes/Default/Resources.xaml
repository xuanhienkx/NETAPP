<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:converters="clr-namespace:CS.UI.Common.Converters;assembly=CS.UI.Common"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:contract="clr-namespace:CS.Common.Contract;assembly=CS.Common.Contract"
                    xmlns:local="clr-namespace:CS.UI.Common;assembly=CS.UI.Common"
                    xmlns:models="clr-namespace:CS.Common.Contract.Models;assembly=CS.Common.Contract"
                    xmlns:localization="clr-namespace:CS.UI.Common.Localization;assembly=CS.UI.Common">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="MahAppResources.Light.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--Application Setting-->

    <BitmapImage x:Key="LogoImage" UriSource="logo.png"/>
    <SolidColorBrush x:Key="MainBackground" Color="{DynamicResource BackgroundColor}"/>
    <SolidColorBrush x:Key="CSoftHighlightBrush" Color="#F9A51A"/>
    <SolidColorBrush x:Key="NotificationBackgroundBrush" Color="{DynamicResource ValidationErrorColor}"/>

    <SolidColorBrush x:Key="MenuSelectedForegroundBrush" Color="{DynamicResource Primary700}"/>
    <SolidColorBrush x:Key="MenuHoverBackgroundBrush" Color="#99A0D4EA"/>
    <SolidColorBrush x:Key="SubMenuBackgroundBrush" Color="#6653B7E2"/>

    <system:Boolean x:Key="True">True</system:Boolean>
    <system:Boolean x:Key="False">False</system:Boolean>

    <!--Converters-->
    <converters:StringFormatConverter x:Key="StringFormatConverter"/>
    <converters:EnumLocalizedConverter x:Key="EnumLocalizedConverter"/>
    <converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
    <converters:CharacterCasingConverter x:Key="CharacterCasingConverter"/>
    <converters:VisibilityByComparingConverter x:Key="VisibilityByComparingConverter" />
    <converters:VisibilityByComparingNotEqualConverter x:Key="VisibilityByCommparingNotEqualConverter"/>
    <converters:ComparingConverter x:Key="ComparingConverter"/>

    <!--Specific Styles-->
    <Style x:Key="HyperLinkTextBlock" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BorderDialogStyle" TargetType="Border">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Background"  Value="{StaticResource DialogBackgroundBrush}"/>
    </Style>

    <Thickness x:Key="ControlMargin">0 20 0 0</Thickness>
    <Thickness x:Key="ControlTabBody">20 0 10 0</Thickness>
    <Thickness x:Key="DialoglMargin">10 5 10 10</Thickness>
    <system:Double x:Key="SmallSize">12</system:Double>
    <system:Double x:Key="NormalSize">14</system:Double>
    <system:Double x:Key="ExtraNormalSize">16</system:Double>
    <system:Double x:Key="MediumSize">20</system:Double>
    <system:Double x:Key="LargeSize">40</system:Double>

    <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="UndoLimit" Value="0"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}" />
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="{StaticResource ControlMargin}" />
    </Style>

    <Style TargetType="{x:Type Viewbox}">
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Margin" Value="0 0 8 0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="CsErrorViewStyle" TargetType="{x:Type Label}">
        <Setter Property="Opacity" Value=".5"/>
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="Background" Value="#DDFFFFFF" />
        <Setter Property="Margin" Value="0 0 0 10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border x:Name="BorderErr" BorderBrush="Red"  RenderTransformOrigin="0.5,0.5" BorderThickness="0" >
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="AlertCircleOutline" 
                                                     Margin="0 0 10 5" Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"  TextWrapping="Wrap"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Content"  Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="BorderErr" Value="Collapsed" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CSoftToolbarButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}"
                            Command="{Binding Command, RelativeSource={RelativeSource TemplatedParent}}"  
                            CommandParameter="{Binding CommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                            Height="45">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                              VerticalAlignment="Center"/>
                            <TextBlock Text="{TemplateBinding ToolTip}" 
                                       Margin="5 0 0 0"
                                       VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--notification message-->
    <DataTemplate DataType="{x:Type contract:NotificationMessage}">
        <StackPanel Orientation="Horizontal" Margin="0">
            <materialDesign:PackIcon Kind="{Binding Icon}" Foreground="{Binding Foreground}" Height="30" Width="30" Margin="0 0 20 0"/>
            <TextBlock Text="{Binding Content}" VerticalAlignment="Center" TextWrapping="Wrap" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="NavigationLinkTemplate" DataType="{x:Type local:NavigationItem}">
        <StackPanel Orientation="Horizontal" Margin="0">
            <materialDesign:PackIcon Kind="ChevronRight" Height="35" Width="35" 
                                                         Foreground="{StaticResource AccentBaseColorBrush}"
                                                         VerticalAlignment="Center"/>
            <Button x:Name="Part_NavButton"
                    ToolTip="{Binding Description}"
                    Cursor="Hand"
                    Command="{Binding Path=DataContext.NavigationItemSelectedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}"
                    CommandParameter="{Binding}"
                    Margin="0" Padding="0"
                    VerticalAlignment="Center">
                <TextBlock x:Name="Part_NavLink"
                           Text="{Binding Title, Converter={StaticResource CharacterCasingConverter}, ConverterParameter={x:Static CharacterCasing.Upper}}" 
                           Margin="0 -3 0 0"
                           FontSize="16"/>
            </Button>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter TargetName="Part_NavButton" Property="Cursor" Value="Arrow"/>
                <Setter TargetName="Part_NavLink" Property="Foreground" Value="{StaticResource CSoftHighlightBrush}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
   
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockPopupBox">
        <Setter Property="Margin" Value="5 0 0 5" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>
    <Style TargetType="{x:Type Label}"  x:Key="LabelPopupBox">
        <Setter Property="Margin" Value="10 0 0 0" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Foreground" Value="LightSlateGray"/>
    </Style>

    <Style TargetType="{x:Type ItemsControl}" x:Key="PagerTemplate">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type local:NavigationItem}">
                    <Button x:Name="Nav_Button" 
                            Width="45" Height="32" 
                            Margin="1"
                            Background="{StaticResource AccentSelectedColorBrush}"
                            Foreground="{StaticResource PrimaryHueMidBrush}"
                            Content="{Binding Title}"
                            ToolTip="{Binding Description}"
                            Command="{Binding DataContext.NavigationButtonCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"
                            CommandParameter="{Binding}"/>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path}" Value="&gt;">
                            <Setter TargetName="Nav_Button" Property="Content" Value="{materialDesign:PackIcon ChevronRight}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path}" Value="&lt;">
                            <Setter TargetName="Nav_Button" Property="Content" Value="{materialDesign:PackIcon ChevronLeft}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="true">
                            <Setter TargetName="Nav_Button" Property="Background" Value="{StaticResource PrimaryHueMidBrush}"/>
                            <Setter TargetName="Nav_Button" Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>