#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoreStock
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SBS30")]
	public partial class CoreDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStockOrder(StockOrder instance);
    partial void UpdateStockOrder(StockOrder instance);
    partial void DeleteStockOrder(StockOrder instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    #endregion
		
		public CoreDBDataContext() : 
				base("Data Source=10.10.2.3\\db01_sqlserver;Initial Catalog=SBS30;Persist Security Info=" +
						"True;User ID=sa", mappingSource)
		{
			OnCreated();
		}
		
		public CoreDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<StockOrder> StockOrders
		{
			get
			{
				return this.GetTable<StockOrder>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockOrder")]
	public partial class StockOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderDate;
		
		private string _OrderTime;
		
		private int _OrderSeq;
		
		private string _OrderNo;
		
		private string _OrderType;
		
		private char _OrderSide;
		
		private char _BoardType;
		
		private string _StockCode;
		
		private decimal _OrderVolume;
		
		private decimal _OrderPrice;
		
		private decimal _OrderValue;
		
		private decimal _OrderFee;
		
		private string _CustomerID;
		
		private string _BranchCode;
		
		private string _TradeCode;
		
		private string _CustomerBranchCode;
		
		private string _CustomerTradeCode;
		
		private string _ReceivedBy;
		
		private string _ApprovedBy;
		
		private char _OrderStatus;
		
		private char _AlertCode;
		
		private string _Notes;
		
		private System.Nullable<int> _Session;
		
		private System.Nullable<System.DateTime> _TransactionDate;
		
		private System.Nullable<int> _RefNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderDateChanging(string value);
    partial void OnOrderDateChanged();
    partial void OnOrderTimeChanging(string value);
    partial void OnOrderTimeChanged();
    partial void OnOrderSeqChanging(int value);
    partial void OnOrderSeqChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnOrderTypeChanging(string value);
    partial void OnOrderTypeChanged();
    partial void OnOrderSideChanging(char value);
    partial void OnOrderSideChanged();
    partial void OnBoardTypeChanging(char value);
    partial void OnBoardTypeChanged();
    partial void OnStockCodeChanging(string value);
    partial void OnStockCodeChanged();
    partial void OnOrderVolumeChanging(decimal value);
    partial void OnOrderVolumeChanged();
    partial void OnOrderPriceChanging(decimal value);
    partial void OnOrderPriceChanged();
    partial void OnOrderValueChanging(decimal value);
    partial void OnOrderValueChanged();
    partial void OnOrderFeeChanging(decimal value);
    partial void OnOrderFeeChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnTradeCodeChanging(string value);
    partial void OnTradeCodeChanged();
    partial void OnCustomerBranchCodeChanging(string value);
    partial void OnCustomerBranchCodeChanged();
    partial void OnCustomerTradeCodeChanging(string value);
    partial void OnCustomerTradeCodeChanged();
    partial void OnReceivedByChanging(string value);
    partial void OnReceivedByChanged();
    partial void OnApprovedByChanging(string value);
    partial void OnApprovedByChanged();
    partial void OnOrderStatusChanging(char value);
    partial void OnOrderStatusChanged();
    partial void OnAlertCodeChanging(char value);
    partial void OnAlertCodeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSessionChanging(System.Nullable<int> value);
    partial void OnSessionChanged();
    partial void OnTransactionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransactionDateChanged();
    partial void OnRefNoChanging(System.Nullable<int> value);
    partial void OnRefNoChanged();
    #endregion
		
		public StockOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTime", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string OrderTime
		{
			get
			{
				return this._OrderTime;
			}
			set
			{
				if ((this._OrderTime != value))
				{
					this.OnOrderTimeChanging(value);
					this.SendPropertyChanging();
					this._OrderTime = value;
					this.SendPropertyChanged("OrderTime");
					this.OnOrderTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderSeq", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderSeq
		{
			get
			{
				return this._OrderSeq;
			}
			set
			{
				if ((this._OrderSeq != value))
				{
					this.OnOrderSeqChanging(value);
					this.SendPropertyChanging();
					this._OrderSeq = value;
					this.SendPropertyChanged("OrderSeq");
					this.OnOrderSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="VarChar(20)")]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderSide", DbType="Char(1) NOT NULL")]
		public char OrderSide
		{
			get
			{
				return this._OrderSide;
			}
			set
			{
				if ((this._OrderSide != value))
				{
					this.OnOrderSideChanging(value);
					this.SendPropertyChanging();
					this._OrderSide = value;
					this.SendPropertyChanged("OrderSide");
					this.OnOrderSideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardType", DbType="Char(1) NOT NULL")]
		public char BoardType
		{
			get
			{
				return this._BoardType;
			}
			set
			{
				if ((this._BoardType != value))
				{
					this.OnBoardTypeChanging(value);
					this.SendPropertyChanging();
					this._BoardType = value;
					this.SendPropertyChanged("BoardType");
					this.OnBoardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StockCode
		{
			get
			{
				return this._StockCode;
			}
			set
			{
				if ((this._StockCode != value))
				{
					this.OnStockCodeChanging(value);
					this.SendPropertyChanging();
					this._StockCode = value;
					this.SendPropertyChanged("StockCode");
					this.OnStockCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderVolume", DbType="Decimal(18,0) NOT NULL")]
		public decimal OrderVolume
		{
			get
			{
				return this._OrderVolume;
			}
			set
			{
				if ((this._OrderVolume != value))
				{
					this.OnOrderVolumeChanging(value);
					this.SendPropertyChanging();
					this._OrderVolume = value;
					this.SendPropertyChanged("OrderVolume");
					this.OnOrderVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPrice", DbType="Decimal(18,3) NOT NULL")]
		public decimal OrderPrice
		{
			get
			{
				return this._OrderPrice;
			}
			set
			{
				if ((this._OrderPrice != value))
				{
					this.OnOrderPriceChanging(value);
					this.SendPropertyChanging();
					this._OrderPrice = value;
					this.SendPropertyChanged("OrderPrice");
					this.OnOrderPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderValue", DbType="Decimal(28,0) NOT NULL")]
		public decimal OrderValue
		{
			get
			{
				return this._OrderValue;
			}
			set
			{
				if ((this._OrderValue != value))
				{
					this.OnOrderValueChanging(value);
					this.SendPropertyChanging();
					this._OrderValue = value;
					this.SendPropertyChanged("OrderValue");
					this.OnOrderValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderFee", DbType="Decimal(18,0) NOT NULL")]
		public decimal OrderFee
		{
			get
			{
				return this._OrderFee;
			}
			set
			{
				if ((this._OrderFee != value))
				{
					this.OnOrderFeeChanging(value);
					this.SendPropertyChanging();
					this._OrderFee = value;
					this.SendPropertyChanged("OrderFee");
					this.OnOrderFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeCode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TradeCode
		{
			get
			{
				return this._TradeCode;
			}
			set
			{
				if ((this._TradeCode != value))
				{
					this.OnTradeCodeChanging(value);
					this.SendPropertyChanging();
					this._TradeCode = value;
					this.SendPropertyChanged("TradeCode");
					this.OnTradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerBranchCode", DbType="VarChar(3)")]
		public string CustomerBranchCode
		{
			get
			{
				return this._CustomerBranchCode;
			}
			set
			{
				if ((this._CustomerBranchCode != value))
				{
					this.OnCustomerBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerBranchCode = value;
					this.SendPropertyChanged("CustomerBranchCode");
					this.OnCustomerBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTradeCode", DbType="VarChar(30)")]
		public string CustomerTradeCode
		{
			get
			{
				return this._CustomerTradeCode;
			}
			set
			{
				if ((this._CustomerTradeCode != value))
				{
					this.OnCustomerTradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerTradeCode = value;
					this.SendPropertyChanged("CustomerTradeCode");
					this.OnCustomerTradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedBy", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ReceivedBy
		{
			get
			{
				return this._ReceivedBy;
			}
			set
			{
				if ((this._ReceivedBy != value))
				{
					this.OnReceivedByChanging(value);
					this.SendPropertyChanging();
					this._ReceivedBy = value;
					this.SendPropertyChanged("ReceivedBy");
					this.OnReceivedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="VarChar(30)")]
		public string ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="Char(1) NOT NULL")]
		public char OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertCode", DbType="Char(1) NOT NULL")]
		public char AlertCode
		{
			get
			{
				return this._AlertCode;
			}
			set
			{
				if ((this._AlertCode != value))
				{
					this.OnAlertCodeChanging(value);
					this.SendPropertyChanging();
					this._AlertCode = value;
					this.SendPropertyChanged("AlertCode");
					this.OnAlertCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(100)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Session", DbType="Int")]
		public System.Nullable<int> Session
		{
			get
			{
				return this._Session;
			}
			set
			{
				if ((this._Session != value))
				{
					this.OnSessionChanging(value);
					this.SendPropertyChanging();
					this._Session = value;
					this.SendPropertyChanged("Session");
					this.OnSessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefNo", DbType="Int")]
		public System.Nullable<int> RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if ((this._RefNo != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BranchCode;
		
		private string _BranchName;
		
		private string _Address;
		
		private string _Tel;
		
		private string _Fax;
		
		private string _BankAccount;
		
		private string _BankName;
		
		private string _BankLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankLocationChanging(string value);
    partial void OnBankLocationChanged();
    #endregion
		
		public Branch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(100)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(20)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(100)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankLocation", DbType="NVarChar(20)")]
		public string BankLocation
		{
			get
			{
				return this._BankLocation;
			}
			set
			{
				if ((this._BankLocation != value))
				{
					this.OnBankLocationChanging(value);
					this.SendPropertyChanging();
					this._BankLocation = value;
					this.SendPropertyChanged("BankLocation");
					this.OnBankLocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
