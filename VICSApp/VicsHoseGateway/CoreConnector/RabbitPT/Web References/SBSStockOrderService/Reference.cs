//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace HOGW_PT_Dealer.SBSStockOrderService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StockOrderServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class StockOrderService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateStockOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStockOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockOrderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentTransactionDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderHistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalOrderHistOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StockOrderService() {
            this.Url = global::HOGW_PT_Dealer.Properties.Settings.Default.Rabbit_PT_SBSStockOrderService_StockOrderService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateStockOrderCompletedEventHandler CreateStockOrderCompleted;
        
        /// <remarks/>
        public event DeleteStockOrderCompletedEventHandler DeleteStockOrderCompleted;
        
        /// <remarks/>
        public event GetStockOrderListCompletedEventHandler GetStockOrderListCompleted;
        
        /// <remarks/>
        public event GetStockListCompletedEventHandler GetStockListCompleted;
        
        /// <remarks/>
        public event GetStockPriceCompletedEventHandler GetStockPriceCompleted;
        
        /// <remarks/>
        public event GetStockFeeCompletedEventHandler GetStockFeeCompleted;
        
        /// <remarks/>
        public event GetCurrentTransactionDateCompletedEventHandler GetCurrentTransactionDateCompleted;
        
        /// <remarks/>
        public event GetOrdersCompletedEventHandler GetOrdersCompleted;
        
        /// <remarks/>
        public event GetOrderHistCompletedEventHandler GetOrderHistCompleted;
        
        /// <remarks/>
        public event GetTotalOrderHistCompletedEventHandler GetTotalOrderHistCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateStockOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultData CreateStockOrder(string gatewayUserName, string gatewayPassword, string orderDate, string orderSide, string orderType, string stockCode, string orderVolume, string orderPrice, string customerID, string branchCode, string tradeCode, string receivedBy, string notes) {
            object[] results = this.Invoke("CreateStockOrder", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        orderDate,
                        orderSide,
                        orderType,
                        stockCode,
                        orderVolume,
                        orderPrice,
                        customerID,
                        branchCode,
                        tradeCode,
                        receivedBy,
                        notes});
            return ((ResultData)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStockOrderAsync(string gatewayUserName, string gatewayPassword, string orderDate, string orderSide, string orderType, string stockCode, string orderVolume, string orderPrice, string customerID, string branchCode, string tradeCode, string receivedBy, string notes) {
            this.CreateStockOrderAsync(gatewayUserName, gatewayPassword, orderDate, orderSide, orderType, stockCode, orderVolume, orderPrice, customerID, branchCode, tradeCode, receivedBy, notes, null);
        }
        
        /// <remarks/>
        public void CreateStockOrderAsync(string gatewayUserName, string gatewayPassword, string orderDate, string orderSide, string orderType, string stockCode, string orderVolume, string orderPrice, string customerID, string branchCode, string tradeCode, string receivedBy, string notes, object userState) {
            if ((this.CreateStockOrderOperationCompleted == null)) {
                this.CreateStockOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStockOrderOperationCompleted);
            }
            this.InvokeAsync("CreateStockOrder", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        orderDate,
                        orderSide,
                        orderType,
                        stockCode,
                        orderVolume,
                        orderPrice,
                        customerID,
                        branchCode,
                        tradeCode,
                        receivedBy,
                        notes}, this.CreateStockOrderOperationCompleted, userState);
        }
        
        private void OnCreateStockOrderOperationCompleted(object arg) {
            if ((this.CreateStockOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStockOrderCompleted(this, new CreateStockOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStockOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultData DeleteStockOrder(string gatewayUserName, string gatewayPassword, string orderDate, string orderSeq, string deleteBy) {
            object[] results = this.Invoke("DeleteStockOrder", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        orderDate,
                        orderSeq,
                        deleteBy});
            return ((ResultData)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStockOrderAsync(string gatewayUserName, string gatewayPassword, string orderDate, string orderSeq, string deleteBy) {
            this.DeleteStockOrderAsync(gatewayUserName, gatewayPassword, orderDate, orderSeq, deleteBy, null);
        }
        
        /// <remarks/>
        public void DeleteStockOrderAsync(string gatewayUserName, string gatewayPassword, string orderDate, string orderSeq, string deleteBy, object userState) {
            if ((this.DeleteStockOrderOperationCompleted == null)) {
                this.DeleteStockOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStockOrderOperationCompleted);
            }
            this.InvokeAsync("DeleteStockOrder", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        orderDate,
                        orderSeq,
                        deleteBy}, this.DeleteStockOrderOperationCompleted, userState);
        }
        
        private void OnDeleteStockOrderOperationCompleted(object arg) {
            if ((this.DeleteStockOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStockOrderCompleted(this, new DeleteStockOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockOrderList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderBookData[] GetStockOrderList(string gatewayUserName, string gatewayPassword, string customerID) {
            object[] results = this.Invoke("GetStockOrderList", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        customerID});
            return ((OrderBookData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStockOrderListAsync(string gatewayUserName, string gatewayPassword, string customerID) {
            this.GetStockOrderListAsync(gatewayUserName, gatewayPassword, customerID, null);
        }
        
        /// <remarks/>
        public void GetStockOrderListAsync(string gatewayUserName, string gatewayPassword, string customerID, object userState) {
            if ((this.GetStockOrderListOperationCompleted == null)) {
                this.GetStockOrderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockOrderListOperationCompleted);
            }
            this.InvokeAsync("GetStockOrderList", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        customerID}, this.GetStockOrderListOperationCompleted, userState);
        }
        
        private void OnGetStockOrderListOperationCompleted(object arg) {
            if ((this.GetStockOrderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockOrderListCompleted(this, new GetStockOrderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StockData[] GetStockList(string gatewayUserName, string gatewayPassword) {
            object[] results = this.Invoke("GetStockList", new object[] {
                        gatewayUserName,
                        gatewayPassword});
            return ((StockData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStockListAsync(string gatewayUserName, string gatewayPassword) {
            this.GetStockListAsync(gatewayUserName, gatewayPassword, null);
        }
        
        /// <remarks/>
        public void GetStockListAsync(string gatewayUserName, string gatewayPassword, object userState) {
            if ((this.GetStockListOperationCompleted == null)) {
                this.GetStockListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockListOperationCompleted);
            }
            this.InvokeAsync("GetStockList", new object[] {
                        gatewayUserName,
                        gatewayPassword}, this.GetStockListOperationCompleted, userState);
        }
        
        private void OnGetStockListOperationCompleted(object arg) {
            if ((this.GetStockListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockListCompleted(this, new GetStockListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StockPrice GetStockPrice(string gatewayUserName, string gatewayPassword, string transactionDate, string stockCode) {
            object[] results = this.Invoke("GetStockPrice", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        transactionDate,
                        stockCode});
            return ((StockPrice)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockPriceAsync(string gatewayUserName, string gatewayPassword, string transactionDate, string stockCode) {
            this.GetStockPriceAsync(gatewayUserName, gatewayPassword, transactionDate, stockCode, null);
        }
        
        /// <remarks/>
        public void GetStockPriceAsync(string gatewayUserName, string gatewayPassword, string transactionDate, string stockCode, object userState) {
            if ((this.GetStockPriceOperationCompleted == null)) {
                this.GetStockPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockPriceOperationCompleted);
            }
            this.InvokeAsync("GetStockPrice", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        transactionDate,
                        stockCode}, this.GetStockPriceOperationCompleted, userState);
        }
        
        private void OnGetStockPriceOperationCompleted(object arg) {
            if ((this.GetStockPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockPriceCompleted(this, new GetStockPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockFee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetStockFee(string gatewayUserName, string gatewayPassword, string customerID, string stockCode, string tradingVolume) {
            object[] results = this.Invoke("GetStockFee", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        customerID,
                        stockCode,
                        tradingVolume});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockFeeAsync(string gatewayUserName, string gatewayPassword, string customerID, string stockCode, string tradingVolume) {
            this.GetStockFeeAsync(gatewayUserName, gatewayPassword, customerID, stockCode, tradingVolume, null);
        }
        
        /// <remarks/>
        public void GetStockFeeAsync(string gatewayUserName, string gatewayPassword, string customerID, string stockCode, string tradingVolume, object userState) {
            if ((this.GetStockFeeOperationCompleted == null)) {
                this.GetStockFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockFeeOperationCompleted);
            }
            this.InvokeAsync("GetStockFee", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        customerID,
                        stockCode,
                        tradingVolume}, this.GetStockFeeOperationCompleted, userState);
        }
        
        private void OnGetStockFeeOperationCompleted(object arg) {
            if ((this.GetStockFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockFeeCompleted(this, new GetStockFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentTransactionDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentTransactionDate(string gatewayUserName, string gatewayPassword, string branchCode) {
            object[] results = this.Invoke("GetCurrentTransactionDate", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        branchCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentTransactionDateAsync(string gatewayUserName, string gatewayPassword, string branchCode) {
            this.GetCurrentTransactionDateAsync(gatewayUserName, gatewayPassword, branchCode, null);
        }
        
        /// <remarks/>
        public void GetCurrentTransactionDateAsync(string gatewayUserName, string gatewayPassword, string branchCode, object userState) {
            if ((this.GetCurrentTransactionDateOperationCompleted == null)) {
                this.GetCurrentTransactionDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentTransactionDateOperationCompleted);
            }
            this.InvokeAsync("GetCurrentTransactionDate", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        branchCode}, this.GetCurrentTransactionDateOperationCompleted, userState);
        }
        
        private void OnGetCurrentTransactionDateOperationCompleted(object arg) {
            if ((this.GetCurrentTransactionDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentTransactionDateCompleted(this, new GetCurrentTransactionDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StockOrderData[] GetOrders(string gatewayUserName, string gatewayPassword, string orderDate, string customerID, string orderStatus, string receivedBy) {
            object[] results = this.Invoke("GetOrders", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        orderDate,
                        customerID,
                        orderStatus,
                        receivedBy});
            return ((StockOrderData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersAsync(string gatewayUserName, string gatewayPassword, string orderDate, string customerID, string orderStatus, string receivedBy) {
            this.GetOrdersAsync(gatewayUserName, gatewayPassword, orderDate, customerID, orderStatus, receivedBy, null);
        }
        
        /// <remarks/>
        public void GetOrdersAsync(string gatewayUserName, string gatewayPassword, string orderDate, string customerID, string orderStatus, string receivedBy, object userState) {
            if ((this.GetOrdersOperationCompleted == null)) {
                this.GetOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersOperationCompleted);
            }
            this.InvokeAsync("GetOrders", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        orderDate,
                        customerID,
                        orderStatus,
                        receivedBy}, this.GetOrdersOperationCompleted, userState);
        }
        
        private void OnGetOrdersOperationCompleted(object arg) {
            if ((this.GetOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersCompleted(this, new GetOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderHist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StockOrderData[] GetOrderHist(string gatewayUserName, string gatewayPassword, string fromDate, string toDate, string customerID, string startIndex, string count) {
            object[] results = this.Invoke("GetOrderHist", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        fromDate,
                        toDate,
                        customerID,
                        startIndex,
                        count});
            return ((StockOrderData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderHistAsync(string gatewayUserName, string gatewayPassword, string fromDate, string toDate, string customerID, string startIndex, string count) {
            this.GetOrderHistAsync(gatewayUserName, gatewayPassword, fromDate, toDate, customerID, startIndex, count, null);
        }
        
        /// <remarks/>
        public void GetOrderHistAsync(string gatewayUserName, string gatewayPassword, string fromDate, string toDate, string customerID, string startIndex, string count, object userState) {
            if ((this.GetOrderHistOperationCompleted == null)) {
                this.GetOrderHistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderHistOperationCompleted);
            }
            this.InvokeAsync("GetOrderHist", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        fromDate,
                        toDate,
                        customerID,
                        startIndex,
                        count}, this.GetOrderHistOperationCompleted, userState);
        }
        
        private void OnGetOrderHistOperationCompleted(object arg) {
            if ((this.GetOrderHistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderHistCompleted(this, new GetOrderHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotalOrderHist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTotalOrderHist(string gatewayUserName, string gatewayPassword, string fromDate, string toDate, string customerID) {
            object[] results = this.Invoke("GetTotalOrderHist", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        fromDate,
                        toDate,
                        customerID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalOrderHistAsync(string gatewayUserName, string gatewayPassword, string fromDate, string toDate, string customerID) {
            this.GetTotalOrderHistAsync(gatewayUserName, gatewayPassword, fromDate, toDate, customerID, null);
        }
        
        /// <remarks/>
        public void GetTotalOrderHistAsync(string gatewayUserName, string gatewayPassword, string fromDate, string toDate, string customerID, object userState) {
            if ((this.GetTotalOrderHistOperationCompleted == null)) {
                this.GetTotalOrderHistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalOrderHistOperationCompleted);
            }
            this.InvokeAsync("GetTotalOrderHist", new object[] {
                        gatewayUserName,
                        gatewayPassword,
                        fromDate,
                        toDate,
                        customerID}, this.GetTotalOrderHistOperationCompleted, userState);
        }
        
        private void OnGetTotalOrderHistOperationCompleted(object arg) {
            if ((this.GetTotalOrderHistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalOrderHistCompleted(this, new GetTotalOrderHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResultData {
        
        private bool successfulField;
        
        private string errorMessageField;
        
        private object[] returnValueField;
        
        /// <remarks/>
        public bool Successful {
            get {
                return this.successfulField;
            }
            set {
                this.successfulField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public object[] ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StockOrderData {
        
        private string customerIDField;
        
        private string branchCodeField;
        
        private string tradeCodeField;
        
        private string orderDateField;
        
        private string orderTimeField;
        
        private int orderSeqField;
        
        private string orderNoField;
        
        private string orderTypeField;
        
        private string orderSideField;
        
        private string boardTypeField;
        
        private string stockCodeField;
        
        private string stockTypeField;
        
        private decimal orderVolumeField;
        
        private decimal orderPriceField;
        
        private string pCFlagField;
        
        private string orderStatusField;
        
        private decimal matchedVolumeField;
        
        private decimal matchedPriceField;
        
        private decimal matchedValueField;
        
        private decimal feeRateField;
        
        private decimal feeField;
        
        private decimal publishedVolumeField;
        
        private decimal publishedPriceField;
        
        private decimal publishedValueField;
        
        private decimal cancelledVolumeField;
        
        private string receivedByField;
        
        private string approvedByField;
        
        private string notesField;
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TradeCode {
            get {
                return this.tradeCodeField;
            }
            set {
                this.tradeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        public string OrderTime {
            get {
                return this.orderTimeField;
            }
            set {
                this.orderTimeField = value;
            }
        }
        
        /// <remarks/>
        public int OrderSeq {
            get {
                return this.orderSeqField;
            }
            set {
                this.orderSeqField = value;
            }
        }
        
        /// <remarks/>
        public string OrderNo {
            get {
                return this.orderNoField;
            }
            set {
                this.orderNoField = value;
            }
        }
        
        /// <remarks/>
        public string OrderType {
            get {
                return this.orderTypeField;
            }
            set {
                this.orderTypeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderSide {
            get {
                return this.orderSideField;
            }
            set {
                this.orderSideField = value;
            }
        }
        
        /// <remarks/>
        public string BoardType {
            get {
                return this.boardTypeField;
            }
            set {
                this.boardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string StockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public string StockType {
            get {
                return this.stockTypeField;
            }
            set {
                this.stockTypeField = value;
            }
        }
        
        /// <remarks/>
        public decimal OrderVolume {
            get {
                return this.orderVolumeField;
            }
            set {
                this.orderVolumeField = value;
            }
        }
        
        /// <remarks/>
        public decimal OrderPrice {
            get {
                return this.orderPriceField;
            }
            set {
                this.orderPriceField = value;
            }
        }
        
        /// <remarks/>
        public string PCFlag {
            get {
                return this.pCFlagField;
            }
            set {
                this.pCFlagField = value;
            }
        }
        
        /// <remarks/>
        public string OrderStatus {
            get {
                return this.orderStatusField;
            }
            set {
                this.orderStatusField = value;
            }
        }
        
        /// <remarks/>
        public decimal MatchedVolume {
            get {
                return this.matchedVolumeField;
            }
            set {
                this.matchedVolumeField = value;
            }
        }
        
        /// <remarks/>
        public decimal MatchedPrice {
            get {
                return this.matchedPriceField;
            }
            set {
                this.matchedPriceField = value;
            }
        }
        
        /// <remarks/>
        public decimal MatchedValue {
            get {
                return this.matchedValueField;
            }
            set {
                this.matchedValueField = value;
            }
        }
        
        /// <remarks/>
        public decimal FeeRate {
            get {
                return this.feeRateField;
            }
            set {
                this.feeRateField = value;
            }
        }
        
        /// <remarks/>
        public decimal Fee {
            get {
                return this.feeField;
            }
            set {
                this.feeField = value;
            }
        }
        
        /// <remarks/>
        public decimal PublishedVolume {
            get {
                return this.publishedVolumeField;
            }
            set {
                this.publishedVolumeField = value;
            }
        }
        
        /// <remarks/>
        public decimal PublishedPrice {
            get {
                return this.publishedPriceField;
            }
            set {
                this.publishedPriceField = value;
            }
        }
        
        /// <remarks/>
        public decimal PublishedValue {
            get {
                return this.publishedValueField;
            }
            set {
                this.publishedValueField = value;
            }
        }
        
        /// <remarks/>
        public decimal CancelledVolume {
            get {
                return this.cancelledVolumeField;
            }
            set {
                this.cancelledVolumeField = value;
            }
        }
        
        /// <remarks/>
        public string ReceivedBy {
            get {
                return this.receivedByField;
            }
            set {
                this.receivedByField = value;
            }
        }
        
        /// <remarks/>
        public string ApprovedBy {
            get {
                return this.approvedByField;
            }
            set {
                this.approvedByField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StockPrice {
        
        private string tradingDateField;
        
        private string stockCodeField;
        
        private string stockTypeField;
        
        private decimal ceilingPriceField;
        
        private decimal floorPriceField;
        
        private decimal basicPriceField;
        
        private string boardTypeField;
        
        private string boardNameField;
        
        private int boardLotField;
        
        /// <remarks/>
        public string TradingDate {
            get {
                return this.tradingDateField;
            }
            set {
                this.tradingDateField = value;
            }
        }
        
        /// <remarks/>
        public string StockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public string StockType {
            get {
                return this.stockTypeField;
            }
            set {
                this.stockTypeField = value;
            }
        }
        
        /// <remarks/>
        public decimal CeilingPrice {
            get {
                return this.ceilingPriceField;
            }
            set {
                this.ceilingPriceField = value;
            }
        }
        
        /// <remarks/>
        public decimal FloorPrice {
            get {
                return this.floorPriceField;
            }
            set {
                this.floorPriceField = value;
            }
        }
        
        /// <remarks/>
        public decimal BasicPrice {
            get {
                return this.basicPriceField;
            }
            set {
                this.basicPriceField = value;
            }
        }
        
        /// <remarks/>
        public string BoardType {
            get {
                return this.boardTypeField;
            }
            set {
                this.boardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BoardName {
            get {
                return this.boardNameField;
            }
            set {
                this.boardNameField = value;
            }
        }
        
        /// <remarks/>
        public int BoardLot {
            get {
                return this.boardLotField;
            }
            set {
                this.boardLotField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StockData {
        
        private int idField;
        
        private string stockCodeField;
        
        private string stockTypeField;
        
        private string stockNameField;
        
        private decimal parValueField;
        
        private string shortNameField;
        
        private string boardTypeField;
        
        private string stockNameVietField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string StockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public string StockType {
            get {
                return this.stockTypeField;
            }
            set {
                this.stockTypeField = value;
            }
        }
        
        /// <remarks/>
        public string StockName {
            get {
                return this.stockNameField;
            }
            set {
                this.stockNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal ParValue {
            get {
                return this.parValueField;
            }
            set {
                this.parValueField = value;
            }
        }
        
        /// <remarks/>
        public string ShortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
        
        /// <remarks/>
        public string BoardType {
            get {
                return this.boardTypeField;
            }
            set {
                this.boardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string StockNameViet {
            get {
                return this.stockNameVietField;
            }
            set {
                this.stockNameVietField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrderBookData {
        
        private string orderDateField;
        
        private string orderTimeField;
        
        private int orderSeqField;
        
        private string branchCodeField;
        
        private string tradeCodeField;
        
        private string orderNoField;
        
        private string orderTypeField;
        
        private string orderSideField;
        
        private string boardTypeField;
        
        private string stockCodeField;
        
        private string stockTypeField;
        
        private decimal orderVolumeField;
        
        private decimal orderPriceField;
        
        private string customerIDField;
        
        private string pCFlagField;
        
        private string orderStatusField;
        
        private decimal matchedVolumeField;
        
        private decimal matchedValueField;
        
        private decimal feeRateField;
        
        private decimal publishedVolumeField;
        
        private decimal publishedPriceField;
        
        private decimal cancelledVolumeField;
        
        private string receivedByField;
        
        private string approvedByField;
        
        private string notesField;
        
        /// <remarks/>
        public string OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        public string OrderTime {
            get {
                return this.orderTimeField;
            }
            set {
                this.orderTimeField = value;
            }
        }
        
        /// <remarks/>
        public int OrderSeq {
            get {
                return this.orderSeqField;
            }
            set {
                this.orderSeqField = value;
            }
        }
        
        /// <remarks/>
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TradeCode {
            get {
                return this.tradeCodeField;
            }
            set {
                this.tradeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderNo {
            get {
                return this.orderNoField;
            }
            set {
                this.orderNoField = value;
            }
        }
        
        /// <remarks/>
        public string OrderType {
            get {
                return this.orderTypeField;
            }
            set {
                this.orderTypeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderSide {
            get {
                return this.orderSideField;
            }
            set {
                this.orderSideField = value;
            }
        }
        
        /// <remarks/>
        public string BoardType {
            get {
                return this.boardTypeField;
            }
            set {
                this.boardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string StockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public string StockType {
            get {
                return this.stockTypeField;
            }
            set {
                this.stockTypeField = value;
            }
        }
        
        /// <remarks/>
        public decimal OrderVolume {
            get {
                return this.orderVolumeField;
            }
            set {
                this.orderVolumeField = value;
            }
        }
        
        /// <remarks/>
        public decimal OrderPrice {
            get {
                return this.orderPriceField;
            }
            set {
                this.orderPriceField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string PCFlag {
            get {
                return this.pCFlagField;
            }
            set {
                this.pCFlagField = value;
            }
        }
        
        /// <remarks/>
        public string OrderStatus {
            get {
                return this.orderStatusField;
            }
            set {
                this.orderStatusField = value;
            }
        }
        
        /// <remarks/>
        public decimal MatchedVolume {
            get {
                return this.matchedVolumeField;
            }
            set {
                this.matchedVolumeField = value;
            }
        }
        
        /// <remarks/>
        public decimal MatchedValue {
            get {
                return this.matchedValueField;
            }
            set {
                this.matchedValueField = value;
            }
        }
        
        /// <remarks/>
        public decimal FeeRate {
            get {
                return this.feeRateField;
            }
            set {
                this.feeRateField = value;
            }
        }
        
        /// <remarks/>
        public decimal PublishedVolume {
            get {
                return this.publishedVolumeField;
            }
            set {
                this.publishedVolumeField = value;
            }
        }
        
        /// <remarks/>
        public decimal PublishedPrice {
            get {
                return this.publishedPriceField;
            }
            set {
                this.publishedPriceField = value;
            }
        }
        
        /// <remarks/>
        public decimal CancelledVolume {
            get {
                return this.cancelledVolumeField;
            }
            set {
                this.cancelledVolumeField = value;
            }
        }
        
        /// <remarks/>
        public string ReceivedBy {
            get {
                return this.receivedByField;
            }
            set {
                this.receivedByField = value;
            }
        }
        
        /// <remarks/>
        public string ApprovedBy {
            get {
                return this.approvedByField;
            }
            set {
                this.approvedByField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CreateStockOrderCompletedEventHandler(object sender, CreateStockOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStockOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStockOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteStockOrderCompletedEventHandler(object sender, DeleteStockOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStockOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStockOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetStockOrderListCompletedEventHandler(object sender, GetStockOrderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockOrderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockOrderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderBookData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderBookData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetStockListCompletedEventHandler(object sender, GetStockListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StockData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StockData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetStockPriceCompletedEventHandler(object sender, GetStockPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StockPrice Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StockPrice)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetStockFeeCompletedEventHandler(object sender, GetStockFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCurrentTransactionDateCompletedEventHandler(object sender, GetCurrentTransactionDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentTransactionDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentTransactionDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetOrdersCompletedEventHandler(object sender, GetOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StockOrderData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StockOrderData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetOrderHistCompletedEventHandler(object sender, GetOrderHistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderHistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderHistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StockOrderData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StockOrderData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetTotalOrderHistCompletedEventHandler(object sender, GetTotalOrderHistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalOrderHistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalOrderHistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591