//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace VRMApp.VRMGateway {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VRMServiceSoap", Namespace="http://vics.vn/")]
    public partial class VRMService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SaveVariableCapitalPricOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVariableCapitalPricOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataForCallFeeCustoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTransactionFeeCustodyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSecurityLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAccountingCustodyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SummaryCustodyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSummaryTradingOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloVicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuthorizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearTokenKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentTransactionDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAccessStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserAccessStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVRMCustomerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserTakeCareOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindContractsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractsForDisburseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractsForWithdrawOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateInTermContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerAssetInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerAssetInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerAssetInfoListForDebtOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefferedTDayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefferedListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeferringTDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerDeferredTranListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTransCodeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindDeferredTDayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisburseContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback WithdrawContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDebitLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWithdrawDeferredTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRetreiveInterestTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInterestTransactionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIssuedTransactionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteIssuedTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnBlockBalanceAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlockBalanceAndDebitLimitInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDebitLimitInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerStockEnquiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowBalanceAccountTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdvanceBankTransactionReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpireContractStatusReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMissingStocksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRightExecNotPayYetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRightExecRegisterNotPayYetOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelRightExecOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBuyCashContractListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeBuyCashContractStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBuyCashContractReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefinedBalanceAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBankBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBankBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBankBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankBranchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProvinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAccountTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountTransferListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnlineTransferChangeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnlineTransferReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnlineRegistedReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnlineTransferListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnlineTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInterestRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSbsIncomeTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKtIncomeTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertKtIncomeTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback VariableCapitalPricesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public VRMService() {
            this.Url = global::VRMApp.Properties.Settings.Default.VRMApp_VRMGateway_VRMService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SaveVariableCapitalPricCompletedEventHandler SaveVariableCapitalPricCompleted;
        
        /// <remarks/>
        public event DeleteVariableCapitalPricCompletedEventHandler DeleteVariableCapitalPricCompleted;
        
        /// <remarks/>
        public event GetDataForCallFeeCustoryCompletedEventHandler GetDataForCallFeeCustoryCompleted;
        
        /// <remarks/>
        public event InsertTransactionFeeCustodyCompletedEventHandler InsertTransactionFeeCustodyCompleted;
        
        /// <remarks/>
        public event UpdateSecurityLogCompletedEventHandler UpdateSecurityLogCompleted;
        
        /// <remarks/>
        public event IsAccountingCustodyCompletedEventHandler IsAccountingCustodyCompleted;
        
        /// <remarks/>
        public event SummaryCustodyCompletedEventHandler SummaryCustodyCompleted;
        
        /// <remarks/>
        public event GetSummaryTradingCompletedEventHandler GetSummaryTradingCompleted;
        
        /// <remarks/>
        public event HelloVicsCompletedEventHandler HelloVicsCompleted;
        
        /// <remarks/>
        public event GetAuthorizeCompletedEventHandler GetAuthorizeCompleted;
        
        /// <remarks/>
        public event ClearTokenKeyCompletedEventHandler ClearTokenKeyCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event FindUsersCompletedEventHandler FindUsersCompleted;
        
        /// <remarks/>
        public event GetUserListCompletedEventHandler GetUserListCompleted;
        
        /// <remarks/>
        public event ChangeUserPasswordCompletedEventHandler ChangeUserPasswordCompleted;
        
        /// <remarks/>
        public event GetCurrentTransactionDateCompletedEventHandler GetCurrentTransactionDateCompleted;
        
        /// <remarks/>
        public event GetUserAccessStringCompletedEventHandler GetUserAccessStringCompleted;
        
        /// <remarks/>
        public event UpdateUserAccessStringCompletedEventHandler UpdateUserAccessStringCompleted;
        
        /// <remarks/>
        public event GetCustomerCompletedEventHandler GetCustomerCompleted;
        
        /// <remarks/>
        public event UpdateVRMCustomerInfoCompletedEventHandler UpdateVRMCustomerInfoCompleted;
        
        /// <remarks/>
        public event FindCustomersCompletedEventHandler FindCustomersCompleted;
        
        /// <remarks/>
        public event SetUserTakeCareCompletedEventHandler SetUserTakeCareCompleted;
        
        /// <remarks/>
        public event FindContractsCompletedEventHandler FindContractsCompleted;
        
        /// <remarks/>
        public event GetContractsForDisburseCompletedEventHandler GetContractsForDisburseCompleted;
        
        /// <remarks/>
        public event GetContractsForWithdrawCompletedEventHandler GetContractsForWithdrawCompleted;
        
        /// <remarks/>
        public event GetCurrentContractCompletedEventHandler GetCurrentContractCompleted;
        
        /// <remarks/>
        public event SaveContractCompletedEventHandler SaveContractCompleted;
        
        /// <remarks/>
        public event ValidateInTermContractCompletedEventHandler ValidateInTermContractCompleted;
        
        /// <remarks/>
        public event GetStockListCompletedEventHandler GetStockListCompleted;
        
        /// <remarks/>
        public event GetStockCompletedEventHandler GetStockCompleted;
        
        /// <remarks/>
        public event SaveStockCompletedEventHandler SaveStockCompleted;
        
        /// <remarks/>
        public event DeleteStockCompletedEventHandler DeleteStockCompleted;
        
        /// <remarks/>
        public event GetCustomerAssetInfoCompletedEventHandler GetCustomerAssetInfoCompleted;
        
        /// <remarks/>
        public event GetCustomerAssetInfoListCompletedEventHandler GetCustomerAssetInfoListCompleted;
        
        /// <remarks/>
        public event GetCustomerAssetInfoListForDebtCompletedEventHandler GetCustomerAssetInfoListForDebtCompleted;
        
        /// <remarks/>
        public event GetDefferedTDayListCompletedEventHandler GetDefferedTDayListCompleted;
        
        /// <remarks/>
        public event GetDefferedListCompletedEventHandler GetDefferedListCompleted;
        
        /// <remarks/>
        public event DeferringTDayCompletedEventHandler DeferringTDayCompleted;
        
        /// <remarks/>
        public event GetCustomerDeferredTranListCompletedEventHandler GetCustomerDeferredTranListCompleted;
        
        /// <remarks/>
        public event GetUserTransCodeListCompletedEventHandler GetUserTransCodeListCompleted;
        
        /// <remarks/>
        public event FindDeferredTDayListCompletedEventHandler FindDeferredTDayListCompleted;
        
        /// <remarks/>
        public event DisburseContractCompletedEventHandler DisburseContractCompleted;
        
        /// <remarks/>
        public event WithdrawContractCompletedEventHandler WithdrawContractCompleted;
        
        /// <remarks/>
        public event CreateDebitLimitCompletedEventHandler CreateDebitLimitCompleted;
        
        /// <remarks/>
        public event CreateWithdrawDeferredTransactionCompletedEventHandler CreateWithdrawDeferredTransactionCompleted;
        
        /// <remarks/>
        public event CreateRetreiveInterestTransactionCompletedEventHandler CreateRetreiveInterestTransactionCompleted;
        
        /// <remarks/>
        public event GetInterestTransactionListCompletedEventHandler GetInterestTransactionListCompleted;
        
        /// <remarks/>
        public event GetIssuedTransactionListCompletedEventHandler GetIssuedTransactionListCompleted;
        
        /// <remarks/>
        public event DeleteIssuedTransactionCompletedEventHandler DeleteIssuedTransactionCompleted;
        
        /// <remarks/>
        public event ApproveTransactionCompletedEventHandler ApproveTransactionCompleted;
        
        /// <remarks/>
        public event UnBlockBalanceAmountCompletedEventHandler UnBlockBalanceAmountCompleted;
        
        /// <remarks/>
        public event GetBlockBalanceAndDebitLimitInfoCompletedEventHandler GetBlockBalanceAndDebitLimitInfoCompleted;
        
        /// <remarks/>
        public event GetDebitLimitInfoCompletedEventHandler GetDebitLimitInfoCompleted;
        
        /// <remarks/>
        public event GetCustomerStockEnquiryCompletedEventHandler GetCustomerStockEnquiryCompleted;
        
        /// <remarks/>
        public event ShowBalanceAccountTransactionCompletedEventHandler ShowBalanceAccountTransactionCompleted;
        
        /// <remarks/>
        public event GetAdvanceBankTransactionReportCompletedEventHandler GetAdvanceBankTransactionReportCompleted;
        
        /// <remarks/>
        public event GetExpireContractStatusReportCompletedEventHandler GetExpireContractStatusReportCompleted;
        
        /// <remarks/>
        public event GetMissingStocksCompletedEventHandler GetMissingStocksCompleted;
        
        /// <remarks/>
        public event GetRightExecNotPayYetCompletedEventHandler GetRightExecNotPayYetCompleted;
        
        /// <remarks/>
        public event GetRightExecRegisterNotPayYetCompletedEventHandler GetRightExecRegisterNotPayYetCompleted;
        
        /// <remarks/>
        public event CancelRightExecCompletedEventHandler CancelRightExecCompleted;
        
        /// <remarks/>
        public event GetBuyCashContractListCompletedEventHandler GetBuyCashContractListCompleted;
        
        /// <remarks/>
        public event ChangeBuyCashContractStatusCompletedEventHandler ChangeBuyCashContractStatusCompleted;
        
        /// <remarks/>
        public event GetBuyCashContractReportCompletedEventHandler GetBuyCashContractReportCompleted;
        
        /// <remarks/>
        public event GetDefinedBalanceAccountsCompletedEventHandler GetDefinedBalanceAccountsCompleted;
        
        /// <remarks/>
        public event InsertBankCompletedEventHandler InsertBankCompleted;
        
        /// <remarks/>
        public event UpdateBankCompletedEventHandler UpdateBankCompleted;
        
        /// <remarks/>
        public event DeleteBankCompletedEventHandler DeleteBankCompleted;
        
        /// <remarks/>
        public event GetBankListCompletedEventHandler GetBankListCompleted;
        
        /// <remarks/>
        public event GetBankCompletedEventHandler GetBankCompleted;
        
        /// <remarks/>
        public event InsertBankBranchCompletedEventHandler InsertBankBranchCompleted;
        
        /// <remarks/>
        public event UpdateBankBranchCompletedEventHandler UpdateBankBranchCompleted;
        
        /// <remarks/>
        public event DeleteBankBranchCompletedEventHandler DeleteBankBranchCompleted;
        
        /// <remarks/>
        public event GetBankBranchListCompletedEventHandler GetBankBranchListCompleted;
        
        /// <remarks/>
        public event GetBankBranchCompletedEventHandler GetBankBranchCompleted;
        
        /// <remarks/>
        public event GetAllProvinceCompletedEventHandler GetAllProvinceCompleted;
        
        /// <remarks/>
        public event InsertAccountTransferCompletedEventHandler InsertAccountTransferCompleted;
        
        /// <remarks/>
        public event UpdateAccountTransferCompletedEventHandler UpdateAccountTransferCompleted;
        
        /// <remarks/>
        public event DeleteAccountTransferCompletedEventHandler DeleteAccountTransferCompleted;
        
        /// <remarks/>
        public event GetAccountTransferListCompletedEventHandler GetAccountTransferListCompleted;
        
        /// <remarks/>
        public event GetAccountTransferCompletedEventHandler GetAccountTransferCompleted;
        
        /// <remarks/>
        public event OnlineTransferChangeStatusCompletedEventHandler OnlineTransferChangeStatusCompleted;
        
        /// <remarks/>
        public event GetOnlineTransferReportCompletedEventHandler GetOnlineTransferReportCompleted;
        
        /// <remarks/>
        public event GetOnlineRegistedReportCompletedEventHandler GetOnlineRegistedReportCompleted;
        
        /// <remarks/>
        public event GetOnlineTransferListCompletedEventHandler GetOnlineTransferListCompleted;
        
        /// <remarks/>
        public event GetOnlineTransferCompletedEventHandler GetOnlineTransferCompleted;
        
        /// <remarks/>
        public event GetInterestRateCompletedEventHandler GetInterestRateCompleted;
        
        /// <remarks/>
        public event GetSbsIncomeTaxCompletedEventHandler GetSbsIncomeTaxCompleted;
        
        /// <remarks/>
        public event GetKtIncomeTaxCompletedEventHandler GetKtIncomeTaxCompleted;
        
        /// <remarks/>
        public event InsertKtIncomeTaxCompletedEventHandler InsertKtIncomeTaxCompleted;
        
        /// <remarks/>
        public event VariableCapitalPricesCompletedEventHandler VariableCapitalPricesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/SaveVariableCapitalPric", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveVariableCapitalPric(string key, VariableCapitalPrice variableCapitalPrice) {
            this.Invoke("SaveVariableCapitalPric", new object[] {
                        key,
                        variableCapitalPrice});
        }
        
        /// <remarks/>
        public void SaveVariableCapitalPricAsync(string key, VariableCapitalPrice variableCapitalPrice) {
            this.SaveVariableCapitalPricAsync(key, variableCapitalPrice, null);
        }
        
        /// <remarks/>
        public void SaveVariableCapitalPricAsync(string key, VariableCapitalPrice variableCapitalPrice, object userState) {
            if ((this.SaveVariableCapitalPricOperationCompleted == null)) {
                this.SaveVariableCapitalPricOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveVariableCapitalPricOperationCompleted);
            }
            this.InvokeAsync("SaveVariableCapitalPric", new object[] {
                        key,
                        variableCapitalPrice}, this.SaveVariableCapitalPricOperationCompleted, userState);
        }
        
        private void OnSaveVariableCapitalPricOperationCompleted(object arg) {
            if ((this.SaveVariableCapitalPricCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveVariableCapitalPricCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/DeleteVariableCapitalPric", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteVariableCapitalPric(string key, VariableCapitalPrice variableCapitalPrice) {
            this.Invoke("DeleteVariableCapitalPric", new object[] {
                        key,
                        variableCapitalPrice});
        }
        
        /// <remarks/>
        public void DeleteVariableCapitalPricAsync(string key, VariableCapitalPrice variableCapitalPrice) {
            this.DeleteVariableCapitalPricAsync(key, variableCapitalPrice, null);
        }
        
        /// <remarks/>
        public void DeleteVariableCapitalPricAsync(string key, VariableCapitalPrice variableCapitalPrice, object userState) {
            if ((this.DeleteVariableCapitalPricOperationCompleted == null)) {
                this.DeleteVariableCapitalPricOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVariableCapitalPricOperationCompleted);
            }
            this.InvokeAsync("DeleteVariableCapitalPric", new object[] {
                        key,
                        variableCapitalPrice}, this.DeleteVariableCapitalPricOperationCompleted, userState);
        }
        
        private void OnDeleteVariableCapitalPricOperationCompleted(object arg) {
            if ((this.DeleteVariableCapitalPricCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVariableCapitalPricCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetDataForCallFeeCustory", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecurityFeeLog[] GetDataForCallFeeCustory(string key, string customerId, System.DateTime callDate, double feeRate, bool isSellT3) {
            object[] results = this.Invoke("GetDataForCallFeeCustory", new object[] {
                        key,
                        customerId,
                        callDate,
                        feeRate,
                        isSellT3});
            return ((SecurityFeeLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataForCallFeeCustoryAsync(string key, string customerId, System.DateTime callDate, double feeRate, bool isSellT3) {
            this.GetDataForCallFeeCustoryAsync(key, customerId, callDate, feeRate, isSellT3, null);
        }
        
        /// <remarks/>
        public void GetDataForCallFeeCustoryAsync(string key, string customerId, System.DateTime callDate, double feeRate, bool isSellT3, object userState) {
            if ((this.GetDataForCallFeeCustoryOperationCompleted == null)) {
                this.GetDataForCallFeeCustoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataForCallFeeCustoryOperationCompleted);
            }
            this.InvokeAsync("GetDataForCallFeeCustory", new object[] {
                        key,
                        customerId,
                        callDate,
                        feeRate,
                        isSellT3}, this.GetDataForCallFeeCustoryOperationCompleted, userState);
        }
        
        private void OnGetDataForCallFeeCustoryOperationCompleted(object arg) {
            if ((this.GetDataForCallFeeCustoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataForCallFeeCustoryCompleted(this, new GetDataForCallFeeCustoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/InsertTransactionFeeCustody", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecuriryCallResult InsertTransactionFeeCustody(string key, string customerId, decimal amount, System.DateTime interestedDate) {
            object[] results = this.Invoke("InsertTransactionFeeCustody", new object[] {
                        key,
                        customerId,
                        amount,
                        interestedDate});
            return ((SecuriryCallResult)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTransactionFeeCustodyAsync(string key, string customerId, decimal amount, System.DateTime interestedDate) {
            this.InsertTransactionFeeCustodyAsync(key, customerId, amount, interestedDate, null);
        }
        
        /// <remarks/>
        public void InsertTransactionFeeCustodyAsync(string key, string customerId, decimal amount, System.DateTime interestedDate, object userState) {
            if ((this.InsertTransactionFeeCustodyOperationCompleted == null)) {
                this.InsertTransactionFeeCustodyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTransactionFeeCustodyOperationCompleted);
            }
            this.InvokeAsync("InsertTransactionFeeCustody", new object[] {
                        key,
                        customerId,
                        amount,
                        interestedDate}, this.InsertTransactionFeeCustodyOperationCompleted, userState);
        }
        
        private void OnInsertTransactionFeeCustodyOperationCompleted(object arg) {
            if ((this.InsertTransactionFeeCustodyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTransactionFeeCustodyCompleted(this, new InsertTransactionFeeCustodyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/UpdateSecurityLog", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSecurityLog(string key, SecurityFeeLog[] securityFeeLogs, SecuriryCallResult callResult) {
            this.Invoke("UpdateSecurityLog", new object[] {
                        key,
                        securityFeeLogs,
                        callResult});
        }
        
        /// <remarks/>
        public void UpdateSecurityLogAsync(string key, SecurityFeeLog[] securityFeeLogs, SecuriryCallResult callResult) {
            this.UpdateSecurityLogAsync(key, securityFeeLogs, callResult, null);
        }
        
        /// <remarks/>
        public void UpdateSecurityLogAsync(string key, SecurityFeeLog[] securityFeeLogs, SecuriryCallResult callResult, object userState) {
            if ((this.UpdateSecurityLogOperationCompleted == null)) {
                this.UpdateSecurityLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSecurityLogOperationCompleted);
            }
            this.InvokeAsync("UpdateSecurityLog", new object[] {
                        key,
                        securityFeeLogs,
                        callResult}, this.UpdateSecurityLogOperationCompleted, userState);
        }
        
        private void OnUpdateSecurityLogOperationCompleted(object arg) {
            if ((this.UpdateSecurityLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSecurityLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/IsAccountingCustody", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAccountingCustody(string key, string accountId, System.DateTime feeDate) {
            object[] results = this.Invoke("IsAccountingCustody", new object[] {
                        key,
                        accountId,
                        feeDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAccountingCustodyAsync(string key, string accountId, System.DateTime feeDate) {
            this.IsAccountingCustodyAsync(key, accountId, feeDate, null);
        }
        
        /// <remarks/>
        public void IsAccountingCustodyAsync(string key, string accountId, System.DateTime feeDate, object userState) {
            if ((this.IsAccountingCustodyOperationCompleted == null)) {
                this.IsAccountingCustodyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAccountingCustodyOperationCompleted);
            }
            this.InvokeAsync("IsAccountingCustody", new object[] {
                        key,
                        accountId,
                        feeDate}, this.IsAccountingCustodyOperationCompleted, userState);
        }
        
        private void OnIsAccountingCustodyOperationCompleted(object arg) {
            if ((this.IsAccountingCustodyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAccountingCustodyCompleted(this, new IsAccountingCustodyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/SummaryCustody", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SummaryCustody[] SummaryCustody(string key, System.DateTime fromDate, System.DateTime toDate, decimal feeRate) {
            object[] results = this.Invoke("SummaryCustody", new object[] {
                        key,
                        fromDate,
                        toDate,
                        feeRate});
            return ((SummaryCustody[])(results[0]));
        }
        
        /// <remarks/>
        public void SummaryCustodyAsync(string key, System.DateTime fromDate, System.DateTime toDate, decimal feeRate) {
            this.SummaryCustodyAsync(key, fromDate, toDate, feeRate, null);
        }
        
        /// <remarks/>
        public void SummaryCustodyAsync(string key, System.DateTime fromDate, System.DateTime toDate, decimal feeRate, object userState) {
            if ((this.SummaryCustodyOperationCompleted == null)) {
                this.SummaryCustodyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSummaryCustodyOperationCompleted);
            }
            this.InvokeAsync("SummaryCustody", new object[] {
                        key,
                        fromDate,
                        toDate,
                        feeRate}, this.SummaryCustodyOperationCompleted, userState);
        }
        
        private void OnSummaryCustodyOperationCompleted(object arg) {
            if ((this.SummaryCustodyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SummaryCustodyCompleted(this, new SummaryCustodyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetSummaryTrading", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSummaryTrading(string key, System.DateTime calldate) {
            object[] results = this.Invoke("GetSummaryTrading", new object[] {
                        key,
                        calldate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSummaryTradingAsync(string key, System.DateTime calldate) {
            this.GetSummaryTradingAsync(key, calldate, null);
        }
        
        /// <remarks/>
        public void GetSummaryTradingAsync(string key, System.DateTime calldate, object userState) {
            if ((this.GetSummaryTradingOperationCompleted == null)) {
                this.GetSummaryTradingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSummaryTradingOperationCompleted);
            }
            this.InvokeAsync("GetSummaryTrading", new object[] {
                        key,
                        calldate}, this.GetSummaryTradingOperationCompleted, userState);
        }
        
        private void OnGetSummaryTradingOperationCompleted(object arg) {
            if ((this.GetSummaryTradingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSummaryTradingCompleted(this, new GetSummaryTradingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/HelloVics", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloVics() {
            object[] results = this.Invoke("HelloVics", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloVicsAsync() {
            this.HelloVicsAsync(null);
        }
        
        /// <remarks/>
        public void HelloVicsAsync(object userState) {
            if ((this.HelloVicsOperationCompleted == null)) {
                this.HelloVicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloVicsOperationCompleted);
            }
            this.InvokeAsync("HelloVics", new object[0], this.HelloVicsOperationCompleted, userState);
        }
        
        private void OnHelloVicsOperationCompleted(object arg) {
            if ((this.HelloVicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloVicsCompleted(this, new HelloVicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetAuthorize", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuthorize(string username, string password) {
            object[] results = this.Invoke("GetAuthorize", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuthorizeAsync(string username, string password) {
            this.GetAuthorizeAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetAuthorizeAsync(string username, string password, object userState) {
            if ((this.GetAuthorizeOperationCompleted == null)) {
                this.GetAuthorizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuthorizeOperationCompleted);
            }
            this.InvokeAsync("GetAuthorize", new object[] {
                        username,
                        password}, this.GetAuthorizeOperationCompleted, userState);
        }
        
        private void OnGetAuthorizeOperationCompleted(object arg) {
            if ((this.GetAuthorizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuthorizeCompleted(this, new GetAuthorizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/ClearTokenKey", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClearTokenKey(string key) {
            this.Invoke("ClearTokenKey", new object[] {
                        key});
        }
        
        /// <remarks/>
        public void ClearTokenKeyAsync(string key) {
            this.ClearTokenKeyAsync(key, null);
        }
        
        /// <remarks/>
        public void ClearTokenKeyAsync(string key, object userState) {
            if ((this.ClearTokenKeyOperationCompleted == null)) {
                this.ClearTokenKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearTokenKeyOperationCompleted);
            }
            this.InvokeAsync("ClearTokenKey", new object[] {
                        key}, this.ClearTokenKeyOperationCompleted, userState);
        }
        
        private void OnClearTokenKeyOperationCompleted(object arg) {
            if ((this.ClearTokenKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearTokenKeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetUser", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserLite GetUser(string key, string username) {
            object[] results = this.Invoke("GetUser", new object[] {
                        key,
                        username});
            return ((UserLite)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(string key, string username) {
            this.GetUserAsync(key, username, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(string key, string username, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        key,
                        username}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/FindUsers", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserLite[] FindUsers(string key, string username) {
            object[] results = this.Invoke("FindUsers", new object[] {
                        key,
                        username});
            return ((UserLite[])(results[0]));
        }
        
        /// <remarks/>
        public void FindUsersAsync(string key, string username) {
            this.FindUsersAsync(key, username, null);
        }
        
        /// <remarks/>
        public void FindUsersAsync(string key, string username, object userState) {
            if ((this.FindUsersOperationCompleted == null)) {
                this.FindUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindUsersOperationCompleted);
            }
            this.InvokeAsync("FindUsers", new object[] {
                        key,
                        username}, this.FindUsersOperationCompleted, userState);
        }
        
        private void OnFindUsersOperationCompleted(object arg) {
            if ((this.FindUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindUsersCompleted(this, new FindUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetUserList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserLite[] GetUserList(string key, int groupId) {
            object[] results = this.Invoke("GetUserList", new object[] {
                        key,
                        groupId});
            return ((UserLite[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserListAsync(string key, int groupId) {
            this.GetUserListAsync(key, groupId, null);
        }
        
        /// <remarks/>
        public void GetUserListAsync(string key, int groupId, object userState) {
            if ((this.GetUserListOperationCompleted == null)) {
                this.GetUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListOperationCompleted);
            }
            this.InvokeAsync("GetUserList", new object[] {
                        key,
                        groupId}, this.GetUserListOperationCompleted, userState);
        }
        
        private void OnGetUserListOperationCompleted(object arg) {
            if ((this.GetUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListCompleted(this, new GetUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/ChangeUserPassword", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeUserPassword(string key, int userId, string newPassword) {
            this.Invoke("ChangeUserPassword", new object[] {
                        key,
                        userId,
                        newPassword});
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(string key, int userId, string newPassword) {
            this.ChangeUserPasswordAsync(key, userId, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(string key, int userId, string newPassword, object userState) {
            if ((this.ChangeUserPasswordOperationCompleted == null)) {
                this.ChangeUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPassword", new object[] {
                        key,
                        userId,
                        newPassword}, this.ChangeUserPasswordOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetCurrentTransactionDate", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetCurrentTransactionDate(string key) {
            object[] results = this.Invoke("GetCurrentTransactionDate", new object[] {
                        key});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentTransactionDateAsync(string key) {
            this.GetCurrentTransactionDateAsync(key, null);
        }
        
        /// <remarks/>
        public void GetCurrentTransactionDateAsync(string key, object userState) {
            if ((this.GetCurrentTransactionDateOperationCompleted == null)) {
                this.GetCurrentTransactionDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentTransactionDateOperationCompleted);
            }
            this.InvokeAsync("GetCurrentTransactionDate", new object[] {
                        key}, this.GetCurrentTransactionDateOperationCompleted, userState);
        }
        
        private void OnGetCurrentTransactionDateOperationCompleted(object arg) {
            if ((this.GetCurrentTransactionDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentTransactionDateCompleted(this, new GetCurrentTransactionDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetUserAccessString", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetUserAccessString(string key, int userId) {
            object[] results = this.Invoke("GetUserAccessString", new object[] {
                        key,
                        userId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAccessStringAsync(string key, int userId) {
            this.GetUserAccessStringAsync(key, userId, null);
        }
        
        /// <remarks/>
        public void GetUserAccessStringAsync(string key, int userId, object userState) {
            if ((this.GetUserAccessStringOperationCompleted == null)) {
                this.GetUserAccessStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAccessStringOperationCompleted);
            }
            this.InvokeAsync("GetUserAccessString", new object[] {
                        key,
                        userId}, this.GetUserAccessStringOperationCompleted, userState);
        }
        
        private void OnGetUserAccessStringOperationCompleted(object arg) {
            if ((this.GetUserAccessStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAccessStringCompleted(this, new GetUserAccessStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/UpdateUserAccessString", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUserAccessString(string key, string[] accessList, int userId) {
            this.Invoke("UpdateUserAccessString", new object[] {
                        key,
                        accessList,
                        userId});
        }
        
        /// <remarks/>
        public void UpdateUserAccessStringAsync(string key, string[] accessList, int userId) {
            this.UpdateUserAccessStringAsync(key, accessList, userId, null);
        }
        
        /// <remarks/>
        public void UpdateUserAccessStringAsync(string key, string[] accessList, int userId, object userState) {
            if ((this.UpdateUserAccessStringOperationCompleted == null)) {
                this.UpdateUserAccessStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserAccessStringOperationCompleted);
            }
            this.InvokeAsync("UpdateUserAccessString", new object[] {
                        key,
                        accessList,
                        userId}, this.UpdateUserAccessStringOperationCompleted, userState);
        }
        
        private void OnUpdateUserAccessStringOperationCompleted(object arg) {
            if ((this.UpdateUserAccessStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserAccessStringCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetCustomer", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer GetCustomer(string key, string customerId) {
            object[] results = this.Invoke("GetCustomer", new object[] {
                        key,
                        customerId});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAsync(string key, string customerId) {
            this.GetCustomerAsync(key, customerId, null);
        }
        
        /// <remarks/>
        public void GetCustomerAsync(string key, string customerId, object userState) {
            if ((this.GetCustomerOperationCompleted == null)) {
                this.GetCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerOperationCompleted);
            }
            this.InvokeAsync("GetCustomer", new object[] {
                        key,
                        customerId}, this.GetCustomerOperationCompleted, userState);
        }
        
        private void OnGetCustomerOperationCompleted(object arg) {
            if ((this.GetCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerCompleted(this, new GetCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/UpdateVRMCustomerInfo", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateVRMCustomerInfo(string key, string customerId, byte rate, bool isSpecial) {
            this.Invoke("UpdateVRMCustomerInfo", new object[] {
                        key,
                        customerId,
                        rate,
                        isSpecial});
        }
        
        /// <remarks/>
        public void UpdateVRMCustomerInfoAsync(string key, string customerId, byte rate, bool isSpecial) {
            this.UpdateVRMCustomerInfoAsync(key, customerId, rate, isSpecial, null);
        }
        
        /// <remarks/>
        public void UpdateVRMCustomerInfoAsync(string key, string customerId, byte rate, bool isSpecial, object userState) {
            if ((this.UpdateVRMCustomerInfoOperationCompleted == null)) {
                this.UpdateVRMCustomerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVRMCustomerInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateVRMCustomerInfo", new object[] {
                        key,
                        customerId,
                        rate,
                        isSpecial}, this.UpdateVRMCustomerInfoOperationCompleted, userState);
        }
        
        private void OnUpdateVRMCustomerInfoOperationCompleted(object arg) {
            if ((this.UpdateVRMCustomerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVRMCustomerInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/FindCustomers", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer[] FindCustomers(string key, string customerId, int userTakeCare) {
            object[] results = this.Invoke("FindCustomers", new object[] {
                        key,
                        customerId,
                        userTakeCare});
            return ((Customer[])(results[0]));
        }
        
        /// <remarks/>
        public void FindCustomersAsync(string key, string customerId, int userTakeCare) {
            this.FindCustomersAsync(key, customerId, userTakeCare, null);
        }
        
        /// <remarks/>
        public void FindCustomersAsync(string key, string customerId, int userTakeCare, object userState) {
            if ((this.FindCustomersOperationCompleted == null)) {
                this.FindCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindCustomersOperationCompleted);
            }
            this.InvokeAsync("FindCustomers", new object[] {
                        key,
                        customerId,
                        userTakeCare}, this.FindCustomersOperationCompleted, userState);
        }
        
        private void OnFindCustomersOperationCompleted(object arg) {
            if ((this.FindCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindCustomersCompleted(this, new FindCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/SetUserTakeCare", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetUserTakeCare(string key, string customerId, int userTakeCareId) {
            this.Invoke("SetUserTakeCare", new object[] {
                        key,
                        customerId,
                        userTakeCareId});
        }
        
        /// <remarks/>
        public void SetUserTakeCareAsync(string key, string customerId, int userTakeCareId) {
            this.SetUserTakeCareAsync(key, customerId, userTakeCareId, null);
        }
        
        /// <remarks/>
        public void SetUserTakeCareAsync(string key, string customerId, int userTakeCareId, object userState) {
            if ((this.SetUserTakeCareOperationCompleted == null)) {
                this.SetUserTakeCareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserTakeCareOperationCompleted);
            }
            this.InvokeAsync("SetUserTakeCare", new object[] {
                        key,
                        customerId,
                        userTakeCareId}, this.SetUserTakeCareOperationCompleted, userState);
        }
        
        private void OnSetUserTakeCareOperationCompleted(object arg) {
            if ((this.SetUserTakeCareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserTakeCareCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/FindContracts", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contract[] FindContracts(string key, string customerId, ContractType type, System.DateTime fromDate, System.DateTime toDate, ContractStatus status) {
            object[] results = this.Invoke("FindContracts", new object[] {
                        key,
                        customerId,
                        type,
                        fromDate,
                        toDate,
                        status});
            return ((Contract[])(results[0]));
        }
        
        /// <remarks/>
        public void FindContractsAsync(string key, string customerId, ContractType type, System.DateTime fromDate, System.DateTime toDate, ContractStatus status) {
            this.FindContractsAsync(key, customerId, type, fromDate, toDate, status, null);
        }
        
        /// <remarks/>
        public void FindContractsAsync(string key, string customerId, ContractType type, System.DateTime fromDate, System.DateTime toDate, ContractStatus status, object userState) {
            if ((this.FindContractsOperationCompleted == null)) {
                this.FindContractsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindContractsOperationCompleted);
            }
            this.InvokeAsync("FindContracts", new object[] {
                        key,
                        customerId,
                        type,
                        fromDate,
                        toDate,
                        status}, this.FindContractsOperationCompleted, userState);
        }
        
        private void OnFindContractsOperationCompleted(object arg) {
            if ((this.FindContractsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindContractsCompleted(this, new FindContractsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetContractsForDisburse", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contract[] GetContractsForDisburse(string key, string customerId, System.DateTime fromDate, System.DateTime toDate, ContractStatus status) {
            object[] results = this.Invoke("GetContractsForDisburse", new object[] {
                        key,
                        customerId,
                        fromDate,
                        toDate,
                        status});
            return ((Contract[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContractsForDisburseAsync(string key, string customerId, System.DateTime fromDate, System.DateTime toDate, ContractStatus status) {
            this.GetContractsForDisburseAsync(key, customerId, fromDate, toDate, status, null);
        }
        
        /// <remarks/>
        public void GetContractsForDisburseAsync(string key, string customerId, System.DateTime fromDate, System.DateTime toDate, ContractStatus status, object userState) {
            if ((this.GetContractsForDisburseOperationCompleted == null)) {
                this.GetContractsForDisburseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractsForDisburseOperationCompleted);
            }
            this.InvokeAsync("GetContractsForDisburse", new object[] {
                        key,
                        customerId,
                        fromDate,
                        toDate,
                        status}, this.GetContractsForDisburseOperationCompleted, userState);
        }
        
        private void OnGetContractsForDisburseOperationCompleted(object arg) {
            if ((this.GetContractsForDisburseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractsForDisburseCompleted(this, new GetContractsForDisburseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetContractsForWithdraw", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contract[] GetContractsForWithdraw(string key, string customerId, System.DateTime fromDate, System.DateTime toDate) {
            object[] results = this.Invoke("GetContractsForWithdraw", new object[] {
                        key,
                        customerId,
                        fromDate,
                        toDate});
            return ((Contract[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContractsForWithdrawAsync(string key, string customerId, System.DateTime fromDate, System.DateTime toDate) {
            this.GetContractsForWithdrawAsync(key, customerId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void GetContractsForWithdrawAsync(string key, string customerId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.GetContractsForWithdrawOperationCompleted == null)) {
                this.GetContractsForWithdrawOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractsForWithdrawOperationCompleted);
            }
            this.InvokeAsync("GetContractsForWithdraw", new object[] {
                        key,
                        customerId,
                        fromDate,
                        toDate}, this.GetContractsForWithdrawOperationCompleted, userState);
        }
        
        private void OnGetContractsForWithdrawOperationCompleted(object arg) {
            if ((this.GetContractsForWithdrawCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractsForWithdrawCompleted(this, new GetContractsForWithdrawCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetCurrentContract", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contract GetCurrentContract(string key, string customerId) {
            object[] results = this.Invoke("GetCurrentContract", new object[] {
                        key,
                        customerId});
            return ((Contract)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentContractAsync(string key, string customerId) {
            this.GetCurrentContractAsync(key, customerId, null);
        }
        
        /// <remarks/>
        public void GetCurrentContractAsync(string key, string customerId, object userState) {
            if ((this.GetCurrentContractOperationCompleted == null)) {
                this.GetCurrentContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentContractOperationCompleted);
            }
            this.InvokeAsync("GetCurrentContract", new object[] {
                        key,
                        customerId}, this.GetCurrentContractOperationCompleted, userState);
        }
        
        private void OnGetCurrentContractOperationCompleted(object arg) {
            if ((this.GetCurrentContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentContractCompleted(this, new GetCurrentContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/SaveContract", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contract SaveContract(string key, Contract contract, int mode) {
            object[] results = this.Invoke("SaveContract", new object[] {
                        key,
                        contract,
                        mode});
            return ((Contract)(results[0]));
        }
        
        /// <remarks/>
        public void SaveContractAsync(string key, Contract contract, int mode) {
            this.SaveContractAsync(key, contract, mode, null);
        }
        
        /// <remarks/>
        public void SaveContractAsync(string key, Contract contract, int mode, object userState) {
            if ((this.SaveContractOperationCompleted == null)) {
                this.SaveContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveContractOperationCompleted);
            }
            this.InvokeAsync("SaveContract", new object[] {
                        key,
                        contract,
                        mode}, this.SaveContractOperationCompleted, userState);
        }
        
        private void OnSaveContractOperationCompleted(object arg) {
            if ((this.SaveContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveContractCompleted(this, new SaveContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/ValidateInTermContract", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateInTermContract(string key, Contract contract, int mode) {
            object[] results = this.Invoke("ValidateInTermContract", new object[] {
                        key,
                        contract,
                        mode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateInTermContractAsync(string key, Contract contract, int mode) {
            this.ValidateInTermContractAsync(key, contract, mode, null);
        }
        
        /// <remarks/>
        public void ValidateInTermContractAsync(string key, Contract contract, int mode, object userState) {
            if ((this.ValidateInTermContractOperationCompleted == null)) {
                this.ValidateInTermContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateInTermContractOperationCompleted);
            }
            this.InvokeAsync("ValidateInTermContract", new object[] {
                        key,
                        contract,
                        mode}, this.ValidateInTermContractOperationCompleted, userState);
        }
        
        private void OnValidateInTermContractOperationCompleted(object arg) {
            if ((this.ValidateInTermContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateInTermContractCompleted(this, new ValidateInTermContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetStockList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Stock[] GetStockList(string key, string stockCode) {
            object[] results = this.Invoke("GetStockList", new object[] {
                        key,
                        stockCode});
            return ((Stock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStockListAsync(string key, string stockCode) {
            this.GetStockListAsync(key, stockCode, null);
        }
        
        /// <remarks/>
        public void GetStockListAsync(string key, string stockCode, object userState) {
            if ((this.GetStockListOperationCompleted == null)) {
                this.GetStockListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockListOperationCompleted);
            }
            this.InvokeAsync("GetStockList", new object[] {
                        key,
                        stockCode}, this.GetStockListOperationCompleted, userState);
        }
        
        private void OnGetStockListOperationCompleted(object arg) {
            if ((this.GetStockListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockListCompleted(this, new GetStockListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetStock", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Stock GetStock(string key, string stockCode) {
            object[] results = this.Invoke("GetStock", new object[] {
                        key,
                        stockCode});
            return ((Stock)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockAsync(string key, string stockCode) {
            this.GetStockAsync(key, stockCode, null);
        }
        
        /// <remarks/>
        public void GetStockAsync(string key, string stockCode, object userState) {
            if ((this.GetStockOperationCompleted == null)) {
                this.GetStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockOperationCompleted);
            }
            this.InvokeAsync("GetStock", new object[] {
                        key,
                        stockCode}, this.GetStockOperationCompleted, userState);
        }
        
        private void OnGetStockOperationCompleted(object arg) {
            if ((this.GetStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockCompleted(this, new GetStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/SaveStock", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveStock(string key, Stock stock) {
            this.Invoke("SaveStock", new object[] {
                        key,
                        stock});
        }
        
        /// <remarks/>
        public void SaveStockAsync(string key, Stock stock) {
            this.SaveStockAsync(key, stock, null);
        }
        
        /// <remarks/>
        public void SaveStockAsync(string key, Stock stock, object userState) {
            if ((this.SaveStockOperationCompleted == null)) {
                this.SaveStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveStockOperationCompleted);
            }
            this.InvokeAsync("SaveStock", new object[] {
                        key,
                        stock}, this.SaveStockOperationCompleted, userState);
        }
        
        private void OnSaveStockOperationCompleted(object arg) {
            if ((this.SaveStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveStockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/DeleteStock", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteStock(string key, Stock stock) {
            this.Invoke("DeleteStock", new object[] {
                        key,
                        stock});
        }
        
        /// <remarks/>
        public void DeleteStockAsync(string key, Stock stock) {
            this.DeleteStockAsync(key, stock, null);
        }
        
        /// <remarks/>
        public void DeleteStockAsync(string key, Stock stock, object userState) {
            if ((this.DeleteStockOperationCompleted == null)) {
                this.DeleteStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStockOperationCompleted);
            }
            this.InvokeAsync("DeleteStock", new object[] {
                        key,
                        stock}, this.DeleteStockOperationCompleted, userState);
        }
        
        private void OnDeleteStockOperationCompleted(object arg) {
            if ((this.DeleteStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetCustomerAssetInfo", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustAssetInfo GetCustomerAssetInfo(string key, System.DateTime transDate, string customerId, bool isGetTopOne) {
            object[] results = this.Invoke("GetCustomerAssetInfo", new object[] {
                        key,
                        transDate,
                        customerId,
                        isGetTopOne});
            return ((CustAssetInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAssetInfoAsync(string key, System.DateTime transDate, string customerId, bool isGetTopOne) {
            this.GetCustomerAssetInfoAsync(key, transDate, customerId, isGetTopOne, null);
        }
        
        /// <remarks/>
        public void GetCustomerAssetInfoAsync(string key, System.DateTime transDate, string customerId, bool isGetTopOne, object userState) {
            if ((this.GetCustomerAssetInfoOperationCompleted == null)) {
                this.GetCustomerAssetInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAssetInfoOperationCompleted);
            }
            this.InvokeAsync("GetCustomerAssetInfo", new object[] {
                        key,
                        transDate,
                        customerId,
                        isGetTopOne}, this.GetCustomerAssetInfoOperationCompleted, userState);
        }
        
        private void OnGetCustomerAssetInfoOperationCompleted(object arg) {
            if ((this.GetCustomerAssetInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAssetInfoCompleted(this, new GetCustomerAssetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetCustomerAssetInfoList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustAssetInfo[] GetCustomerAssetInfoList(string key, System.DateTime transDate, string customerId, int userTakeCareID, bool forDebitLimit, decimal limitDebtRatio, bool showWarning, ContractType contractType) {
            object[] results = this.Invoke("GetCustomerAssetInfoList", new object[] {
                        key,
                        transDate,
                        customerId,
                        userTakeCareID,
                        forDebitLimit,
                        limitDebtRatio,
                        showWarning,
                        contractType});
            return ((CustAssetInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAssetInfoListAsync(string key, System.DateTime transDate, string customerId, int userTakeCareID, bool forDebitLimit, decimal limitDebtRatio, bool showWarning, ContractType contractType) {
            this.GetCustomerAssetInfoListAsync(key, transDate, customerId, userTakeCareID, forDebitLimit, limitDebtRatio, showWarning, contractType, null);
        }
        
        /// <remarks/>
        public void GetCustomerAssetInfoListAsync(string key, System.DateTime transDate, string customerId, int userTakeCareID, bool forDebitLimit, decimal limitDebtRatio, bool showWarning, ContractType contractType, object userState) {
            if ((this.GetCustomerAssetInfoListOperationCompleted == null)) {
                this.GetCustomerAssetInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAssetInfoListOperationCompleted);
            }
            this.InvokeAsync("GetCustomerAssetInfoList", new object[] {
                        key,
                        transDate,
                        customerId,
                        userTakeCareID,
                        forDebitLimit,
                        limitDebtRatio,
                        showWarning,
                        contractType}, this.GetCustomerAssetInfoListOperationCompleted, userState);
        }
        
        private void OnGetCustomerAssetInfoListOperationCompleted(object arg) {
            if ((this.GetCustomerAssetInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAssetInfoListCompleted(this, new GetCustomerAssetInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetCustomerAssetInfoListForDebt", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustAssetInfo[] GetCustomerAssetInfoListForDebt(string key, System.DateTime transDate, string customerId, int userTakeCareID, bool isOverT2Debt) {
            object[] results = this.Invoke("GetCustomerAssetInfoListForDebt", new object[] {
                        key,
                        transDate,
                        customerId,
                        userTakeCareID,
                        isOverT2Debt});
            return ((CustAssetInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAssetInfoListForDebtAsync(string key, System.DateTime transDate, string customerId, int userTakeCareID, bool isOverT2Debt) {
            this.GetCustomerAssetInfoListForDebtAsync(key, transDate, customerId, userTakeCareID, isOverT2Debt, null);
        }
        
        /// <remarks/>
        public void GetCustomerAssetInfoListForDebtAsync(string key, System.DateTime transDate, string customerId, int userTakeCareID, bool isOverT2Debt, object userState) {
            if ((this.GetCustomerAssetInfoListForDebtOperationCompleted == null)) {
                this.GetCustomerAssetInfoListForDebtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAssetInfoListForDebtOperationCompleted);
            }
            this.InvokeAsync("GetCustomerAssetInfoListForDebt", new object[] {
                        key,
                        transDate,
                        customerId,
                        userTakeCareID,
                        isOverT2Debt}, this.GetCustomerAssetInfoListForDebtOperationCompleted, userState);
        }
        
        private void OnGetCustomerAssetInfoListForDebtOperationCompleted(object arg) {
            if ((this.GetCustomerAssetInfoListForDebtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAssetInfoListForDebtCompleted(this, new GetCustomerAssetInfoListForDebtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetDefferedTDayList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDefferedTDayList(string key, System.DateTime tradingDate, string customerId) {
            object[] results = this.Invoke("GetDefferedTDayList", new object[] {
                        key,
                        tradingDate,
                        customerId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefferedTDayListAsync(string key, System.DateTime tradingDate, string customerId) {
            this.GetDefferedTDayListAsync(key, tradingDate, customerId, null);
        }
        
        /// <remarks/>
        public void GetDefferedTDayListAsync(string key, System.DateTime tradingDate, string customerId, object userState) {
            if ((this.GetDefferedTDayListOperationCompleted == null)) {
                this.GetDefferedTDayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefferedTDayListOperationCompleted);
            }
            this.InvokeAsync("GetDefferedTDayList", new object[] {
                        key,
                        tradingDate,
                        customerId}, this.GetDefferedTDayListOperationCompleted, userState);
        }
        
        private void OnGetDefferedTDayListOperationCompleted(object arg) {
            if ((this.GetDefferedTDayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefferedTDayListCompleted(this, new GetDefferedTDayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetDefferedList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDefferedList(string key, string customerID, System.DateTime transDate) {
            object[] results = this.Invoke("GetDefferedList", new object[] {
                        key,
                        customerID,
                        transDate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefferedListAsync(string key, string customerID, System.DateTime transDate) {
            this.GetDefferedListAsync(key, customerID, transDate, null);
        }
        
        /// <remarks/>
        public void GetDefferedListAsync(string key, string customerID, System.DateTime transDate, object userState) {
            if ((this.GetDefferedListOperationCompleted == null)) {
                this.GetDefferedListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefferedListOperationCompleted);
            }
            this.InvokeAsync("GetDefferedList", new object[] {
                        key,
                        customerID,
                        transDate}, this.GetDefferedListOperationCompleted, userState);
        }
        
        private void OnGetDefferedListOperationCompleted(object arg) {
            if ((this.GetDefferedListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefferedListCompleted(this, new GetDefferedListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/DeferringTDay", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeferringTDay(string key, string customerId, decimal payMatchedAmount, decimal payFeeAmount, decimal deferredMatchedAmount, decimal deferredFeeAmount) {
            this.Invoke("DeferringTDay", new object[] {
                        key,
                        customerId,
                        payMatchedAmount,
                        payFeeAmount,
                        deferredMatchedAmount,
                        deferredFeeAmount});
        }
        
        /// <remarks/>
        public void DeferringTDayAsync(string key, string customerId, decimal payMatchedAmount, decimal payFeeAmount, decimal deferredMatchedAmount, decimal deferredFeeAmount) {
            this.DeferringTDayAsync(key, customerId, payMatchedAmount, payFeeAmount, deferredMatchedAmount, deferredFeeAmount, null);
        }
        
        /// <remarks/>
        public void DeferringTDayAsync(string key, string customerId, decimal payMatchedAmount, decimal payFeeAmount, decimal deferredMatchedAmount, decimal deferredFeeAmount, object userState) {
            if ((this.DeferringTDayOperationCompleted == null)) {
                this.DeferringTDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeferringTDayOperationCompleted);
            }
            this.InvokeAsync("DeferringTDay", new object[] {
                        key,
                        customerId,
                        payMatchedAmount,
                        payFeeAmount,
                        deferredMatchedAmount,
                        deferredFeeAmount}, this.DeferringTDayOperationCompleted, userState);
        }
        
        private void OnDeferringTDayOperationCompleted(object arg) {
            if ((this.DeferringTDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeferringTDayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetCustomerDeferredTranList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCustomerDeferredTranList(string key, string customerId, System.DateTime prvInterestDate, System.DateTime interestDate) {
            object[] results = this.Invoke("GetCustomerDeferredTranList", new object[] {
                        key,
                        customerId,
                        prvInterestDate,
                        interestDate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerDeferredTranListAsync(string key, string customerId, System.DateTime prvInterestDate, System.DateTime interestDate) {
            this.GetCustomerDeferredTranListAsync(key, customerId, prvInterestDate, interestDate, null);
        }
        
        /// <remarks/>
        public void GetCustomerDeferredTranListAsync(string key, string customerId, System.DateTime prvInterestDate, System.DateTime interestDate, object userState) {
            if ((this.GetCustomerDeferredTranListOperationCompleted == null)) {
                this.GetCustomerDeferredTranListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerDeferredTranListOperationCompleted);
            }
            this.InvokeAsync("GetCustomerDeferredTranList", new object[] {
                        key,
                        customerId,
                        prvInterestDate,
                        interestDate}, this.GetCustomerDeferredTranListOperationCompleted, userState);
        }
        
        private void OnGetCustomerDeferredTranListOperationCompleted(object arg) {
            if ((this.GetCustomerDeferredTranListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerDeferredTranListCompleted(this, new GetCustomerDeferredTranListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetUserTransCodeList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserTransCodeList(string key) {
            object[] results = this.Invoke("GetUserTransCodeList", new object[] {
                        key});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTransCodeListAsync(string key) {
            this.GetUserTransCodeListAsync(key, null);
        }
        
        /// <remarks/>
        public void GetUserTransCodeListAsync(string key, object userState) {
            if ((this.GetUserTransCodeListOperationCompleted == null)) {
                this.GetUserTransCodeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTransCodeListOperationCompleted);
            }
            this.InvokeAsync("GetUserTransCodeList", new object[] {
                        key}, this.GetUserTransCodeListOperationCompleted, userState);
        }
        
        private void OnGetUserTransCodeListOperationCompleted(object arg) {
            if ((this.GetUserTransCodeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTransCodeListCompleted(this, new GetUserTransCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/FindDeferredTDayList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FindDeferredTDayList(string key, int takeCareId, string contractTypeString, string customerID) {
            object[] results = this.Invoke("FindDeferredTDayList", new object[] {
                        key,
                        takeCareId,
                        contractTypeString,
                        customerID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindDeferredTDayListAsync(string key, int takeCareId, string contractTypeString, string customerID) {
            this.FindDeferredTDayListAsync(key, takeCareId, contractTypeString, customerID, null);
        }
        
        /// <remarks/>
        public void FindDeferredTDayListAsync(string key, int takeCareId, string contractTypeString, string customerID, object userState) {
            if ((this.FindDeferredTDayListOperationCompleted == null)) {
                this.FindDeferredTDayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindDeferredTDayListOperationCompleted);
            }
            this.InvokeAsync("FindDeferredTDayList", new object[] {
                        key,
                        takeCareId,
                        contractTypeString,
                        customerID}, this.FindDeferredTDayListOperationCompleted, userState);
        }
        
        private void OnFindDeferredTDayListOperationCompleted(object arg) {
            if ((this.FindDeferredTDayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindDeferredTDayListCompleted(this, new FindDeferredTDayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/DisburseContract", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DisburseContract(string key, Contract contract, decimal disburseAmount) {
            this.Invoke("DisburseContract", new object[] {
                        key,
                        contract,
                        disburseAmount});
        }
        
        /// <remarks/>
        public void DisburseContractAsync(string key, Contract contract, decimal disburseAmount) {
            this.DisburseContractAsync(key, contract, disburseAmount, null);
        }
        
        /// <remarks/>
        public void DisburseContractAsync(string key, Contract contract, decimal disburseAmount, object userState) {
            if ((this.DisburseContractOperationCompleted == null)) {
                this.DisburseContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisburseContractOperationCompleted);
            }
            this.InvokeAsync("DisburseContract", new object[] {
                        key,
                        contract,
                        disburseAmount}, this.DisburseContractOperationCompleted, userState);
        }
        
        private void OnDisburseContractOperationCompleted(object arg) {
            if ((this.DisburseContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisburseContractCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/WithdrawContract", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WithdrawContract(string key, Contract contract, decimal withdrawAmount, decimal interestAmount, string note) {
            this.Invoke("WithdrawContract", new object[] {
                        key,
                        contract,
                        withdrawAmount,
                        interestAmount,
                        note});
        }
        
        /// <remarks/>
        public void WithdrawContractAsync(string key, Contract contract, decimal withdrawAmount, decimal interestAmount, string note) {
            this.WithdrawContractAsync(key, contract, withdrawAmount, interestAmount, note, null);
        }
        
        /// <remarks/>
        public void WithdrawContractAsync(string key, Contract contract, decimal withdrawAmount, decimal interestAmount, string note, object userState) {
            if ((this.WithdrawContractOperationCompleted == null)) {
                this.WithdrawContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWithdrawContractOperationCompleted);
            }
            this.InvokeAsync("WithdrawContract", new object[] {
                        key,
                        contract,
                        withdrawAmount,
                        interestAmount,
                        note}, this.WithdrawContractOperationCompleted, userState);
        }
        
        private void OnWithdrawContractOperationCompleted(object arg) {
            if ((this.WithdrawContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WithdrawContractCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/CreateDebitLimit", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CreateDebitLimit(string key, string customerId, System.DateTime transDate, decimal debitAmount) {
            object[] results = this.Invoke("CreateDebitLimit", new object[] {
                        key,
                        customerId,
                        transDate,
                        debitAmount});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDebitLimitAsync(string key, string customerId, System.DateTime transDate, decimal debitAmount) {
            this.CreateDebitLimitAsync(key, customerId, transDate, debitAmount, null);
        }
        
        /// <remarks/>
        public void CreateDebitLimitAsync(string key, string customerId, System.DateTime transDate, decimal debitAmount, object userState) {
            if ((this.CreateDebitLimitOperationCompleted == null)) {
                this.CreateDebitLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDebitLimitOperationCompleted);
            }
            this.InvokeAsync("CreateDebitLimit", new object[] {
                        key,
                        customerId,
                        transDate,
                        debitAmount}, this.CreateDebitLimitOperationCompleted, userState);
        }
        
        private void OnCreateDebitLimitOperationCompleted(object arg) {
            if ((this.CreateDebitLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDebitLimitCompleted(this, new CreateDebitLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/CreateWithdrawDeferredTransaction", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateWithdrawDeferredTransaction(string key, string customerId, decimal amount, System.DateTime transDate) {
            this.Invoke("CreateWithdrawDeferredTransaction", new object[] {
                        key,
                        customerId,
                        amount,
                        transDate});
        }
        
        /// <remarks/>
        public void CreateWithdrawDeferredTransactionAsync(string key, string customerId, decimal amount, System.DateTime transDate) {
            this.CreateWithdrawDeferredTransactionAsync(key, customerId, amount, transDate, null);
        }
        
        /// <remarks/>
        public void CreateWithdrawDeferredTransactionAsync(string key, string customerId, decimal amount, System.DateTime transDate, object userState) {
            if ((this.CreateWithdrawDeferredTransactionOperationCompleted == null)) {
                this.CreateWithdrawDeferredTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWithdrawDeferredTransactionOperationCompleted);
            }
            this.InvokeAsync("CreateWithdrawDeferredTransaction", new object[] {
                        key,
                        customerId,
                        amount,
                        transDate}, this.CreateWithdrawDeferredTransactionOperationCompleted, userState);
        }
        
        private void OnCreateWithdrawDeferredTransactionOperationCompleted(object arg) {
            if ((this.CreateWithdrawDeferredTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWithdrawDeferredTransactionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/CreateRetreiveInterestTransaction", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateRetreiveInterestTransaction(string key, BalanceAccount account, string customerid, decimal amount, System.DateTime interestedDate) {
            this.Invoke("CreateRetreiveInterestTransaction", new object[] {
                        key,
                        account,
                        customerid,
                        amount,
                        interestedDate});
        }
        
        /// <remarks/>
        public void CreateRetreiveInterestTransactionAsync(string key, BalanceAccount account, string customerid, decimal amount, System.DateTime interestedDate) {
            this.CreateRetreiveInterestTransactionAsync(key, account, customerid, amount, interestedDate, null);
        }
        
        /// <remarks/>
        public void CreateRetreiveInterestTransactionAsync(string key, BalanceAccount account, string customerid, decimal amount, System.DateTime interestedDate, object userState) {
            if ((this.CreateRetreiveInterestTransactionOperationCompleted == null)) {
                this.CreateRetreiveInterestTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRetreiveInterestTransactionOperationCompleted);
            }
            this.InvokeAsync("CreateRetreiveInterestTransaction", new object[] {
                        key,
                        account,
                        customerid,
                        amount,
                        interestedDate}, this.CreateRetreiveInterestTransactionOperationCompleted, userState);
        }
        
        private void OnCreateRetreiveInterestTransactionOperationCompleted(object arg) {
            if ((this.CreateRetreiveInterestTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRetreiveInterestTransactionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetInterestTransactionList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetInterestTransactionList(string key, string customerId, System.DateTime fromDate, System.DateTime toDate) {
            object[] results = this.Invoke("GetInterestTransactionList", new object[] {
                        key,
                        customerId,
                        fromDate,
                        toDate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetInterestTransactionListAsync(string key, string customerId, System.DateTime fromDate, System.DateTime toDate) {
            this.GetInterestTransactionListAsync(key, customerId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void GetInterestTransactionListAsync(string key, string customerId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.GetInterestTransactionListOperationCompleted == null)) {
                this.GetInterestTransactionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInterestTransactionListOperationCompleted);
            }
            this.InvokeAsync("GetInterestTransactionList", new object[] {
                        key,
                        customerId,
                        fromDate,
                        toDate}, this.GetInterestTransactionListOperationCompleted, userState);
        }
        
        private void OnGetInterestTransactionListOperationCompleted(object arg) {
            if ((this.GetInterestTransactionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInterestTransactionListCompleted(this, new GetInterestTransactionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetIssuedTransactionList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetIssuedTransactionList(string key, string userTranscode, string transCode, string status, string accountid) {
            object[] results = this.Invoke("GetIssuedTransactionList", new object[] {
                        key,
                        userTranscode,
                        transCode,
                        status,
                        accountid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetIssuedTransactionListAsync(string key, string userTranscode, string transCode, string status, string accountid) {
            this.GetIssuedTransactionListAsync(key, userTranscode, transCode, status, accountid, null);
        }
        
        /// <remarks/>
        public void GetIssuedTransactionListAsync(string key, string userTranscode, string transCode, string status, string accountid, object userState) {
            if ((this.GetIssuedTransactionListOperationCompleted == null)) {
                this.GetIssuedTransactionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIssuedTransactionListOperationCompleted);
            }
            this.InvokeAsync("GetIssuedTransactionList", new object[] {
                        key,
                        userTranscode,
                        transCode,
                        status,
                        accountid}, this.GetIssuedTransactionListOperationCompleted, userState);
        }
        
        private void OnGetIssuedTransactionListOperationCompleted(object arg) {
            if ((this.GetIssuedTransactionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIssuedTransactionListCompleted(this, new GetIssuedTransactionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/DeleteIssuedTransaction", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteIssuedTransaction(string key, string customerId, string transCode, string status) {
            this.Invoke("DeleteIssuedTransaction", new object[] {
                        key,
                        customerId,
                        transCode,
                        status});
        }
        
        /// <remarks/>
        public void DeleteIssuedTransactionAsync(string key, string customerId, string transCode, string status) {
            this.DeleteIssuedTransactionAsync(key, customerId, transCode, status, null);
        }
        
        /// <remarks/>
        public void DeleteIssuedTransactionAsync(string key, string customerId, string transCode, string status, object userState) {
            if ((this.DeleteIssuedTransactionOperationCompleted == null)) {
                this.DeleteIssuedTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteIssuedTransactionOperationCompleted);
            }
            this.InvokeAsync("DeleteIssuedTransaction", new object[] {
                        key,
                        customerId,
                        transCode,
                        status}, this.DeleteIssuedTransactionOperationCompleted, userState);
        }
        
        private void OnDeleteIssuedTransactionOperationCompleted(object arg) {
            if ((this.DeleteIssuedTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteIssuedTransactionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/ApproveTransaction", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveTransaction(string key, string customerId, string transactionNumber, System.DateTime transDate) {
            this.Invoke("ApproveTransaction", new object[] {
                        key,
                        customerId,
                        transactionNumber,
                        transDate});
        }
        
        /// <remarks/>
        public void ApproveTransactionAsync(string key, string customerId, string transactionNumber, System.DateTime transDate) {
            this.ApproveTransactionAsync(key, customerId, transactionNumber, transDate, null);
        }
        
        /// <remarks/>
        public void ApproveTransactionAsync(string key, string customerId, string transactionNumber, System.DateTime transDate, object userState) {
            if ((this.ApproveTransactionOperationCompleted == null)) {
                this.ApproveTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveTransactionOperationCompleted);
            }
            this.InvokeAsync("ApproveTransaction", new object[] {
                        key,
                        customerId,
                        transactionNumber,
                        transDate}, this.ApproveTransactionOperationCompleted, userState);
        }
        
        private void OnApproveTransactionOperationCompleted(object arg) {
            if ((this.ApproveTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveTransactionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/UnBlockBalanceAmount", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnBlockBalanceAmount(string key, string customerId, decimal unBlockedCreditAmount, decimal unBlockedLocalAmount, decimal unBlockedBankAmount, System.DateTime transDate) {
            this.Invoke("UnBlockBalanceAmount", new object[] {
                        key,
                        customerId,
                        unBlockedCreditAmount,
                        unBlockedLocalAmount,
                        unBlockedBankAmount,
                        transDate});
        }
        
        /// <remarks/>
        public void UnBlockBalanceAmountAsync(string key, string customerId, decimal unBlockedCreditAmount, decimal unBlockedLocalAmount, decimal unBlockedBankAmount, System.DateTime transDate) {
            this.UnBlockBalanceAmountAsync(key, customerId, unBlockedCreditAmount, unBlockedLocalAmount, unBlockedBankAmount, transDate, null);
        }
        
        /// <remarks/>
        public void UnBlockBalanceAmountAsync(string key, string customerId, decimal unBlockedCreditAmount, decimal unBlockedLocalAmount, decimal unBlockedBankAmount, System.DateTime transDate, object userState) {
            if ((this.UnBlockBalanceAmountOperationCompleted == null)) {
                this.UnBlockBalanceAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnBlockBalanceAmountOperationCompleted);
            }
            this.InvokeAsync("UnBlockBalanceAmount", new object[] {
                        key,
                        customerId,
                        unBlockedCreditAmount,
                        unBlockedLocalAmount,
                        unBlockedBankAmount,
                        transDate}, this.UnBlockBalanceAmountOperationCompleted, userState);
        }
        
        private void OnUnBlockBalanceAmountOperationCompleted(object arg) {
            if ((this.UnBlockBalanceAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnBlockBalanceAmountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetBlockBalanceAndDebitLimitInfo", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBlockBalanceAndDebitLimitInfo(string key, string customerId) {
            object[] results = this.Invoke("GetBlockBalanceAndDebitLimitInfo", new object[] {
                        key,
                        customerId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlockBalanceAndDebitLimitInfoAsync(string key, string customerId) {
            this.GetBlockBalanceAndDebitLimitInfoAsync(key, customerId, null);
        }
        
        /// <remarks/>
        public void GetBlockBalanceAndDebitLimitInfoAsync(string key, string customerId, object userState) {
            if ((this.GetBlockBalanceAndDebitLimitInfoOperationCompleted == null)) {
                this.GetBlockBalanceAndDebitLimitInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlockBalanceAndDebitLimitInfoOperationCompleted);
            }
            this.InvokeAsync("GetBlockBalanceAndDebitLimitInfo", new object[] {
                        key,
                        customerId}, this.GetBlockBalanceAndDebitLimitInfoOperationCompleted, userState);
        }
        
        private void OnGetBlockBalanceAndDebitLimitInfoOperationCompleted(object arg) {
            if ((this.GetBlockBalanceAndDebitLimitInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlockBalanceAndDebitLimitInfoCompleted(this, new GetBlockBalanceAndDebitLimitInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetDebitLimitInfo", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDebitLimitInfo(string key, string customerId) {
            object[] results = this.Invoke("GetDebitLimitInfo", new object[] {
                        key,
                        customerId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDebitLimitInfoAsync(string key, string customerId) {
            this.GetDebitLimitInfoAsync(key, customerId, null);
        }
        
        /// <remarks/>
        public void GetDebitLimitInfoAsync(string key, string customerId, object userState) {
            if ((this.GetDebitLimitInfoOperationCompleted == null)) {
                this.GetDebitLimitInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDebitLimitInfoOperationCompleted);
            }
            this.InvokeAsync("GetDebitLimitInfo", new object[] {
                        key,
                        customerId}, this.GetDebitLimitInfoOperationCompleted, userState);
        }
        
        private void OnGetDebitLimitInfoOperationCompleted(object arg) {
            if ((this.GetDebitLimitInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDebitLimitInfoCompleted(this, new GetDebitLimitInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetCustomerStockEnquiry", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCustomerStockEnquiry(string key, string customerId, System.DateTime transDate) {
            object[] results = this.Invoke("GetCustomerStockEnquiry", new object[] {
                        key,
                        customerId,
                        transDate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerStockEnquiryAsync(string key, string customerId, System.DateTime transDate) {
            this.GetCustomerStockEnquiryAsync(key, customerId, transDate, null);
        }
        
        /// <remarks/>
        public void GetCustomerStockEnquiryAsync(string key, string customerId, System.DateTime transDate, object userState) {
            if ((this.GetCustomerStockEnquiryOperationCompleted == null)) {
                this.GetCustomerStockEnquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerStockEnquiryOperationCompleted);
            }
            this.InvokeAsync("GetCustomerStockEnquiry", new object[] {
                        key,
                        customerId,
                        transDate}, this.GetCustomerStockEnquiryOperationCompleted, userState);
        }
        
        private void OnGetCustomerStockEnquiryOperationCompleted(object arg) {
            if ((this.GetCustomerStockEnquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerStockEnquiryCompleted(this, new GetCustomerStockEnquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/ShowBalanceAccountTransaction", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ShowBalanceAccountTransaction(string key, string bankGl, string sectionGl, string accountId, System.DateTime fromDate, System.DateTime toDate, bool isGetBeginDay) {
            object[] results = this.Invoke("ShowBalanceAccountTransaction", new object[] {
                        key,
                        bankGl,
                        sectionGl,
                        accountId,
                        fromDate,
                        toDate,
                        isGetBeginDay});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ShowBalanceAccountTransactionAsync(string key, string bankGl, string sectionGl, string accountId, System.DateTime fromDate, System.DateTime toDate, bool isGetBeginDay) {
            this.ShowBalanceAccountTransactionAsync(key, bankGl, sectionGl, accountId, fromDate, toDate, isGetBeginDay, null);
        }
        
        /// <remarks/>
        public void ShowBalanceAccountTransactionAsync(string key, string bankGl, string sectionGl, string accountId, System.DateTime fromDate, System.DateTime toDate, bool isGetBeginDay, object userState) {
            if ((this.ShowBalanceAccountTransactionOperationCompleted == null)) {
                this.ShowBalanceAccountTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowBalanceAccountTransactionOperationCompleted);
            }
            this.InvokeAsync("ShowBalanceAccountTransaction", new object[] {
                        key,
                        bankGl,
                        sectionGl,
                        accountId,
                        fromDate,
                        toDate,
                        isGetBeginDay}, this.ShowBalanceAccountTransactionOperationCompleted, userState);
        }
        
        private void OnShowBalanceAccountTransactionOperationCompleted(object arg) {
            if ((this.ShowBalanceAccountTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowBalanceAccountTransactionCompleted(this, new ShowBalanceAccountTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetAdvanceBankTransactionReport", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAdvanceBankTransactionReport(string key, System.DateTime fromDate, System.DateTime toDate, string bankCode, string contractStatus, string stockType, int dateType, bool isSoldMortage, string branchCode) {
            object[] results = this.Invoke("GetAdvanceBankTransactionReport", new object[] {
                        key,
                        fromDate,
                        toDate,
                        bankCode,
                        contractStatus,
                        stockType,
                        dateType,
                        isSoldMortage,
                        branchCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdvanceBankTransactionReportAsync(string key, System.DateTime fromDate, System.DateTime toDate, string bankCode, string contractStatus, string stockType, int dateType, bool isSoldMortage, string branchCode) {
            this.GetAdvanceBankTransactionReportAsync(key, fromDate, toDate, bankCode, contractStatus, stockType, dateType, isSoldMortage, branchCode, null);
        }
        
        /// <remarks/>
        public void GetAdvanceBankTransactionReportAsync(string key, System.DateTime fromDate, System.DateTime toDate, string bankCode, string contractStatus, string stockType, int dateType, bool isSoldMortage, string branchCode, object userState) {
            if ((this.GetAdvanceBankTransactionReportOperationCompleted == null)) {
                this.GetAdvanceBankTransactionReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdvanceBankTransactionReportOperationCompleted);
            }
            this.InvokeAsync("GetAdvanceBankTransactionReport", new object[] {
                        key,
                        fromDate,
                        toDate,
                        bankCode,
                        contractStatus,
                        stockType,
                        dateType,
                        isSoldMortage,
                        branchCode}, this.GetAdvanceBankTransactionReportOperationCompleted, userState);
        }
        
        private void OnGetAdvanceBankTransactionReportOperationCompleted(object arg) {
            if ((this.GetAdvanceBankTransactionReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdvanceBankTransactionReportCompleted(this, new GetAdvanceBankTransactionReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetExpireContractStatusReport", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetExpireContractStatusReport(string key, System.DateTime tranDate, System.DateTime exprireDate, bool isExactlyExp, string customerId, ContractType contractType, int inDebtType) {
            object[] results = this.Invoke("GetExpireContractStatusReport", new object[] {
                        key,
                        tranDate,
                        exprireDate,
                        isExactlyExp,
                        customerId,
                        contractType,
                        inDebtType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpireContractStatusReportAsync(string key, System.DateTime tranDate, System.DateTime exprireDate, bool isExactlyExp, string customerId, ContractType contractType, int inDebtType) {
            this.GetExpireContractStatusReportAsync(key, tranDate, exprireDate, isExactlyExp, customerId, contractType, inDebtType, null);
        }
        
        /// <remarks/>
        public void GetExpireContractStatusReportAsync(string key, System.DateTime tranDate, System.DateTime exprireDate, bool isExactlyExp, string customerId, ContractType contractType, int inDebtType, object userState) {
            if ((this.GetExpireContractStatusReportOperationCompleted == null)) {
                this.GetExpireContractStatusReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpireContractStatusReportOperationCompleted);
            }
            this.InvokeAsync("GetExpireContractStatusReport", new object[] {
                        key,
                        tranDate,
                        exprireDate,
                        isExactlyExp,
                        customerId,
                        contractType,
                        inDebtType}, this.GetExpireContractStatusReportOperationCompleted, userState);
        }
        
        private void OnGetExpireContractStatusReportOperationCompleted(object arg) {
            if ((this.GetExpireContractStatusReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpireContractStatusReportCompleted(this, new GetExpireContractStatusReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetMissingStocks", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMissingStocks(string key) {
            object[] results = this.Invoke("GetMissingStocks", new object[] {
                        key});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMissingStocksAsync(string key) {
            this.GetMissingStocksAsync(key, null);
        }
        
        /// <remarks/>
        public void GetMissingStocksAsync(string key, object userState) {
            if ((this.GetMissingStocksOperationCompleted == null)) {
                this.GetMissingStocksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMissingStocksOperationCompleted);
            }
            this.InvokeAsync("GetMissingStocks", new object[] {
                        key}, this.GetMissingStocksOperationCompleted, userState);
        }
        
        private void OnGetMissingStocksOperationCompleted(object arg) {
            if ((this.GetMissingStocksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMissingStocksCompleted(this, new GetMissingStocksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetRightExecNotPayYet", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRightExecNotPayYet(string key, string stockCode, string customerId) {
            object[] results = this.Invoke("GetRightExecNotPayYet", new object[] {
                        key,
                        stockCode,
                        customerId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRightExecNotPayYetAsync(string key, string stockCode, string customerId) {
            this.GetRightExecNotPayYetAsync(key, stockCode, customerId, null);
        }
        
        /// <remarks/>
        public void GetRightExecNotPayYetAsync(string key, string stockCode, string customerId, object userState) {
            if ((this.GetRightExecNotPayYetOperationCompleted == null)) {
                this.GetRightExecNotPayYetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRightExecNotPayYetOperationCompleted);
            }
            this.InvokeAsync("GetRightExecNotPayYet", new object[] {
                        key,
                        stockCode,
                        customerId}, this.GetRightExecNotPayYetOperationCompleted, userState);
        }
        
        private void OnGetRightExecNotPayYetOperationCompleted(object arg) {
            if ((this.GetRightExecNotPayYetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRightExecNotPayYetCompleted(this, new GetRightExecNotPayYetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetRightExecRegisterNotPayYet", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRightExecRegisterNotPayYet(string key, string stockCode, string customerId, System.DateTime transDate) {
            object[] results = this.Invoke("GetRightExecRegisterNotPayYet", new object[] {
                        key,
                        stockCode,
                        customerId,
                        transDate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRightExecRegisterNotPayYetAsync(string key, string stockCode, string customerId, System.DateTime transDate) {
            this.GetRightExecRegisterNotPayYetAsync(key, stockCode, customerId, transDate, null);
        }
        
        /// <remarks/>
        public void GetRightExecRegisterNotPayYetAsync(string key, string stockCode, string customerId, System.DateTime transDate, object userState) {
            if ((this.GetRightExecRegisterNotPayYetOperationCompleted == null)) {
                this.GetRightExecRegisterNotPayYetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRightExecRegisterNotPayYetOperationCompleted);
            }
            this.InvokeAsync("GetRightExecRegisterNotPayYet", new object[] {
                        key,
                        stockCode,
                        customerId,
                        transDate}, this.GetRightExecRegisterNotPayYetOperationCompleted, userState);
        }
        
        private void OnGetRightExecRegisterNotPayYetOperationCompleted(object arg) {
            if ((this.GetRightExecRegisterNotPayYetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRightExecRegisterNotPayYetCompleted(this, new GetRightExecRegisterNotPayYetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/CancelRightExec", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelRightExec(string key, int rightId, string customerID, bool isRightRegisterd) {
            this.Invoke("CancelRightExec", new object[] {
                        key,
                        rightId,
                        customerID,
                        isRightRegisterd});
        }
        
        /// <remarks/>
        public void CancelRightExecAsync(string key, int rightId, string customerID, bool isRightRegisterd) {
            this.CancelRightExecAsync(key, rightId, customerID, isRightRegisterd, null);
        }
        
        /// <remarks/>
        public void CancelRightExecAsync(string key, int rightId, string customerID, bool isRightRegisterd, object userState) {
            if ((this.CancelRightExecOperationCompleted == null)) {
                this.CancelRightExecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelRightExecOperationCompleted);
            }
            this.InvokeAsync("CancelRightExec", new object[] {
                        key,
                        rightId,
                        customerID,
                        isRightRegisterd}, this.CancelRightExecOperationCompleted, userState);
        }
        
        private void OnCancelRightExecOperationCompleted(object arg) {
            if ((this.CancelRightExecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelRightExecCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetBuyCashContractList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BuyCashContract[] GetBuyCashContractList(string key, System.DateTime createdDate, string status) {
            object[] results = this.Invoke("GetBuyCashContractList", new object[] {
                        key,
                        createdDate,
                        status});
            return ((BuyCashContract[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBuyCashContractListAsync(string key, System.DateTime createdDate, string status) {
            this.GetBuyCashContractListAsync(key, createdDate, status, null);
        }
        
        /// <remarks/>
        public void GetBuyCashContractListAsync(string key, System.DateTime createdDate, string status, object userState) {
            if ((this.GetBuyCashContractListOperationCompleted == null)) {
                this.GetBuyCashContractListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBuyCashContractListOperationCompleted);
            }
            this.InvokeAsync("GetBuyCashContractList", new object[] {
                        key,
                        createdDate,
                        status}, this.GetBuyCashContractListOperationCompleted, userState);
        }
        
        private void OnGetBuyCashContractListOperationCompleted(object arg) {
            if ((this.GetBuyCashContractListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBuyCashContractListCompleted(this, new GetBuyCashContractListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/ChangeBuyCashContractStatus", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeBuyCashContractStatus(string key, System.Guid id, string status) {
            this.Invoke("ChangeBuyCashContractStatus", new object[] {
                        key,
                        id,
                        status});
        }
        
        /// <remarks/>
        public void ChangeBuyCashContractStatusAsync(string key, System.Guid id, string status) {
            this.ChangeBuyCashContractStatusAsync(key, id, status, null);
        }
        
        /// <remarks/>
        public void ChangeBuyCashContractStatusAsync(string key, System.Guid id, string status, object userState) {
            if ((this.ChangeBuyCashContractStatusOperationCompleted == null)) {
                this.ChangeBuyCashContractStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeBuyCashContractStatusOperationCompleted);
            }
            this.InvokeAsync("ChangeBuyCashContractStatus", new object[] {
                        key,
                        id,
                        status}, this.ChangeBuyCashContractStatusOperationCompleted, userState);
        }
        
        private void OnChangeBuyCashContractStatusOperationCompleted(object arg) {
            if ((this.ChangeBuyCashContractStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeBuyCashContractStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetBuyCashContractReport", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBuyCashContractReport(string key, System.DateTime fromDate, System.DateTime toDate, string status, string stockType, int dateType, bool isSoldMortage) {
            object[] results = this.Invoke("GetBuyCashContractReport", new object[] {
                        key,
                        fromDate,
                        toDate,
                        status,
                        stockType,
                        dateType,
                        isSoldMortage});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBuyCashContractReportAsync(string key, System.DateTime fromDate, System.DateTime toDate, string status, string stockType, int dateType, bool isSoldMortage) {
            this.GetBuyCashContractReportAsync(key, fromDate, toDate, status, stockType, dateType, isSoldMortage, null);
        }
        
        /// <remarks/>
        public void GetBuyCashContractReportAsync(string key, System.DateTime fromDate, System.DateTime toDate, string status, string stockType, int dateType, bool isSoldMortage, object userState) {
            if ((this.GetBuyCashContractReportOperationCompleted == null)) {
                this.GetBuyCashContractReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBuyCashContractReportOperationCompleted);
            }
            this.InvokeAsync("GetBuyCashContractReport", new object[] {
                        key,
                        fromDate,
                        toDate,
                        status,
                        stockType,
                        dateType,
                        isSoldMortage}, this.GetBuyCashContractReportOperationCompleted, userState);
        }
        
        private void OnGetBuyCashContractReportOperationCompleted(object arg) {
            if ((this.GetBuyCashContractReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBuyCashContractReportCompleted(this, new GetBuyCashContractReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetDefinedBalanceAccounts", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BalanceAccount[] GetDefinedBalanceAccounts(string key, string code) {
            object[] results = this.Invoke("GetDefinedBalanceAccounts", new object[] {
                        key,
                        code});
            return ((BalanceAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDefinedBalanceAccountsAsync(string key, string code) {
            this.GetDefinedBalanceAccountsAsync(key, code, null);
        }
        
        /// <remarks/>
        public void GetDefinedBalanceAccountsAsync(string key, string code, object userState) {
            if ((this.GetDefinedBalanceAccountsOperationCompleted == null)) {
                this.GetDefinedBalanceAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefinedBalanceAccountsOperationCompleted);
            }
            this.InvokeAsync("GetDefinedBalanceAccounts", new object[] {
                        key,
                        code}, this.GetDefinedBalanceAccountsOperationCompleted, userState);
        }
        
        private void OnGetDefinedBalanceAccountsOperationCompleted(object arg) {
            if ((this.GetDefinedBalanceAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefinedBalanceAccountsCompleted(this, new GetDefinedBalanceAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/InsertBank", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertBank(string key, Bank bank) {
            this.Invoke("InsertBank", new object[] {
                        key,
                        bank});
        }
        
        /// <remarks/>
        public void InsertBankAsync(string key, Bank bank) {
            this.InsertBankAsync(key, bank, null);
        }
        
        /// <remarks/>
        public void InsertBankAsync(string key, Bank bank, object userState) {
            if ((this.InsertBankOperationCompleted == null)) {
                this.InsertBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBankOperationCompleted);
            }
            this.InvokeAsync("InsertBank", new object[] {
                        key,
                        bank}, this.InsertBankOperationCompleted, userState);
        }
        
        private void OnInsertBankOperationCompleted(object arg) {
            if ((this.InsertBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBankCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/UpdateBank", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBank(string key, Bank bank) {
            this.Invoke("UpdateBank", new object[] {
                        key,
                        bank});
        }
        
        /// <remarks/>
        public void UpdateBankAsync(string key, Bank bank) {
            this.UpdateBankAsync(key, bank, null);
        }
        
        /// <remarks/>
        public void UpdateBankAsync(string key, Bank bank, object userState) {
            if ((this.UpdateBankOperationCompleted == null)) {
                this.UpdateBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBankOperationCompleted);
            }
            this.InvokeAsync("UpdateBank", new object[] {
                        key,
                        bank}, this.UpdateBankOperationCompleted, userState);
        }
        
        private void OnUpdateBankOperationCompleted(object arg) {
            if ((this.UpdateBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBankCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/DeleteBank", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBank(string key, string bankCode) {
            this.Invoke("DeleteBank", new object[] {
                        key,
                        bankCode});
        }
        
        /// <remarks/>
        public void DeleteBankAsync(string key, string bankCode) {
            this.DeleteBankAsync(key, bankCode, null);
        }
        
        /// <remarks/>
        public void DeleteBankAsync(string key, string bankCode, object userState) {
            if ((this.DeleteBankOperationCompleted == null)) {
                this.DeleteBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBankOperationCompleted);
            }
            this.InvokeAsync("DeleteBank", new object[] {
                        key,
                        bankCode}, this.DeleteBankOperationCompleted, userState);
        }
        
        private void OnDeleteBankOperationCompleted(object arg) {
            if ((this.DeleteBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBankCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetBankList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bank[] GetBankList(string key) {
            object[] results = this.Invoke("GetBankList", new object[] {
                        key});
            return ((Bank[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBankListAsync(string key) {
            this.GetBankListAsync(key, null);
        }
        
        /// <remarks/>
        public void GetBankListAsync(string key, object userState) {
            if ((this.GetBankListOperationCompleted == null)) {
                this.GetBankListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankListOperationCompleted);
            }
            this.InvokeAsync("GetBankList", new object[] {
                        key}, this.GetBankListOperationCompleted, userState);
        }
        
        private void OnGetBankListOperationCompleted(object arg) {
            if ((this.GetBankListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankListCompleted(this, new GetBankListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetBank", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bank GetBank(string key, string bankCode) {
            object[] results = this.Invoke("GetBank", new object[] {
                        key,
                        bankCode});
            return ((Bank)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankAsync(string key, string bankCode) {
            this.GetBankAsync(key, bankCode, null);
        }
        
        /// <remarks/>
        public void GetBankAsync(string key, string bankCode, object userState) {
            if ((this.GetBankOperationCompleted == null)) {
                this.GetBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankOperationCompleted);
            }
            this.InvokeAsync("GetBank", new object[] {
                        key,
                        bankCode}, this.GetBankOperationCompleted, userState);
        }
        
        private void OnGetBankOperationCompleted(object arg) {
            if ((this.GetBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankCompleted(this, new GetBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/InsertBankBranch", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertBankBranch(string key, BankBranch bankBranch) {
            this.Invoke("InsertBankBranch", new object[] {
                        key,
                        bankBranch});
        }
        
        /// <remarks/>
        public void InsertBankBranchAsync(string key, BankBranch bankBranch) {
            this.InsertBankBranchAsync(key, bankBranch, null);
        }
        
        /// <remarks/>
        public void InsertBankBranchAsync(string key, BankBranch bankBranch, object userState) {
            if ((this.InsertBankBranchOperationCompleted == null)) {
                this.InsertBankBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBankBranchOperationCompleted);
            }
            this.InvokeAsync("InsertBankBranch", new object[] {
                        key,
                        bankBranch}, this.InsertBankBranchOperationCompleted, userState);
        }
        
        private void OnInsertBankBranchOperationCompleted(object arg) {
            if ((this.InsertBankBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBankBranchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/UpdateBankBranch", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBankBranch(string key, BankBranch bankBranch) {
            this.Invoke("UpdateBankBranch", new object[] {
                        key,
                        bankBranch});
        }
        
        /// <remarks/>
        public void UpdateBankBranchAsync(string key, BankBranch bankBranch) {
            this.UpdateBankBranchAsync(key, bankBranch, null);
        }
        
        /// <remarks/>
        public void UpdateBankBranchAsync(string key, BankBranch bankBranch, object userState) {
            if ((this.UpdateBankBranchOperationCompleted == null)) {
                this.UpdateBankBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBankBranchOperationCompleted);
            }
            this.InvokeAsync("UpdateBankBranch", new object[] {
                        key,
                        bankBranch}, this.UpdateBankBranchOperationCompleted, userState);
        }
        
        private void OnUpdateBankBranchOperationCompleted(object arg) {
            if ((this.UpdateBankBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBankBranchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/DeleteBankBranch", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBankBranch(string key, string bankBranchCode) {
            this.Invoke("DeleteBankBranch", new object[] {
                        key,
                        bankBranchCode});
        }
        
        /// <remarks/>
        public void DeleteBankBranchAsync(string key, string bankBranchCode) {
            this.DeleteBankBranchAsync(key, bankBranchCode, null);
        }
        
        /// <remarks/>
        public void DeleteBankBranchAsync(string key, string bankBranchCode, object userState) {
            if ((this.DeleteBankBranchOperationCompleted == null)) {
                this.DeleteBankBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBankBranchOperationCompleted);
            }
            this.InvokeAsync("DeleteBankBranch", new object[] {
                        key,
                        bankBranchCode}, this.DeleteBankBranchOperationCompleted, userState);
        }
        
        private void OnDeleteBankBranchOperationCompleted(object arg) {
            if ((this.DeleteBankBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBankBranchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetBankBranchList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BankBranch[] GetBankBranchList(string key, string bankCode) {
            object[] results = this.Invoke("GetBankBranchList", new object[] {
                        key,
                        bankCode});
            return ((BankBranch[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBankBranchListAsync(string key, string bankCode) {
            this.GetBankBranchListAsync(key, bankCode, null);
        }
        
        /// <remarks/>
        public void GetBankBranchListAsync(string key, string bankCode, object userState) {
            if ((this.GetBankBranchListOperationCompleted == null)) {
                this.GetBankBranchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankBranchListOperationCompleted);
            }
            this.InvokeAsync("GetBankBranchList", new object[] {
                        key,
                        bankCode}, this.GetBankBranchListOperationCompleted, userState);
        }
        
        private void OnGetBankBranchListOperationCompleted(object arg) {
            if ((this.GetBankBranchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankBranchListCompleted(this, new GetBankBranchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetBankBranch", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BankBranch GetBankBranch(string key, string bankBranchCode) {
            object[] results = this.Invoke("GetBankBranch", new object[] {
                        key,
                        bankBranchCode});
            return ((BankBranch)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankBranchAsync(string key, string bankBranchCode) {
            this.GetBankBranchAsync(key, bankBranchCode, null);
        }
        
        /// <remarks/>
        public void GetBankBranchAsync(string key, string bankBranchCode, object userState) {
            if ((this.GetBankBranchOperationCompleted == null)) {
                this.GetBankBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankBranchOperationCompleted);
            }
            this.InvokeAsync("GetBankBranch", new object[] {
                        key,
                        bankBranchCode}, this.GetBankBranchOperationCompleted, userState);
        }
        
        private void OnGetBankBranchOperationCompleted(object arg) {
            if ((this.GetBankBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankBranchCompleted(this, new GetBankBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetAllProvince", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllProvince(string key) {
            object[] results = this.Invoke("GetAllProvince", new object[] {
                        key});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProvinceAsync(string key) {
            this.GetAllProvinceAsync(key, null);
        }
        
        /// <remarks/>
        public void GetAllProvinceAsync(string key, object userState) {
            if ((this.GetAllProvinceOperationCompleted == null)) {
                this.GetAllProvinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProvinceOperationCompleted);
            }
            this.InvokeAsync("GetAllProvince", new object[] {
                        key}, this.GetAllProvinceOperationCompleted, userState);
        }
        
        private void OnGetAllProvinceOperationCompleted(object arg) {
            if ((this.GetAllProvinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProvinceCompleted(this, new GetAllProvinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/InsertAccountTransfer", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAccountTransfer(string key, AccountTransfer accountTransfer) {
            this.Invoke("InsertAccountTransfer", new object[] {
                        key,
                        accountTransfer});
        }
        
        /// <remarks/>
        public void InsertAccountTransferAsync(string key, AccountTransfer accountTransfer) {
            this.InsertAccountTransferAsync(key, accountTransfer, null);
        }
        
        /// <remarks/>
        public void InsertAccountTransferAsync(string key, AccountTransfer accountTransfer, object userState) {
            if ((this.InsertAccountTransferOperationCompleted == null)) {
                this.InsertAccountTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAccountTransferOperationCompleted);
            }
            this.InvokeAsync("InsertAccountTransfer", new object[] {
                        key,
                        accountTransfer}, this.InsertAccountTransferOperationCompleted, userState);
        }
        
        private void OnInsertAccountTransferOperationCompleted(object arg) {
            if ((this.InsertAccountTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAccountTransferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/UpdateAccountTransfer", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAccountTransfer(string key, AccountTransfer accountTransfer) {
            this.Invoke("UpdateAccountTransfer", new object[] {
                        key,
                        accountTransfer});
        }
        
        /// <remarks/>
        public void UpdateAccountTransferAsync(string key, AccountTransfer accountTransfer) {
            this.UpdateAccountTransferAsync(key, accountTransfer, null);
        }
        
        /// <remarks/>
        public void UpdateAccountTransferAsync(string key, AccountTransfer accountTransfer, object userState) {
            if ((this.UpdateAccountTransferOperationCompleted == null)) {
                this.UpdateAccountTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountTransferOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountTransfer", new object[] {
                        key,
                        accountTransfer}, this.UpdateAccountTransferOperationCompleted, userState);
        }
        
        private void OnUpdateAccountTransferOperationCompleted(object arg) {
            if ((this.UpdateAccountTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountTransferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/DeleteAccountTransfer", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountTransfer(string key, string accountID, string customerID) {
            this.Invoke("DeleteAccountTransfer", new object[] {
                        key,
                        accountID,
                        customerID});
        }
        
        /// <remarks/>
        public void DeleteAccountTransferAsync(string key, string accountID, string customerID) {
            this.DeleteAccountTransferAsync(key, accountID, customerID, null);
        }
        
        /// <remarks/>
        public void DeleteAccountTransferAsync(string key, string accountID, string customerID, object userState) {
            if ((this.DeleteAccountTransferOperationCompleted == null)) {
                this.DeleteAccountTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountTransferOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountTransfer", new object[] {
                        key,
                        accountID,
                        customerID}, this.DeleteAccountTransferOperationCompleted, userState);
        }
        
        private void OnDeleteAccountTransferOperationCompleted(object arg) {
            if ((this.DeleteAccountTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountTransferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetAccountTransferList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountTransfer[] GetAccountTransferList(string key, string customerID, string accountID) {
            object[] results = this.Invoke("GetAccountTransferList", new object[] {
                        key,
                        customerID,
                        accountID});
            return ((AccountTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountTransferListAsync(string key, string customerID, string accountID) {
            this.GetAccountTransferListAsync(key, customerID, accountID, null);
        }
        
        /// <remarks/>
        public void GetAccountTransferListAsync(string key, string customerID, string accountID, object userState) {
            if ((this.GetAccountTransferListOperationCompleted == null)) {
                this.GetAccountTransferListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountTransferListOperationCompleted);
            }
            this.InvokeAsync("GetAccountTransferList", new object[] {
                        key,
                        customerID,
                        accountID}, this.GetAccountTransferListOperationCompleted, userState);
        }
        
        private void OnGetAccountTransferListOperationCompleted(object arg) {
            if ((this.GetAccountTransferListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountTransferListCompleted(this, new GetAccountTransferListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetAccountTransfer", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountTransfer GetAccountTransfer(string key, string accountID, string customerID) {
            object[] results = this.Invoke("GetAccountTransfer", new object[] {
                        key,
                        accountID,
                        customerID});
            return ((AccountTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountTransferAsync(string key, string accountID, string customerID) {
            this.GetAccountTransferAsync(key, accountID, customerID, null);
        }
        
        /// <remarks/>
        public void GetAccountTransferAsync(string key, string accountID, string customerID, object userState) {
            if ((this.GetAccountTransferOperationCompleted == null)) {
                this.GetAccountTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountTransferOperationCompleted);
            }
            this.InvokeAsync("GetAccountTransfer", new object[] {
                        key,
                        accountID,
                        customerID}, this.GetAccountTransferOperationCompleted, userState);
        }
        
        private void OnGetAccountTransferOperationCompleted(object arg) {
            if ((this.GetAccountTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountTransferCompleted(this, new GetAccountTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/OnlineTransferChangeStatus", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OnlineTransferChangeStatus(string key, long transferID, string status, string reject, decimal transferFee) {
            this.Invoke("OnlineTransferChangeStatus", new object[] {
                        key,
                        transferID,
                        status,
                        reject,
                        transferFee});
        }
        
        /// <remarks/>
        public void OnlineTransferChangeStatusAsync(string key, long transferID, string status, string reject, decimal transferFee) {
            this.OnlineTransferChangeStatusAsync(key, transferID, status, reject, transferFee, null);
        }
        
        /// <remarks/>
        public void OnlineTransferChangeStatusAsync(string key, long transferID, string status, string reject, decimal transferFee, object userState) {
            if ((this.OnlineTransferChangeStatusOperationCompleted == null)) {
                this.OnlineTransferChangeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnlineTransferChangeStatusOperationCompleted);
            }
            this.InvokeAsync("OnlineTransferChangeStatus", new object[] {
                        key,
                        transferID,
                        status,
                        reject,
                        transferFee}, this.OnlineTransferChangeStatusOperationCompleted, userState);
        }
        
        private void OnOnlineTransferChangeStatusOperationCompleted(object arg) {
            if ((this.OnlineTransferChangeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnlineTransferChangeStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetOnlineTransferReport", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOnlineTransferReport(string key, System.DateTime fromDate, System.DateTime toDate, string status) {
            object[] results = this.Invoke("GetOnlineTransferReport", new object[] {
                        key,
                        fromDate,
                        toDate,
                        status});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOnlineTransferReportAsync(string key, System.DateTime fromDate, System.DateTime toDate, string status) {
            this.GetOnlineTransferReportAsync(key, fromDate, toDate, status, null);
        }
        
        /// <remarks/>
        public void GetOnlineTransferReportAsync(string key, System.DateTime fromDate, System.DateTime toDate, string status, object userState) {
            if ((this.GetOnlineTransferReportOperationCompleted == null)) {
                this.GetOnlineTransferReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnlineTransferReportOperationCompleted);
            }
            this.InvokeAsync("GetOnlineTransferReport", new object[] {
                        key,
                        fromDate,
                        toDate,
                        status}, this.GetOnlineTransferReportOperationCompleted, userState);
        }
        
        private void OnGetOnlineTransferReportOperationCompleted(object arg) {
            if ((this.GetOnlineTransferReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnlineTransferReportCompleted(this, new GetOnlineTransferReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetOnlineRegistedReport", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOnlineRegistedReport(string key, System.DateTime fromDate, System.DateTime toDate, string active) {
            object[] results = this.Invoke("GetOnlineRegistedReport", new object[] {
                        key,
                        fromDate,
                        toDate,
                        active});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOnlineRegistedReportAsync(string key, System.DateTime fromDate, System.DateTime toDate, string active) {
            this.GetOnlineRegistedReportAsync(key, fromDate, toDate, active, null);
        }
        
        /// <remarks/>
        public void GetOnlineRegistedReportAsync(string key, System.DateTime fromDate, System.DateTime toDate, string active, object userState) {
            if ((this.GetOnlineRegistedReportOperationCompleted == null)) {
                this.GetOnlineRegistedReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnlineRegistedReportOperationCompleted);
            }
            this.InvokeAsync("GetOnlineRegistedReport", new object[] {
                        key,
                        fromDate,
                        toDate,
                        active}, this.GetOnlineRegistedReportOperationCompleted, userState);
        }
        
        private void OnGetOnlineRegistedReportOperationCompleted(object arg) {
            if ((this.GetOnlineRegistedReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnlineRegistedReportCompleted(this, new GetOnlineRegistedReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetOnlineTransferList", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OnlineTransfer[] GetOnlineTransferList(string key, string customerID, string accountID, System.DateTime fromDate, System.DateTime toDate, string status) {
            object[] results = this.Invoke("GetOnlineTransferList", new object[] {
                        key,
                        customerID,
                        accountID,
                        fromDate,
                        toDate,
                        status});
            return ((OnlineTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOnlineTransferListAsync(string key, string customerID, string accountID, System.DateTime fromDate, System.DateTime toDate, string status) {
            this.GetOnlineTransferListAsync(key, customerID, accountID, fromDate, toDate, status, null);
        }
        
        /// <remarks/>
        public void GetOnlineTransferListAsync(string key, string customerID, string accountID, System.DateTime fromDate, System.DateTime toDate, string status, object userState) {
            if ((this.GetOnlineTransferListOperationCompleted == null)) {
                this.GetOnlineTransferListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnlineTransferListOperationCompleted);
            }
            this.InvokeAsync("GetOnlineTransferList", new object[] {
                        key,
                        customerID,
                        accountID,
                        fromDate,
                        toDate,
                        status}, this.GetOnlineTransferListOperationCompleted, userState);
        }
        
        private void OnGetOnlineTransferListOperationCompleted(object arg) {
            if ((this.GetOnlineTransferListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnlineTransferListCompleted(this, new GetOnlineTransferListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetOnlineTransfer", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OnlineTransfer GetOnlineTransfer(string key, long transferID) {
            object[] results = this.Invoke("GetOnlineTransfer", new object[] {
                        key,
                        transferID});
            return ((OnlineTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetOnlineTransferAsync(string key, long transferID) {
            this.GetOnlineTransferAsync(key, transferID, null);
        }
        
        /// <remarks/>
        public void GetOnlineTransferAsync(string key, long transferID, object userState) {
            if ((this.GetOnlineTransferOperationCompleted == null)) {
                this.GetOnlineTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnlineTransferOperationCompleted);
            }
            this.InvokeAsync("GetOnlineTransfer", new object[] {
                        key,
                        transferID}, this.GetOnlineTransferOperationCompleted, userState);
        }
        
        private void OnGetOnlineTransferOperationCompleted(object arg) {
            if ((this.GetOnlineTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnlineTransferCompleted(this, new GetOnlineTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetInterestRate", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetInterestRate(string key) {
            object[] results = this.Invoke("GetInterestRate", new object[] {
                        key});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetInterestRateAsync(string key) {
            this.GetInterestRateAsync(key, null);
        }
        
        /// <remarks/>
        public void GetInterestRateAsync(string key, object userState) {
            if ((this.GetInterestRateOperationCompleted == null)) {
                this.GetInterestRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInterestRateOperationCompleted);
            }
            this.InvokeAsync("GetInterestRate", new object[] {
                        key}, this.GetInterestRateOperationCompleted, userState);
        }
        
        private void OnGetInterestRateOperationCompleted(object arg) {
            if ((this.GetInterestRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInterestRateCompleted(this, new GetInterestRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetSbsIncomeTax", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IncomeTax[] GetSbsIncomeTax(string key, string branch, System.DateTime from, System.DateTime to, string accountNumner) {
            object[] results = this.Invoke("GetSbsIncomeTax", new object[] {
                        key,
                        branch,
                        from,
                        to,
                        accountNumner});
            return ((IncomeTax[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSbsIncomeTaxAsync(string key, string branch, System.DateTime from, System.DateTime to, string accountNumner) {
            this.GetSbsIncomeTaxAsync(key, branch, from, to, accountNumner, null);
        }
        
        /// <remarks/>
        public void GetSbsIncomeTaxAsync(string key, string branch, System.DateTime from, System.DateTime to, string accountNumner, object userState) {
            if ((this.GetSbsIncomeTaxOperationCompleted == null)) {
                this.GetSbsIncomeTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSbsIncomeTaxOperationCompleted);
            }
            this.InvokeAsync("GetSbsIncomeTax", new object[] {
                        key,
                        branch,
                        from,
                        to,
                        accountNumner}, this.GetSbsIncomeTaxOperationCompleted, userState);
        }
        
        private void OnGetSbsIncomeTaxOperationCompleted(object arg) {
            if ((this.GetSbsIncomeTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSbsIncomeTaxCompleted(this, new GetSbsIncomeTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/GetKtIncomeTax", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IncomeTax[] GetKtIncomeTax(string key, string branch, System.DateTime from, System.DateTime to, string accountNumner) {
            object[] results = this.Invoke("GetKtIncomeTax", new object[] {
                        key,
                        branch,
                        from,
                        to,
                        accountNumner});
            return ((IncomeTax[])(results[0]));
        }
        
        /// <remarks/>
        public void GetKtIncomeTaxAsync(string key, string branch, System.DateTime from, System.DateTime to, string accountNumner) {
            this.GetKtIncomeTaxAsync(key, branch, from, to, accountNumner, null);
        }
        
        /// <remarks/>
        public void GetKtIncomeTaxAsync(string key, string branch, System.DateTime from, System.DateTime to, string accountNumner, object userState) {
            if ((this.GetKtIncomeTaxOperationCompleted == null)) {
                this.GetKtIncomeTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKtIncomeTaxOperationCompleted);
            }
            this.InvokeAsync("GetKtIncomeTax", new object[] {
                        key,
                        branch,
                        from,
                        to,
                        accountNumner}, this.GetKtIncomeTaxOperationCompleted, userState);
        }
        
        private void OnGetKtIncomeTaxOperationCompleted(object arg) {
            if ((this.GetKtIncomeTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKtIncomeTaxCompleted(this, new GetKtIncomeTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/InsertKtIncomeTax", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IncomeTax[] InsertKtIncomeTax(string key, string branch, System.DateTime from, System.DateTime to, string accountNumner) {
            object[] results = this.Invoke("InsertKtIncomeTax", new object[] {
                        key,
                        branch,
                        from,
                        to,
                        accountNumner});
            return ((IncomeTax[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertKtIncomeTaxAsync(string key, string branch, System.DateTime from, System.DateTime to, string accountNumner) {
            this.InsertKtIncomeTaxAsync(key, branch, from, to, accountNumner, null);
        }
        
        /// <remarks/>
        public void InsertKtIncomeTaxAsync(string key, string branch, System.DateTime from, System.DateTime to, string accountNumner, object userState) {
            if ((this.InsertKtIncomeTaxOperationCompleted == null)) {
                this.InsertKtIncomeTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertKtIncomeTaxOperationCompleted);
            }
            this.InvokeAsync("InsertKtIncomeTax", new object[] {
                        key,
                        branch,
                        from,
                        to,
                        accountNumner}, this.InsertKtIncomeTaxOperationCompleted, userState);
        }
        
        private void OnInsertKtIncomeTaxOperationCompleted(object arg) {
            if ((this.InsertKtIncomeTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertKtIncomeTaxCompleted(this, new InsertKtIncomeTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.vn/VariableCapitalPrices", RequestNamespace="http://vics.vn/", ResponseNamespace="http://vics.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VariableCapitalPrice[] VariableCapitalPrices(string key, string stockCode, System.DateTime fromDate, System.DateTime toDate) {
            object[] results = this.Invoke("VariableCapitalPrices", new object[] {
                        key,
                        stockCode,
                        fromDate,
                        toDate});
            return ((VariableCapitalPrice[])(results[0]));
        }
        
        /// <remarks/>
        public void VariableCapitalPricesAsync(string key, string stockCode, System.DateTime fromDate, System.DateTime toDate) {
            this.VariableCapitalPricesAsync(key, stockCode, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void VariableCapitalPricesAsync(string key, string stockCode, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.VariableCapitalPricesOperationCompleted == null)) {
                this.VariableCapitalPricesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVariableCapitalPricesOperationCompleted);
            }
            this.InvokeAsync("VariableCapitalPrices", new object[] {
                        key,
                        stockCode,
                        fromDate,
                        toDate}, this.VariableCapitalPricesOperationCompleted, userState);
        }
        
        private void OnVariableCapitalPricesOperationCompleted(object arg) {
            if ((this.VariableCapitalPricesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VariableCapitalPricesCompleted(this, new VariableCapitalPricesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class VariableCapitalPrice {
        
        private System.Guid idField;
        
        private string stockCodeField;
        
        private decimal priceField;
        
        private System.DateTime transactionDateField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string StockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransactionDate {
            get {
                return this.transactionDateField;
            }
            set {
                this.transactionDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class IncomeTax {
        
        private string accountIdField;
        
        private string accountNameField;
        
        private string transactionNumberField;
        
        private string descriptionField;
        
        private decimal amountField;
        
        private System.DateTime transactiondateField;
        
        private string branchCodeField;
        
        private string tradeCodeField;
        
        private string cardIdentityField;
        
        /// <remarks/>
        public string AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionNumber {
            get {
                return this.transactionNumberField;
            }
            set {
                this.transactionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Transactiondate {
            get {
                return this.transactiondateField;
            }
            set {
                this.transactiondateField = value;
            }
        }
        
        /// <remarks/>
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TradeCode {
            get {
                return this.tradeCodeField;
            }
            set {
                this.tradeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CardIdentity {
            get {
                return this.cardIdentityField;
            }
            set {
                this.cardIdentityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class OnlineTransfer {
        
        private long transferIDField;
        
        private System.DateTime transferDateField;
        
        private string customerIDField;
        
        private string toAccountIDField;
        
        private decimal amountField;
        
        private decimal currentAmountField;
        
        private string descriptionField;
        
        private decimal transferFeeField;
        
        private string bankCodeField;
        
        private string bankBrachCodeField;
        
        private string statusField;
        
        private string transferTypeField;
        
        private string userProcessField;
        
        private System.DateTime dateProcessField;
        
        private string rejectField;
        
        private string contractIDField;
        
        /// <remarks/>
        public long TransferID {
            get {
                return this.transferIDField;
            }
            set {
                this.transferIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransferDate {
            get {
                return this.transferDateField;
            }
            set {
                this.transferDateField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ToAccountID {
            get {
                return this.toAccountIDField;
            }
            set {
                this.toAccountIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal CurrentAmount {
            get {
                return this.currentAmountField;
            }
            set {
                this.currentAmountField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal TransferFee {
            get {
                return this.transferFeeField;
            }
            set {
                this.transferFeeField = value;
            }
        }
        
        /// <remarks/>
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BankBrachCode {
            get {
                return this.bankBrachCodeField;
            }
            set {
                this.bankBrachCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string TransferType {
            get {
                return this.transferTypeField;
            }
            set {
                this.transferTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UserProcess {
            get {
                return this.userProcessField;
            }
            set {
                this.userProcessField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateProcess {
            get {
                return this.dateProcessField;
            }
            set {
                this.dateProcessField = value;
            }
        }
        
        /// <remarks/>
        public string Reject {
            get {
                return this.rejectField;
            }
            set {
                this.rejectField = value;
            }
        }
        
        /// <remarks/>
        public string ContractID {
            get {
                return this.contractIDField;
            }
            set {
                this.contractIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class AccountTransfer {
        
        private string accountIDField;
        
        private string customerIDField;
        
        private string accountNameField;
        
        private string isAuthorizationField;
        
        private string bankCodeField;
        
        private string bankBranchCodeField;
        
        private string cardIdentityField;
        
        private System.DateTime cardDateField;
        
        private string cardIssuerField;
        
        private string userCreateField;
        
        private System.DateTime dateCreateField;
        
        private bool activeField;
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string isAuthorization {
            get {
                return this.isAuthorizationField;
            }
            set {
                this.isAuthorizationField = value;
            }
        }
        
        /// <remarks/>
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BankBranchCode {
            get {
                return this.bankBranchCodeField;
            }
            set {
                this.bankBranchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CardIdentity {
            get {
                return this.cardIdentityField;
            }
            set {
                this.cardIdentityField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardDate {
            get {
                return this.cardDateField;
            }
            set {
                this.cardDateField = value;
            }
        }
        
        /// <remarks/>
        public string CardIssuer {
            get {
                return this.cardIssuerField;
            }
            set {
                this.cardIssuerField = value;
            }
        }
        
        /// <remarks/>
        public string UserCreate {
            get {
                return this.userCreateField;
            }
            set {
                this.userCreateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreate {
            get {
                return this.dateCreateField;
            }
            set {
                this.dateCreateField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class BankBranch {
        
        private string bankBranchCodeField;
        
        private string fullNameField;
        
        private string shortNameField;
        
        private string descriptionField;
        
        private bool isPaymentField;
        
        private string delegatePersonField;
        
        private string departmentField;
        
        private string positionField;
        
        private string mobileField;
        
        private string telField;
        
        private string faxField;
        
        private string emailField;
        
        private string addressField;
        
        private string provinceCodeField;
        
        private string bankCodeField;
        
        /// <remarks/>
        public string BankBranchCode {
            get {
                return this.bankBranchCodeField;
            }
            set {
                this.bankBranchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPayment {
            get {
                return this.isPaymentField;
            }
            set {
                this.isPaymentField = value;
            }
        }
        
        /// <remarks/>
        public string DelegatePerson {
            get {
                return this.delegatePersonField;
            }
            set {
                this.delegatePersonField = value;
            }
        }
        
        /// <remarks/>
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string Tel {
            get {
                return this.telField;
            }
            set {
                this.telField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string ProvinceCode {
            get {
                return this.provinceCodeField;
            }
            set {
                this.provinceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class Bank {
        
        private string bankCodeField;
        
        private string fullNameField;
        
        private string shortNameField;
        
        private string descriptionField;
        
        private bool isPaymentField;
        
        private string delegatePersonField;
        
        private string departmentField;
        
        private string positionField;
        
        private string mobileField;
        
        private string telField;
        
        private string faxField;
        
        private string emailField;
        
        private string addressField;
        
        /// <remarks/>
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPayment {
            get {
                return this.isPaymentField;
            }
            set {
                this.isPaymentField = value;
            }
        }
        
        /// <remarks/>
        public string DelegatePerson {
            get {
                return this.delegatePersonField;
            }
            set {
                this.delegatePersonField = value;
            }
        }
        
        /// <remarks/>
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string Tel {
            get {
                return this.telField;
            }
            set {
                this.telField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class BuyCashContract {
        
        private string contractIdField;
        
        private string branchCodeField;
        
        private string customerIdField;
        
        private string customerNameField;
        
        private string cardIdentityField;
        
        private string cardIssuerField;
        
        private string customerTelField;
        
        private string customerAddressField;
        
        private string stockTypeField;
        
        private string rateTypeField;
        
        private string statusField;
        
        private string userCreateField;
        
        private string notesField;
        
        private string tradeCodeCreateField;
        
        private System.DateTime cardDateField;
        
        private System.DateTime orderDateField;
        
        private System.DateTime dateContractField;
        
        private System.DateTime paymentDateField;
        
        private decimal advanceAmountField;
        
        private decimal advanceFeeField;
        
        private decimal advanceFeeRateField;
        
        private decimal manageFeeField;
        
        private decimal pendingAmountField;
        
        private decimal orderFeeValueField;
        
        private decimal orderFeeRateField;
        
        private decimal amountLeftField;
        
        private int numberOfDateField;
        
        private System.Guid idField;
        
        private bool soldMortageField;
        
        /// <remarks/>
        public string ContractId {
            get {
                return this.contractIdField;
            }
            set {
                this.contractIdField = value;
            }
        }
        
        /// <remarks/>
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string CardIdentity {
            get {
                return this.cardIdentityField;
            }
            set {
                this.cardIdentityField = value;
            }
        }
        
        /// <remarks/>
        public string CardIssuer {
            get {
                return this.cardIssuerField;
            }
            set {
                this.cardIssuerField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerTel {
            get {
                return this.customerTelField;
            }
            set {
                this.customerTelField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerAddress {
            get {
                return this.customerAddressField;
            }
            set {
                this.customerAddressField = value;
            }
        }
        
        /// <remarks/>
        public string StockType {
            get {
                return this.stockTypeField;
            }
            set {
                this.stockTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RateType {
            get {
                return this.rateTypeField;
            }
            set {
                this.rateTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UserCreate {
            get {
                return this.userCreateField;
            }
            set {
                this.userCreateField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string TradeCodeCreate {
            get {
                return this.tradeCodeCreateField;
            }
            set {
                this.tradeCodeCreateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardDate {
            get {
                return this.cardDateField;
            }
            set {
                this.cardDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateContract {
            get {
                return this.dateContractField;
            }
            set {
                this.dateContractField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PaymentDate {
            get {
                return this.paymentDateField;
            }
            set {
                this.paymentDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal AdvanceAmount {
            get {
                return this.advanceAmountField;
            }
            set {
                this.advanceAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal AdvanceFee {
            get {
                return this.advanceFeeField;
            }
            set {
                this.advanceFeeField = value;
            }
        }
        
        /// <remarks/>
        public decimal AdvanceFeeRate {
            get {
                return this.advanceFeeRateField;
            }
            set {
                this.advanceFeeRateField = value;
            }
        }
        
        /// <remarks/>
        public decimal ManageFee {
            get {
                return this.manageFeeField;
            }
            set {
                this.manageFeeField = value;
            }
        }
        
        /// <remarks/>
        public decimal PendingAmount {
            get {
                return this.pendingAmountField;
            }
            set {
                this.pendingAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal OrderFeeValue {
            get {
                return this.orderFeeValueField;
            }
            set {
                this.orderFeeValueField = value;
            }
        }
        
        /// <remarks/>
        public decimal OrderFeeRate {
            get {
                return this.orderFeeRateField;
            }
            set {
                this.orderFeeRateField = value;
            }
        }
        
        /// <remarks/>
        public decimal AmountLeft {
            get {
                return this.amountLeftField;
            }
            set {
                this.amountLeftField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfDate {
            get {
                return this.numberOfDateField;
            }
            set {
                this.numberOfDateField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool SoldMortage {
            get {
                return this.soldMortageField;
            }
            set {
                this.soldMortageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class BalanceAccount {
        
        private string bankGlField;
        
        private string sectionGlField;
        
        private string accountIDField;
        
        private string accountNameField;
        
        private decimal beginCreditField;
        
        private decimal beginDayField;
        
        private decimal yearDebitField;
        
        private decimal yearCreditField;
        
        private decimal monthDebitField;
        
        private decimal monthCreditField;
        
        private decimal dayDebitField;
        
        private decimal dayCreditField;
        
        private decimal currentBalanceField;
        
        private string debitOrCreditField;
        
        /// <remarks/>
        public string BankGl {
            get {
                return this.bankGlField;
            }
            set {
                this.bankGlField = value;
            }
        }
        
        /// <remarks/>
        public string SectionGl {
            get {
                return this.sectionGlField;
            }
            set {
                this.sectionGlField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal BeginCredit {
            get {
                return this.beginCreditField;
            }
            set {
                this.beginCreditField = value;
            }
        }
        
        /// <remarks/>
        public decimal BeginDay {
            get {
                return this.beginDayField;
            }
            set {
                this.beginDayField = value;
            }
        }
        
        /// <remarks/>
        public decimal YearDebit {
            get {
                return this.yearDebitField;
            }
            set {
                this.yearDebitField = value;
            }
        }
        
        /// <remarks/>
        public decimal YearCredit {
            get {
                return this.yearCreditField;
            }
            set {
                this.yearCreditField = value;
            }
        }
        
        /// <remarks/>
        public decimal MonthDebit {
            get {
                return this.monthDebitField;
            }
            set {
                this.monthDebitField = value;
            }
        }
        
        /// <remarks/>
        public decimal MonthCredit {
            get {
                return this.monthCreditField;
            }
            set {
                this.monthCreditField = value;
            }
        }
        
        /// <remarks/>
        public decimal DayDebit {
            get {
                return this.dayDebitField;
            }
            set {
                this.dayDebitField = value;
            }
        }
        
        /// <remarks/>
        public decimal DayCredit {
            get {
                return this.dayCreditField;
            }
            set {
                this.dayCreditField = value;
            }
        }
        
        /// <remarks/>
        public decimal CurrentBalance {
            get {
                return this.currentBalanceField;
            }
            set {
                this.currentBalanceField = value;
            }
        }
        
        /// <remarks/>
        public string DebitOrCredit {
            get {
                return this.debitOrCreditField;
            }
            set {
                this.debitOrCreditField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class Result {
        
        private string messageField;
        
        private bool isSuccessField;
        
        private object valueField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                this.isSuccessField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class CustAssetInfo {
        
        private decimal tongNoField;
        
        private decimal tongTSField;
        
        private decimal tyLeF1Field;
        
        private decimal tyLeF2Field;
        
        private decimal tyLeNoField;
        
        private decimal soTienDuocRutField;
        
        private decimal hanMucToiDaField;
        
        private decimal tienBanCKChoVeField;
        
        private decimal cKHienTaiField;
        
        private decimal cKMuaChoVeField;
        
        private decimal noQuaHanHDField;
        
        private decimal noTrongHanHDField;
        
        private decimal noQuaHanField;
        
        private decimal noTrongHanField;
        
        private decimal phaiTraTrongNgayField;
        
        private decimal soDuHienTaiField;
        
        private decimal tienBanUngTruocField;
        
        private decimal tienMuaCKChuaHachToanField;
        
        private decimal tyLeHopTacField;
        
        private string customerIDField;
        
        private string customerNameField;
        
        private string soHDField;
        
        private ContractType loaiHopHongField;
        
        private decimal coTucBangTienField;
        
        private decimal coTucBangChungKhoanField;
        
        private decimal quyenMuaChungKhoanField;
        
        private decimal tienMuaQuyenField;
        
        private string nVChamSocField;
        
        private string tradeCodeField;
        
        private decimal rCKHienTaiField;
        
        private decimal rCKMuaChoVeField;
        
        private decimal rCoTucBangChungKhoanField;
        
        private decimal rQuyenMuaChungKhoanField;
        
        private decimal rTongTSField;
        
        private System.DateTime ngayKetThucHDField;
        
        private System.DateTime ngayHDField;
        
        /// <remarks/>
        public decimal TongNo {
            get {
                return this.tongNoField;
            }
            set {
                this.tongNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal TongTS {
            get {
                return this.tongTSField;
            }
            set {
                this.tongTSField = value;
            }
        }
        
        /// <remarks/>
        public decimal TyLeF1 {
            get {
                return this.tyLeF1Field;
            }
            set {
                this.tyLeF1Field = value;
            }
        }
        
        /// <remarks/>
        public decimal TyLeF2 {
            get {
                return this.tyLeF2Field;
            }
            set {
                this.tyLeF2Field = value;
            }
        }
        
        /// <remarks/>
        public decimal TyLeNo {
            get {
                return this.tyLeNoField;
            }
            set {
                this.tyLeNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal SoTienDuocRut {
            get {
                return this.soTienDuocRutField;
            }
            set {
                this.soTienDuocRutField = value;
            }
        }
        
        /// <remarks/>
        public decimal HanMucToiDa {
            get {
                return this.hanMucToiDaField;
            }
            set {
                this.hanMucToiDaField = value;
            }
        }
        
        /// <remarks/>
        public decimal TienBanCKChoVe {
            get {
                return this.tienBanCKChoVeField;
            }
            set {
                this.tienBanCKChoVeField = value;
            }
        }
        
        /// <remarks/>
        public decimal CKHienTai {
            get {
                return this.cKHienTaiField;
            }
            set {
                this.cKHienTaiField = value;
            }
        }
        
        /// <remarks/>
        public decimal CKMuaChoVe {
            get {
                return this.cKMuaChoVeField;
            }
            set {
                this.cKMuaChoVeField = value;
            }
        }
        
        /// <remarks/>
        public decimal NoQuaHanHD {
            get {
                return this.noQuaHanHDField;
            }
            set {
                this.noQuaHanHDField = value;
            }
        }
        
        /// <remarks/>
        public decimal NoTrongHanHD {
            get {
                return this.noTrongHanHDField;
            }
            set {
                this.noTrongHanHDField = value;
            }
        }
        
        /// <remarks/>
        public decimal NoQuaHan {
            get {
                return this.noQuaHanField;
            }
            set {
                this.noQuaHanField = value;
            }
        }
        
        /// <remarks/>
        public decimal NoTrongHan {
            get {
                return this.noTrongHanField;
            }
            set {
                this.noTrongHanField = value;
            }
        }
        
        /// <remarks/>
        public decimal PhaiTraTrongNgay {
            get {
                return this.phaiTraTrongNgayField;
            }
            set {
                this.phaiTraTrongNgayField = value;
            }
        }
        
        /// <remarks/>
        public decimal SoDuHienTai {
            get {
                return this.soDuHienTaiField;
            }
            set {
                this.soDuHienTaiField = value;
            }
        }
        
        /// <remarks/>
        public decimal TienBanUngTruoc {
            get {
                return this.tienBanUngTruocField;
            }
            set {
                this.tienBanUngTruocField = value;
            }
        }
        
        /// <remarks/>
        public decimal TienMuaCKChuaHachToan {
            get {
                return this.tienMuaCKChuaHachToanField;
            }
            set {
                this.tienMuaCKChuaHachToanField = value;
            }
        }
        
        /// <remarks/>
        public decimal TyLeHopTac {
            get {
                return this.tyLeHopTacField;
            }
            set {
                this.tyLeHopTacField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string SoHD {
            get {
                return this.soHDField;
            }
            set {
                this.soHDField = value;
            }
        }
        
        /// <remarks/>
        public ContractType LoaiHopHong {
            get {
                return this.loaiHopHongField;
            }
            set {
                this.loaiHopHongField = value;
            }
        }
        
        /// <remarks/>
        public decimal CoTucBangTien {
            get {
                return this.coTucBangTienField;
            }
            set {
                this.coTucBangTienField = value;
            }
        }
        
        /// <remarks/>
        public decimal CoTucBangChungKhoan {
            get {
                return this.coTucBangChungKhoanField;
            }
            set {
                this.coTucBangChungKhoanField = value;
            }
        }
        
        /// <remarks/>
        public decimal QuyenMuaChungKhoan {
            get {
                return this.quyenMuaChungKhoanField;
            }
            set {
                this.quyenMuaChungKhoanField = value;
            }
        }
        
        /// <remarks/>
        public decimal TienMuaQuyen {
            get {
                return this.tienMuaQuyenField;
            }
            set {
                this.tienMuaQuyenField = value;
            }
        }
        
        /// <remarks/>
        public string NVChamSoc {
            get {
                return this.nVChamSocField;
            }
            set {
                this.nVChamSocField = value;
            }
        }
        
        /// <remarks/>
        public string TradeCode {
            get {
                return this.tradeCodeField;
            }
            set {
                this.tradeCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal RCKHienTai {
            get {
                return this.rCKHienTaiField;
            }
            set {
                this.rCKHienTaiField = value;
            }
        }
        
        /// <remarks/>
        public decimal RCKMuaChoVe {
            get {
                return this.rCKMuaChoVeField;
            }
            set {
                this.rCKMuaChoVeField = value;
            }
        }
        
        /// <remarks/>
        public decimal RCoTucBangChungKhoan {
            get {
                return this.rCoTucBangChungKhoanField;
            }
            set {
                this.rCoTucBangChungKhoanField = value;
            }
        }
        
        /// <remarks/>
        public decimal RQuyenMuaChungKhoan {
            get {
                return this.rQuyenMuaChungKhoanField;
            }
            set {
                this.rQuyenMuaChungKhoanField = value;
            }
        }
        
        /// <remarks/>
        public decimal RTongTS {
            get {
                return this.rTongTSField;
            }
            set {
                this.rTongTSField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime NgayKetThucHD {
            get {
                return this.ngayKetThucHDField;
            }
            set {
                this.ngayKetThucHDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime NgayHD {
            get {
                return this.ngayHDField;
            }
            set {
                this.ngayHDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public enum ContractType {
        
        /// <remarks/>
        CoThoiHan,
        
        /// <remarks/>
        KhongThoiHan,
        
        /// <remarks/>
        Both,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class Stock {
        
        private string stockCodeField;
        
        private int valueRateField;
        
        private decimal cellingFixedPriceField;
        
        private string createdByField;
        
        private string modifiedByField;
        
        private System.DateTime createdDateField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public string StockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ValueRate {
            get {
                return this.valueRateField;
            }
            set {
                this.valueRateField = value;
            }
        }
        
        /// <remarks/>
        public decimal CellingFixedPrice {
            get {
                return this.cellingFixedPriceField;
            }
            set {
                this.cellingFixedPriceField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class Contract {
        
        private int idField;
        
        private string contractIDField;
        
        private string customerIDField;
        
        private string customerNameField;
        
        private ContractType contractTypeField;
        
        private ContractStatus contractStatusField;
        
        private string branchCodeField;
        
        private string tradeCodeField;
        
        private System.DateTime contractDueDateField;
        
        private System.DateTime expiredDateField;
        
        private System.DateTime createdDateField;
        
        private string createdByField;
        
        private string approvedByField;
        
        private System.DateTime approvedDateField;
        
        private System.DateTime withdrawDateField;
        
        private System.DateTime disbursedDateField;
        
        private string withdrawByField;
        
        private string disbursedByField;
        
        private decimal registeredAmountField;
        
        private decimal approvalAmountField;
        
        private decimal interestAmountField;
        
        private decimal disbursedAmountField;
        
        private decimal withdrawAmountField;
        
        private decimal interestRatePerDayField;
        
        private decimal interestRatePenaltyField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string ContractID {
            get {
                return this.contractIDField;
            }
            set {
                this.contractIDField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public ContractType ContractType {
            get {
                return this.contractTypeField;
            }
            set {
                this.contractTypeField = value;
            }
        }
        
        /// <remarks/>
        public ContractStatus ContractStatus {
            get {
                return this.contractStatusField;
            }
            set {
                this.contractStatusField = value;
            }
        }
        
        /// <remarks/>
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TradeCode {
            get {
                return this.tradeCodeField;
            }
            set {
                this.tradeCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ContractDueDate {
            get {
                return this.contractDueDateField;
            }
            set {
                this.contractDueDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpiredDate {
            get {
                return this.expiredDateField;
            }
            set {
                this.expiredDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public string ApprovedBy {
            get {
                return this.approvedByField;
            }
            set {
                this.approvedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ApprovedDate {
            get {
                return this.approvedDateField;
            }
            set {
                this.approvedDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime WithdrawDate {
            get {
                return this.withdrawDateField;
            }
            set {
                this.withdrawDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DisbursedDate {
            get {
                return this.disbursedDateField;
            }
            set {
                this.disbursedDateField = value;
            }
        }
        
        /// <remarks/>
        public string WithdrawBy {
            get {
                return this.withdrawByField;
            }
            set {
                this.withdrawByField = value;
            }
        }
        
        /// <remarks/>
        public string DisbursedBy {
            get {
                return this.disbursedByField;
            }
            set {
                this.disbursedByField = value;
            }
        }
        
        /// <remarks/>
        public decimal RegisteredAmount {
            get {
                return this.registeredAmountField;
            }
            set {
                this.registeredAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal ApprovalAmount {
            get {
                return this.approvalAmountField;
            }
            set {
                this.approvalAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal InterestAmount {
            get {
                return this.interestAmountField;
            }
            set {
                this.interestAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal DisbursedAmount {
            get {
                return this.disbursedAmountField;
            }
            set {
                this.disbursedAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal WithdrawAmount {
            get {
                return this.withdrawAmountField;
            }
            set {
                this.withdrawAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal InterestRatePerDay {
            get {
                return this.interestRatePerDayField;
            }
            set {
                this.interestRatePerDayField = value;
            }
        }
        
        /// <remarks/>
        public decimal InterestRatePenalty {
            get {
                return this.interestRatePenaltyField;
            }
            set {
                this.interestRatePenaltyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public enum ContractStatus {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        ChoDuyet,
        
        /// <remarks/>
        DaDuyet,
        
        /// <remarks/>
        DaGiaiNgan,
        
        /// <remarks/>
        KetThuc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class Customer {
        
        private string accountStatusField;
        
        private string branchCodeField;
        
        private string customerIdField;
        
        private string customerNameField;
        
        private string tradeCodeField;
        
        private System.Nullable<byte> marginRateField;
        
        private bool isSpecialField;
        
        private string takeCareUserNameField;
        
        private int takeCareUserIdField;
        
        private string introduceUserNameField;
        
        private int introduceUserIdField;
        
        private string cardIdentityField;
        
        private string cardDateField;
        
        private string cardIssuerField;
        
        private string addressVietField;
        
        private string telephoneField;
        
        private string mobilePhone1Field;
        
        private string mobilePhone2Field;
        
        /// <remarks/>
        public string AccountStatus {
            get {
                return this.accountStatusField;
            }
            set {
                this.accountStatusField = value;
            }
        }
        
        /// <remarks/>
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string TradeCode {
            get {
                return this.tradeCodeField;
            }
            set {
                this.tradeCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<byte> MarginRate {
            get {
                return this.marginRateField;
            }
            set {
                this.marginRateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSpecial {
            get {
                return this.isSpecialField;
            }
            set {
                this.isSpecialField = value;
            }
        }
        
        /// <remarks/>
        public string TakeCareUserName {
            get {
                return this.takeCareUserNameField;
            }
            set {
                this.takeCareUserNameField = value;
            }
        }
        
        /// <remarks/>
        public int TakeCareUserId {
            get {
                return this.takeCareUserIdField;
            }
            set {
                this.takeCareUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string IntroduceUserName {
            get {
                return this.introduceUserNameField;
            }
            set {
                this.introduceUserNameField = value;
            }
        }
        
        /// <remarks/>
        public int IntroduceUserId {
            get {
                return this.introduceUserIdField;
            }
            set {
                this.introduceUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string CardIdentity {
            get {
                return this.cardIdentityField;
            }
            set {
                this.cardIdentityField = value;
            }
        }
        
        /// <remarks/>
        public string CardDate {
            get {
                return this.cardDateField;
            }
            set {
                this.cardDateField = value;
            }
        }
        
        /// <remarks/>
        public string CardIssuer {
            get {
                return this.cardIssuerField;
            }
            set {
                this.cardIssuerField = value;
            }
        }
        
        /// <remarks/>
        public string AddressViet {
            get {
                return this.addressVietField;
            }
            set {
                this.addressVietField = value;
            }
        }
        
        /// <remarks/>
        public string Telephone {
            get {
                return this.telephoneField;
            }
            set {
                this.telephoneField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone1 {
            get {
                return this.mobilePhone1Field;
            }
            set {
                this.mobilePhone1Field = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone2 {
            get {
                return this.mobilePhone2Field;
            }
            set {
                this.mobilePhone2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class UserLite {
        
        private int userIdField;
        
        private string userNameField;
        
        private string passwordField;
        
        private string branchCodeField;
        
        private string fullNameField;
        
        private string tradeCodeField;
        
        private string agencyNameField;
        
        private string clientIpField;
        
        private string statusField;
        
        private string userTransCodeField;
        
        private int departmentIdField;
        
        private int groupIdField;
        
        private string[] rightsField;
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string TradeCode {
            get {
                return this.tradeCodeField;
            }
            set {
                this.tradeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AgencyName {
            get {
                return this.agencyNameField;
            }
            set {
                this.agencyNameField = value;
            }
        }
        
        /// <remarks/>
        public string ClientIp {
            get {
                return this.clientIpField;
            }
            set {
                this.clientIpField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UserTransCode {
            get {
                return this.userTransCodeField;
            }
            set {
                this.userTransCodeField = value;
            }
        }
        
        /// <remarks/>
        public int DepartmentId {
            get {
                return this.departmentIdField;
            }
            set {
                this.departmentIdField = value;
            }
        }
        
        /// <remarks/>
        public int GroupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        public string[] Rights {
            get {
                return this.rightsField;
            }
            set {
                this.rightsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class SummaryCustody {
        
        private string bankGlField;
        
        private int quantityField;
        
        private decimal amountField;
        
        /// <remarks/>
        public string BankGl {
            get {
                return this.bankGlField;
            }
            set {
                this.bankGlField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class TransactionResult {
        
        private string transactionNumberField;
        
        private string transactionCodeField;
        
        /// <remarks/>
        public string TransactionNumber {
            get {
                return this.transactionNumberField;
            }
            set {
                this.transactionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionCode {
            get {
                return this.transactionCodeField;
            }
            set {
                this.transactionCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class SecuriryCallResult {
        
        private TransactionResult transactionField;
        
        private int cusSecFeeIdField;
        
        /// <remarks/>
        public TransactionResult Transaction {
            get {
                return this.transactionField;
            }
            set {
                this.transactionField = value;
            }
        }
        
        /// <remarks/>
        public int CusSecFeeId {
            get {
                return this.cusSecFeeIdField;
            }
            set {
                this.cusSecFeeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.vn/")]
    public partial class SecurityFeeLog {
        
        private int idField;
        
        private string customerIdField;
        
        private string customerNameField;
        
        private string stockCodeField;
        
        private int quantityField;
        
        private decimal feeRateField;
        
        private decimal feeAmountField;
        
        private int dayCountField;
        
        private System.DateTime transactionDateField;
        
        private System.DateTime callDateField;
        
        private string branchCodeField;
        
        private string accountrefField;
        
        private int customerSecurityFeeIdField;
        
        private decimal currentBalanceField;
        
        private System.DateTime beginDateField;
        
        private System.DateTime endDateField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string StockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal FeeRate {
            get {
                return this.feeRateField;
            }
            set {
                this.feeRateField = value;
            }
        }
        
        /// <remarks/>
        public decimal FeeAmount {
            get {
                return this.feeAmountField;
            }
            set {
                this.feeAmountField = value;
            }
        }
        
        /// <remarks/>
        public int DayCount {
            get {
                return this.dayCountField;
            }
            set {
                this.dayCountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransactionDate {
            get {
                return this.transactionDateField;
            }
            set {
                this.transactionDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CallDate {
            get {
                return this.callDateField;
            }
            set {
                this.callDateField = value;
            }
        }
        
        /// <remarks/>
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Accountref {
            get {
                return this.accountrefField;
            }
            set {
                this.accountrefField = value;
            }
        }
        
        /// <remarks/>
        public int CustomerSecurityFeeId {
            get {
                return this.customerSecurityFeeIdField;
            }
            set {
                this.customerSecurityFeeIdField = value;
            }
        }
        
        /// <remarks/>
        public decimal CurrentBalance {
            get {
                return this.currentBalanceField;
            }
            set {
                this.currentBalanceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BeginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveVariableCapitalPricCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteVariableCapitalPricCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDataForCallFeeCustoryCompletedEventHandler(object sender, GetDataForCallFeeCustoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataForCallFeeCustoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataForCallFeeCustoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecurityFeeLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecurityFeeLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertTransactionFeeCustodyCompletedEventHandler(object sender, InsertTransactionFeeCustodyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTransactionFeeCustodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTransactionFeeCustodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecuriryCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecuriryCallResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateSecurityLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsAccountingCustodyCompletedEventHandler(object sender, IsAccountingCustodyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAccountingCustodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAccountingCustodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SummaryCustodyCompletedEventHandler(object sender, SummaryCustodyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SummaryCustodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SummaryCustodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SummaryCustody[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SummaryCustody[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSummaryTradingCompletedEventHandler(object sender, GetSummaryTradingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSummaryTradingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSummaryTradingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void HelloVicsCompletedEventHandler(object sender, HelloVicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloVicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloVicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAuthorizeCompletedEventHandler(object sender, GetAuthorizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuthorizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuthorizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ClearTokenKeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserLite Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserLite)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FindUsersCompletedEventHandler(object sender, FindUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserLite[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserLite[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserListCompletedEventHandler(object sender, GetUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserLite[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserLite[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ChangeUserPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCurrentTransactionDateCompletedEventHandler(object sender, GetCurrentTransactionDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentTransactionDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentTransactionDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserAccessStringCompletedEventHandler(object sender, GetUserAccessStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAccessStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAccessStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateUserAccessStringCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCustomerCompletedEventHandler(object sender, GetCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateVRMCustomerInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FindCustomersCompletedEventHandler(object sender, FindCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetUserTakeCareCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FindContractsCompletedEventHandler(object sender, FindContractsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindContractsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindContractsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contract[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contract[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetContractsForDisburseCompletedEventHandler(object sender, GetContractsForDisburseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractsForDisburseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractsForDisburseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contract[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contract[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetContractsForWithdrawCompletedEventHandler(object sender, GetContractsForWithdrawCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractsForWithdrawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractsForWithdrawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contract[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contract[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCurrentContractCompletedEventHandler(object sender, GetCurrentContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contract Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contract)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveContractCompletedEventHandler(object sender, SaveContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contract Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contract)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ValidateInTermContractCompletedEventHandler(object sender, ValidateInTermContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateInTermContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateInTermContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStockListCompletedEventHandler(object sender, GetStockListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Stock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Stock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStockCompletedEventHandler(object sender, GetStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Stock Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Stock)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveStockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteStockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCustomerAssetInfoCompletedEventHandler(object sender, GetCustomerAssetInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerAssetInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAssetInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustAssetInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustAssetInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCustomerAssetInfoListCompletedEventHandler(object sender, GetCustomerAssetInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerAssetInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAssetInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustAssetInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustAssetInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCustomerAssetInfoListForDebtCompletedEventHandler(object sender, GetCustomerAssetInfoListForDebtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerAssetInfoListForDebtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAssetInfoListForDebtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustAssetInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustAssetInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDefferedTDayListCompletedEventHandler(object sender, GetDefferedTDayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefferedTDayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefferedTDayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDefferedListCompletedEventHandler(object sender, GetDefferedListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefferedListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefferedListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeferringTDayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCustomerDeferredTranListCompletedEventHandler(object sender, GetCustomerDeferredTranListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerDeferredTranListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerDeferredTranListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserTransCodeListCompletedEventHandler(object sender, GetUserTransCodeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTransCodeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTransCodeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FindDeferredTDayListCompletedEventHandler(object sender, FindDeferredTDayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindDeferredTDayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindDeferredTDayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DisburseContractCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void WithdrawContractCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateDebitLimitCompletedEventHandler(object sender, CreateDebitLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDebitLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDebitLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateWithdrawDeferredTransactionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateRetreiveInterestTransactionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetInterestTransactionListCompletedEventHandler(object sender, GetInterestTransactionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInterestTransactionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInterestTransactionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetIssuedTransactionListCompletedEventHandler(object sender, GetIssuedTransactionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIssuedTransactionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIssuedTransactionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteIssuedTransactionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ApproveTransactionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UnBlockBalanceAmountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBlockBalanceAndDebitLimitInfoCompletedEventHandler(object sender, GetBlockBalanceAndDebitLimitInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlockBalanceAndDebitLimitInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlockBalanceAndDebitLimitInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDebitLimitInfoCompletedEventHandler(object sender, GetDebitLimitInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDebitLimitInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDebitLimitInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCustomerStockEnquiryCompletedEventHandler(object sender, GetCustomerStockEnquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerStockEnquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerStockEnquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ShowBalanceAccountTransactionCompletedEventHandler(object sender, ShowBalanceAccountTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowBalanceAccountTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowBalanceAccountTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAdvanceBankTransactionReportCompletedEventHandler(object sender, GetAdvanceBankTransactionReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdvanceBankTransactionReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdvanceBankTransactionReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpireContractStatusReportCompletedEventHandler(object sender, GetExpireContractStatusReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpireContractStatusReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpireContractStatusReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMissingStocksCompletedEventHandler(object sender, GetMissingStocksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMissingStocksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMissingStocksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRightExecNotPayYetCompletedEventHandler(object sender, GetRightExecNotPayYetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRightExecNotPayYetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRightExecNotPayYetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRightExecRegisterNotPayYetCompletedEventHandler(object sender, GetRightExecRegisterNotPayYetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRightExecRegisterNotPayYetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRightExecRegisterNotPayYetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CancelRightExecCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBuyCashContractListCompletedEventHandler(object sender, GetBuyCashContractListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBuyCashContractListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBuyCashContractListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BuyCashContract[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BuyCashContract[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ChangeBuyCashContractStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBuyCashContractReportCompletedEventHandler(object sender, GetBuyCashContractReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBuyCashContractReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBuyCashContractReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDefinedBalanceAccountsCompletedEventHandler(object sender, GetDefinedBalanceAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefinedBalanceAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefinedBalanceAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BalanceAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BalanceAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertBankCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateBankCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteBankCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBankListCompletedEventHandler(object sender, GetBankListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bank[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bank[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBankCompletedEventHandler(object sender, GetBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bank Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bank)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertBankBranchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateBankBranchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteBankBranchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBankBranchListCompletedEventHandler(object sender, GetBankBranchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankBranchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankBranchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BankBranch[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BankBranch[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBankBranchCompletedEventHandler(object sender, GetBankBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BankBranch Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BankBranch)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllProvinceCompletedEventHandler(object sender, GetAllProvinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProvinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProvinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertAccountTransferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateAccountTransferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteAccountTransferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAccountTransferListCompletedEventHandler(object sender, GetAccountTransferListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountTransferListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountTransferListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAccountTransferCompletedEventHandler(object sender, GetAccountTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void OnlineTransferChangeStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOnlineTransferReportCompletedEventHandler(object sender, GetOnlineTransferReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnlineTransferReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnlineTransferReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOnlineRegistedReportCompletedEventHandler(object sender, GetOnlineRegistedReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnlineRegistedReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnlineRegistedReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOnlineTransferListCompletedEventHandler(object sender, GetOnlineTransferListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnlineTransferListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnlineTransferListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OnlineTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OnlineTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOnlineTransferCompletedEventHandler(object sender, GetOnlineTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnlineTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnlineTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OnlineTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OnlineTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetInterestRateCompletedEventHandler(object sender, GetInterestRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInterestRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInterestRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSbsIncomeTaxCompletedEventHandler(object sender, GetSbsIncomeTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSbsIncomeTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSbsIncomeTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IncomeTax[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IncomeTax[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetKtIncomeTaxCompletedEventHandler(object sender, GetKtIncomeTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKtIncomeTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKtIncomeTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IncomeTax[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IncomeTax[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertKtIncomeTaxCompletedEventHandler(object sender, InsertKtIncomeTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertKtIncomeTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertKtIncomeTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IncomeTax[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IncomeTax[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void VariableCapitalPricesCompletedEventHandler(object sender, VariableCapitalPricesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VariableCapitalPricesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VariableCapitalPricesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VariableCapitalPrice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VariableCapitalPrice[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591