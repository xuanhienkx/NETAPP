//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace SBSCore.SBSBankGateway {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetServiceVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback InquiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback InquiryOnlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback InquiryOfflineOperationCompleted;
        
        private System.Threading.SendOrPostCallback HoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnHoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback HoldWithFixErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnHoldWithFixErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendACBPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACBPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllHoldingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::SBSCore.Properties.Settings.Default.SBSCore_SBSBankGateway_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetServiceVersionCompletedEventHandler GetServiceVersionCompleted;
        
        /// <remarks/>
        public event InquiryCompletedEventHandler InquiryCompleted;
        
        /// <remarks/>
        public event InquiryOnlineCompletedEventHandler InquiryOnlineCompleted;
        
        /// <remarks/>
        public event InquiryOfflineCompletedEventHandler InquiryOfflineCompleted;
        
        /// <remarks/>
        public event HoldCompletedEventHandler HoldCompleted;
        
        /// <remarks/>
        public event UnHoldCompletedEventHandler UnHoldCompleted;
        
        /// <remarks/>
        public event HoldWithFixErrorCompletedEventHandler HoldWithFixErrorCompleted;
        
        /// <remarks/>
        public event UnHoldWithFixErrorCompletedEventHandler UnHoldWithFixErrorCompleted;
        
        /// <remarks/>
        public event GetPaymentCompletedEventHandler GetPaymentCompleted;
        
        /// <remarks/>
        public event GetTransactionCompletedEventHandler GetTransactionCompleted;
        
        /// <remarks/>
        public event SendPaymentCompletedEventHandler SendPaymentCompleted;
        
        /// <remarks/>
        public event SendACBPaymentCompletedEventHandler SendACBPaymentCompleted;
        
        /// <remarks/>
        public event ReleaseFileCompletedEventHandler ReleaseFileCompleted;
        
        /// <remarks/>
        public event GetACBPaymentCompletedEventHandler GetACBPaymentCompleted;
        
        /// <remarks/>
        public event RegisterAccountCompletedEventHandler RegisterAccountCompleted;
        
        /// <remarks/>
        public event DisableAccountCompletedEventHandler DisableAccountCompleted;
        
        /// <remarks/>
        public event SendFileCompletedEventHandler SendFileCompleted;
        
        /// <remarks/>
        public event GetResultFileCompletedEventHandler GetResultFileCompleted;
        
        /// <remarks/>
        public event GetAllHoldingCompletedEventHandler GetAllHoldingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServiceVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServiceVersion(string branchCode) {
            object[] results = this.Invoke("GetServiceVersion", new object[] {
                        branchCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceVersionAsync(string branchCode) {
            this.GetServiceVersionAsync(branchCode, null);
        }
        
        /// <remarks/>
        public void GetServiceVersionAsync(string branchCode, object userState) {
            if ((this.GetServiceVersionOperationCompleted == null)) {
                this.GetServiceVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceVersionOperationCompleted);
            }
            this.InvokeAsync("GetServiceVersion", new object[] {
                        branchCode}, this.GetServiceVersionOperationCompleted, userState);
        }
        
        private void OnGetServiceVersionOperationCompleted(object arg) {
            if ((this.GetServiceVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceVersionCompleted(this, new GetServiceVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Inquiry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InquiryResult Inquiry(string transactionDate, string customerId, string bankCode, string branchCode, string userEnter) {
            object[] results = this.Invoke("Inquiry", new object[] {
                        transactionDate,
                        customerId,
                        bankCode,
                        branchCode,
                        userEnter});
            return ((InquiryResult)(results[0]));
        }
        
        /// <remarks/>
        public void InquiryAsync(string transactionDate, string customerId, string bankCode, string branchCode, string userEnter) {
            this.InquiryAsync(transactionDate, customerId, bankCode, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void InquiryAsync(string transactionDate, string customerId, string bankCode, string branchCode, string userEnter, object userState) {
            if ((this.InquiryOperationCompleted == null)) {
                this.InquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInquiryOperationCompleted);
            }
            this.InvokeAsync("Inquiry", new object[] {
                        transactionDate,
                        customerId,
                        bankCode,
                        branchCode,
                        userEnter}, this.InquiryOperationCompleted, userState);
        }
        
        private void OnInquiryOperationCompleted(object arg) {
            if ((this.InquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InquiryCompleted(this, new InquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InquiryOnline", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InquiryAmountResult InquiryOnline(string transactionDate, string customerId, string bankCode, string branchCode, string userEnter) {
            object[] results = this.Invoke("InquiryOnline", new object[] {
                        transactionDate,
                        customerId,
                        bankCode,
                        branchCode,
                        userEnter});
            return ((InquiryAmountResult)(results[0]));
        }
        
        /// <remarks/>
        public void InquiryOnlineAsync(string transactionDate, string customerId, string bankCode, string branchCode, string userEnter) {
            this.InquiryOnlineAsync(transactionDate, customerId, bankCode, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void InquiryOnlineAsync(string transactionDate, string customerId, string bankCode, string branchCode, string userEnter, object userState) {
            if ((this.InquiryOnlineOperationCompleted == null)) {
                this.InquiryOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInquiryOnlineOperationCompleted);
            }
            this.InvokeAsync("InquiryOnline", new object[] {
                        transactionDate,
                        customerId,
                        bankCode,
                        branchCode,
                        userEnter}, this.InquiryOnlineOperationCompleted, userState);
        }
        
        private void OnInquiryOnlineOperationCompleted(object arg) {
            if ((this.InquiryOnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InquiryOnlineCompleted(this, new InquiryOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InquiryOffline", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InquiryAmountResult InquiryOffline(string transactionDate, string customerId, string bankCode, string branchCode, string userEnter) {
            object[] results = this.Invoke("InquiryOffline", new object[] {
                        transactionDate,
                        customerId,
                        bankCode,
                        branchCode,
                        userEnter});
            return ((InquiryAmountResult)(results[0]));
        }
        
        /// <remarks/>
        public void InquiryOfflineAsync(string transactionDate, string customerId, string bankCode, string branchCode, string userEnter) {
            this.InquiryOfflineAsync(transactionDate, customerId, bankCode, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void InquiryOfflineAsync(string transactionDate, string customerId, string bankCode, string branchCode, string userEnter, object userState) {
            if ((this.InquiryOfflineOperationCompleted == null)) {
                this.InquiryOfflineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInquiryOfflineOperationCompleted);
            }
            this.InvokeAsync("InquiryOffline", new object[] {
                        transactionDate,
                        customerId,
                        bankCode,
                        branchCode,
                        userEnter}, this.InquiryOfflineOperationCompleted, userState);
        }
        
        private void OnInquiryOfflineOperationCompleted(object arg) {
            if ((this.InquiryOfflineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InquiryOfflineCompleted(this, new InquiryOfflineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Hold", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result Hold(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter) {
            object[] results = this.Invoke("Hold", new object[] {
                        transactionDate,
                        customerId,
                        amount,
                        taskCode,
                        description,
                        bankCode,
                        branchCode,
                        userEnter});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void HoldAsync(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter) {
            this.HoldAsync(transactionDate, customerId, amount, taskCode, description, bankCode, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void HoldAsync(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter, object userState) {
            if ((this.HoldOperationCompleted == null)) {
                this.HoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHoldOperationCompleted);
            }
            this.InvokeAsync("Hold", new object[] {
                        transactionDate,
                        customerId,
                        amount,
                        taskCode,
                        description,
                        bankCode,
                        branchCode,
                        userEnter}, this.HoldOperationCompleted, userState);
        }
        
        private void OnHoldOperationCompleted(object arg) {
            if ((this.HoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HoldCompleted(this, new HoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnHold", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result UnHold(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter) {
            object[] results = this.Invoke("UnHold", new object[] {
                        transactionDate,
                        customerId,
                        amount,
                        taskCode,
                        description,
                        bankCode,
                        branchCode,
                        userEnter});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void UnHoldAsync(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter) {
            this.UnHoldAsync(transactionDate, customerId, amount, taskCode, description, bankCode, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void UnHoldAsync(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter, object userState) {
            if ((this.UnHoldOperationCompleted == null)) {
                this.UnHoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnHoldOperationCompleted);
            }
            this.InvokeAsync("UnHold", new object[] {
                        transactionDate,
                        customerId,
                        amount,
                        taskCode,
                        description,
                        bankCode,
                        branchCode,
                        userEnter}, this.UnHoldOperationCompleted, userState);
        }
        
        private void OnUnHoldOperationCompleted(object arg) {
            if ((this.UnHoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnHoldCompleted(this, new UnHoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HoldWithFixError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result HoldWithFixError(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter) {
            object[] results = this.Invoke("HoldWithFixError", new object[] {
                        transactionDate,
                        customerId,
                        amount,
                        taskCode,
                        description,
                        bankCode,
                        branchCode,
                        userEnter});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void HoldWithFixErrorAsync(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter) {
            this.HoldWithFixErrorAsync(transactionDate, customerId, amount, taskCode, description, bankCode, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void HoldWithFixErrorAsync(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter, object userState) {
            if ((this.HoldWithFixErrorOperationCompleted == null)) {
                this.HoldWithFixErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHoldWithFixErrorOperationCompleted);
            }
            this.InvokeAsync("HoldWithFixError", new object[] {
                        transactionDate,
                        customerId,
                        amount,
                        taskCode,
                        description,
                        bankCode,
                        branchCode,
                        userEnter}, this.HoldWithFixErrorOperationCompleted, userState);
        }
        
        private void OnHoldWithFixErrorOperationCompleted(object arg) {
            if ((this.HoldWithFixErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HoldWithFixErrorCompleted(this, new HoldWithFixErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnHoldWithFixError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result UnHoldWithFixError(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter) {
            object[] results = this.Invoke("UnHoldWithFixError", new object[] {
                        transactionDate,
                        customerId,
                        amount,
                        taskCode,
                        description,
                        bankCode,
                        branchCode,
                        userEnter});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void UnHoldWithFixErrorAsync(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter) {
            this.UnHoldWithFixErrorAsync(transactionDate, customerId, amount, taskCode, description, bankCode, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void UnHoldWithFixErrorAsync(string transactionDate, string customerId, decimal amount, string taskCode, string description, string bankCode, string branchCode, string userEnter, object userState) {
            if ((this.UnHoldWithFixErrorOperationCompleted == null)) {
                this.UnHoldWithFixErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnHoldWithFixErrorOperationCompleted);
            }
            this.InvokeAsync("UnHoldWithFixError", new object[] {
                        transactionDate,
                        customerId,
                        amount,
                        taskCode,
                        description,
                        bankCode,
                        branchCode,
                        userEnter}, this.UnHoldWithFixErrorOperationCompleted, userState);
        }
        
        private void OnUnHoldWithFixErrorOperationCompleted(object arg) {
            if ((this.UnHoldWithFixErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnHoldWithFixErrorCompleted(this, new UnHoldWithFixErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PaymentResult GetPayment(string transactionDate, string messageId, int time, string bankCode, string branchCode, string userEnter) {
            object[] results = this.Invoke("GetPayment", new object[] {
                        transactionDate,
                        messageId,
                        time,
                        bankCode,
                        branchCode,
                        userEnter});
            return ((PaymentResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentAsync(string transactionDate, string messageId, int time, string bankCode, string branchCode, string userEnter) {
            this.GetPaymentAsync(transactionDate, messageId, time, bankCode, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void GetPaymentAsync(string transactionDate, string messageId, int time, string bankCode, string branchCode, string userEnter, object userState) {
            if ((this.GetPaymentOperationCompleted == null)) {
                this.GetPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentOperationCompleted);
            }
            this.InvokeAsync("GetPayment", new object[] {
                        transactionDate,
                        messageId,
                        time,
                        bankCode,
                        branchCode,
                        userEnter}, this.GetPaymentOperationCompleted, userState);
        }
        
        private void OnGetPaymentOperationCompleted(object arg) {
            if ((this.GetPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentCompleted(this, new GetPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PaymentResult GetTransaction(string transactionDate, string customerId, bool isHold, string bankCode, string branchCode, string userEnter) {
            object[] results = this.Invoke("GetTransaction", new object[] {
                        transactionDate,
                        customerId,
                        isHold,
                        bankCode,
                        branchCode,
                        userEnter});
            return ((PaymentResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionAsync(string transactionDate, string customerId, bool isHold, string bankCode, string branchCode, string userEnter) {
            this.GetTransactionAsync(transactionDate, customerId, isHold, bankCode, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void GetTransactionAsync(string transactionDate, string customerId, bool isHold, string bankCode, string branchCode, string userEnter, object userState) {
            if ((this.GetTransactionOperationCompleted == null)) {
                this.GetTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionOperationCompleted);
            }
            this.InvokeAsync("GetTransaction", new object[] {
                        transactionDate,
                        customerId,
                        isHold,
                        bankCode,
                        branchCode,
                        userEnter}, this.GetTransactionOperationCompleted, userState);
        }
        
        private void OnGetTransactionOperationCompleted(object arg) {
            if ((this.GetTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionCompleted(this, new GetTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result SendPayment(string transactionDate, string transType, string content, int transactionNumber, string branchCode, string userEnter) {
            object[] results = this.Invoke("SendPayment", new object[] {
                        transactionDate,
                        transType,
                        content,
                        transactionNumber,
                        branchCode,
                        userEnter});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void SendPaymentAsync(string transactionDate, string transType, string content, int transactionNumber, string branchCode, string userEnter) {
            this.SendPaymentAsync(transactionDate, transType, content, transactionNumber, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void SendPaymentAsync(string transactionDate, string transType, string content, int transactionNumber, string branchCode, string userEnter, object userState) {
            if ((this.SendPaymentOperationCompleted == null)) {
                this.SendPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPaymentOperationCompleted);
            }
            this.InvokeAsync("SendPayment", new object[] {
                        transactionDate,
                        transType,
                        content,
                        transactionNumber,
                        branchCode,
                        userEnter}, this.SendPaymentOperationCompleted, userState);
        }
        
        private void OnSendPaymentOperationCompleted(object arg) {
            if ((this.SendPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPaymentCompleted(this, new SendPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendACBPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PaymentResult SendACBPayment(string transactionDate, string transType, string content, int transactionNumber, string branchCode, string userEnter) {
            object[] results = this.Invoke("SendACBPayment", new object[] {
                        transactionDate,
                        transType,
                        content,
                        transactionNumber,
                        branchCode,
                        userEnter});
            return ((PaymentResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendACBPaymentAsync(string transactionDate, string transType, string content, int transactionNumber, string branchCode, string userEnter) {
            this.SendACBPaymentAsync(transactionDate, transType, content, transactionNumber, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void SendACBPaymentAsync(string transactionDate, string transType, string content, int transactionNumber, string branchCode, string userEnter, object userState) {
            if ((this.SendACBPaymentOperationCompleted == null)) {
                this.SendACBPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendACBPaymentOperationCompleted);
            }
            this.InvokeAsync("SendACBPayment", new object[] {
                        transactionDate,
                        transType,
                        content,
                        transactionNumber,
                        branchCode,
                        userEnter}, this.SendACBPaymentOperationCompleted, userState);
        }
        
        private void OnSendACBPaymentOperationCompleted(object arg) {
            if ((this.SendACBPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendACBPaymentCompleted(this, new SendACBPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReleaseFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ReleaseFile(string transactionDate, string content, int transactionNumber, string branchCode, string userEnter) {
            object[] results = this.Invoke("ReleaseFile", new object[] {
                        transactionDate,
                        content,
                        transactionNumber,
                        branchCode,
                        userEnter});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseFileAsync(string transactionDate, string content, int transactionNumber, string branchCode, string userEnter) {
            this.ReleaseFileAsync(transactionDate, content, transactionNumber, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void ReleaseFileAsync(string transactionDate, string content, int transactionNumber, string branchCode, string userEnter, object userState) {
            if ((this.ReleaseFileOperationCompleted == null)) {
                this.ReleaseFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseFileOperationCompleted);
            }
            this.InvokeAsync("ReleaseFile", new object[] {
                        transactionDate,
                        content,
                        transactionNumber,
                        branchCode,
                        userEnter}, this.ReleaseFileOperationCompleted, userState);
        }
        
        private void OnReleaseFileOperationCompleted(object arg) {
            if ((this.ReleaseFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseFileCompleted(this, new ReleaseFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetACBPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PaymentResult GetACBPayment(bool isTranferError, string transactionDate, int time, string bankCode, string branchCode, string userEnter) {
            object[] results = this.Invoke("GetACBPayment", new object[] {
                        isTranferError,
                        transactionDate,
                        time,
                        bankCode,
                        branchCode,
                        userEnter});
            return ((PaymentResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetACBPaymentAsync(bool isTranferError, string transactionDate, int time, string bankCode, string branchCode, string userEnter) {
            this.GetACBPaymentAsync(isTranferError, transactionDate, time, bankCode, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void GetACBPaymentAsync(bool isTranferError, string transactionDate, int time, string bankCode, string branchCode, string userEnter, object userState) {
            if ((this.GetACBPaymentOperationCompleted == null)) {
                this.GetACBPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACBPaymentOperationCompleted);
            }
            this.InvokeAsync("GetACBPayment", new object[] {
                        isTranferError,
                        transactionDate,
                        time,
                        bankCode,
                        branchCode,
                        userEnter}, this.GetACBPaymentOperationCompleted, userState);
        }
        
        private void OnGetACBPaymentOperationCompleted(object arg) {
            if ((this.GetACBPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACBPaymentCompleted(this, new GetACBPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result RegisterAccount(string transactionDate, string bankCode, string bankAccountNumber, string customerId, string cid, string branchCode, string userEnter) {
            object[] results = this.Invoke("RegisterAccount", new object[] {
                        transactionDate,
                        bankCode,
                        bankAccountNumber,
                        customerId,
                        cid,
                        branchCode,
                        userEnter});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAccountAsync(string transactionDate, string bankCode, string bankAccountNumber, string customerId, string cid, string branchCode, string userEnter) {
            this.RegisterAccountAsync(transactionDate, bankCode, bankAccountNumber, customerId, cid, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void RegisterAccountAsync(string transactionDate, string bankCode, string bankAccountNumber, string customerId, string cid, string branchCode, string userEnter, object userState) {
            if ((this.RegisterAccountOperationCompleted == null)) {
                this.RegisterAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterAccountOperationCompleted);
            }
            this.InvokeAsync("RegisterAccount", new object[] {
                        transactionDate,
                        bankCode,
                        bankAccountNumber,
                        customerId,
                        cid,
                        branchCode,
                        userEnter}, this.RegisterAccountOperationCompleted, userState);
        }
        
        private void OnRegisterAccountOperationCompleted(object arg) {
            if ((this.RegisterAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterAccountCompleted(this, new RegisterAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DisableAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result DisableAccount(string transactionDate, string bankCode, string bankAccountNumber, string customerId, string branchCode, string userEnter) {
            object[] results = this.Invoke("DisableAccount", new object[] {
                        transactionDate,
                        bankCode,
                        bankAccountNumber,
                        customerId,
                        branchCode,
                        userEnter});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void DisableAccountAsync(string transactionDate, string bankCode, string bankAccountNumber, string customerId, string branchCode, string userEnter) {
            this.DisableAccountAsync(transactionDate, bankCode, bankAccountNumber, customerId, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void DisableAccountAsync(string transactionDate, string bankCode, string bankAccountNumber, string customerId, string branchCode, string userEnter, object userState) {
            if ((this.DisableAccountOperationCompleted == null)) {
                this.DisableAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableAccountOperationCompleted);
            }
            this.InvokeAsync("DisableAccount", new object[] {
                        transactionDate,
                        bankCode,
                        bankAccountNumber,
                        customerId,
                        branchCode,
                        userEnter}, this.DisableAccountOperationCompleted, userState);
        }
        
        private void OnDisableAccountOperationCompleted(object arg) {
            if ((this.DisableAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableAccountCompleted(this, new DisableAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result SendFile(string transactionDate, string bankCode, string content, string fileName, string branchCode, string userEnter) {
            object[] results = this.Invoke("SendFile", new object[] {
                        transactionDate,
                        bankCode,
                        content,
                        fileName,
                        branchCode,
                        userEnter});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void SendFileAsync(string transactionDate, string bankCode, string content, string fileName, string branchCode, string userEnter) {
            this.SendFileAsync(transactionDate, bankCode, content, fileName, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void SendFileAsync(string transactionDate, string bankCode, string content, string fileName, string branchCode, string userEnter, object userState) {
            if ((this.SendFileOperationCompleted == null)) {
                this.SendFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFileOperationCompleted);
            }
            this.InvokeAsync("SendFile", new object[] {
                        transactionDate,
                        bankCode,
                        content,
                        fileName,
                        branchCode,
                        userEnter}, this.SendFileOperationCompleted, userState);
        }
        
        private void OnSendFileOperationCompleted(object arg) {
            if ((this.SendFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFileCompleted(this, new SendFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResultFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PaymentResult GetResultFile(string transactionDate, string bankCode, string fileName, string branchCode, string userEnter) {
            object[] results = this.Invoke("GetResultFile", new object[] {
                        transactionDate,
                        bankCode,
                        fileName,
                        branchCode,
                        userEnter});
            return ((PaymentResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultFileAsync(string transactionDate, string bankCode, string fileName, string branchCode, string userEnter) {
            this.GetResultFileAsync(transactionDate, bankCode, fileName, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void GetResultFileAsync(string transactionDate, string bankCode, string fileName, string branchCode, string userEnter, object userState) {
            if ((this.GetResultFileOperationCompleted == null)) {
                this.GetResultFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultFileOperationCompleted);
            }
            this.InvokeAsync("GetResultFile", new object[] {
                        transactionDate,
                        bankCode,
                        fileName,
                        branchCode,
                        userEnter}, this.GetResultFileOperationCompleted, userState);
        }
        
        private void OnGetResultFileOperationCompleted(object arg) {
            if ((this.GetResultFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultFileCompleted(this, new GetResultFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllHolding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PaymentResult GetAllHolding(string transactionDate, string bankCode, string systemDate, string branchCode, string userEnter) {
            object[] results = this.Invoke("GetAllHolding", new object[] {
                        transactionDate,
                        bankCode,
                        systemDate,
                        branchCode,
                        userEnter});
            return ((PaymentResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllHoldingAsync(string transactionDate, string bankCode, string systemDate, string branchCode, string userEnter) {
            this.GetAllHoldingAsync(transactionDate, bankCode, systemDate, branchCode, userEnter, null);
        }
        
        /// <remarks/>
        public void GetAllHoldingAsync(string transactionDate, string bankCode, string systemDate, string branchCode, string userEnter, object userState) {
            if ((this.GetAllHoldingOperationCompleted == null)) {
                this.GetAllHoldingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllHoldingOperationCompleted);
            }
            this.InvokeAsync("GetAllHolding", new object[] {
                        transactionDate,
                        bankCode,
                        systemDate,
                        branchCode,
                        userEnter}, this.GetAllHoldingOperationCompleted, userState);
        }
        
        private void OnGetAllHoldingOperationCompleted(object arg) {
            if ((this.GetAllHoldingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllHoldingCompleted(this, new GetAllHoldingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InquiryResult : Result {
        
        private decimal availBalanceField;
        
        private decimal balanceField;
        
        private decimal bankBalanceField;
        
        private decimal bankAvailBalanceField;
        
        private decimal localBalanceField;
        
        private decimal localAvailBalanceField;
        
        /// <remarks/>
        public decimal AvailBalance {
            get {
                return this.availBalanceField;
            }
            set {
                this.availBalanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal BankBalance {
            get {
                return this.bankBalanceField;
            }
            set {
                this.bankBalanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal BankAvailBalance {
            get {
                return this.bankAvailBalanceField;
            }
            set {
                this.bankAvailBalanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal LocalBalance {
            get {
                return this.localBalanceField;
            }
            set {
                this.localBalanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal LocalAvailBalance {
            get {
                return this.localAvailBalanceField;
            }
            set {
                this.localAvailBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PaymentResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InquiryAmountResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InquiryResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Result {
        
        private bool successfulField;
        
        private string errorCodeField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool Successful {
            get {
                return this.successfulField;
            }
            set {
                this.successfulField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PaymentResult : Result {
        
        private string xmlDataField;
        
        /// <remarks/>
        public string XmlData {
            get {
                return this.xmlDataField;
            }
            set {
                this.xmlDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InquiryAmountResult : Result {
        
        private decimal availBalanceField;
        
        private decimal balanceField;
        
        private decimal bankBalanceField;
        
        private decimal bankAvailBalanceField;
        
        private decimal localBalanceField;
        
        private decimal localAvailBalanceField;
        
        private System.DateTime lastTimeInquiryField;
        
        /// <remarks/>
        public decimal AvailBalance {
            get {
                return this.availBalanceField;
            }
            set {
                this.availBalanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal BankBalance {
            get {
                return this.bankBalanceField;
            }
            set {
                this.bankBalanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal BankAvailBalance {
            get {
                return this.bankAvailBalanceField;
            }
            set {
                this.bankAvailBalanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal LocalBalance {
            get {
                return this.localBalanceField;
            }
            set {
                this.localBalanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal LocalAvailBalance {
            get {
                return this.localAvailBalanceField;
            }
            set {
                this.localAvailBalanceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastTimeInquiry {
            get {
                return this.lastTimeInquiryField;
            }
            set {
                this.lastTimeInquiryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetServiceVersionCompletedEventHandler(object sender, GetServiceVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InquiryCompletedEventHandler(object sender, InquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InquiryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InquiryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InquiryOnlineCompletedEventHandler(object sender, InquiryOnlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InquiryOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InquiryOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InquiryAmountResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InquiryAmountResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InquiryOfflineCompletedEventHandler(object sender, InquiryOfflineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InquiryOfflineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InquiryOfflineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InquiryAmountResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InquiryAmountResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HoldCompletedEventHandler(object sender, HoldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UnHoldCompletedEventHandler(object sender, UnHoldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnHoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnHoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HoldWithFixErrorCompletedEventHandler(object sender, HoldWithFixErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HoldWithFixErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HoldWithFixErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UnHoldWithFixErrorCompletedEventHandler(object sender, UnHoldWithFixErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnHoldWithFixErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnHoldWithFixErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPaymentCompletedEventHandler(object sender, GetPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTransactionCompletedEventHandler(object sender, GetTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendPaymentCompletedEventHandler(object sender, SendPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendACBPaymentCompletedEventHandler(object sender, SendACBPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendACBPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendACBPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReleaseFileCompletedEventHandler(object sender, ReleaseFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReleaseFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReleaseFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetACBPaymentCompletedEventHandler(object sender, GetACBPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACBPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACBPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegisterAccountCompletedEventHandler(object sender, RegisterAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DisableAccountCompletedEventHandler(object sender, DisableAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendFileCompletedEventHandler(object sender, SendFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetResultFileCompletedEventHandler(object sender, GetResultFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllHoldingCompletedEventHandler(object sender, GetAllHoldingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllHoldingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllHoldingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591