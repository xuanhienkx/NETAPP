//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace SBSCore.HoseGateway {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GatewaySoap", Namespace="http://vics.com.vn/")]
    public partial class Gateway : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetListForCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDayCancelListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckStockHaltOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Gateway() {
            this.Url = global::SBSCore.Properties.Settings.Default.SBSCore_HoseGateway_Gateway;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetListForCancelCompletedEventHandler GetListForCancelCompleted;
        
        /// <remarks/>
        public event CancelOrderCompletedEventHandler CancelOrderCompleted;
        
        /// <remarks/>
        public event GetDayCancelListCompletedEventHandler GetDayCancelListCompleted;
        
        /// <remarks/>
        public event GetCurrentSessionCompletedEventHandler GetCurrentSessionCompleted;
        
        /// <remarks/>
        public event CheckStockHaltCompletedEventHandler CheckStockHaltCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.com.vn/GetListForCancel", RequestNamespace="http://vics.com.vn/", ResponseNamespace="http://vics.com.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HoseMsgOrder[] GetListForCancel(string customerid, string stockcode, string orderside) {
            object[] results = this.Invoke("GetListForCancel", new object[] {
                        customerid,
                        stockcode,
                        orderside});
            return ((HoseMsgOrder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListForCancelAsync(string customerid, string stockcode, string orderside) {
            this.GetListForCancelAsync(customerid, stockcode, orderside, null);
        }
        
        /// <remarks/>
        public void GetListForCancelAsync(string customerid, string stockcode, string orderside, object userState) {
            if ((this.GetListForCancelOperationCompleted == null)) {
                this.GetListForCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListForCancelOperationCompleted);
            }
            this.InvokeAsync("GetListForCancel", new object[] {
                        customerid,
                        stockcode,
                        orderside}, this.GetListForCancelOperationCompleted, userState);
        }
        
        private void OnGetListForCancelOperationCompleted(object arg) {
            if ((this.GetListForCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListForCancelCompleted(this, new GetListForCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.com.vn/CancelOrder", RequestNamespace="http://vics.com.vn/", ResponseNamespace="http://vics.com.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelOrder(string orderNumber, string canceledBy) {
            this.Invoke("CancelOrder", new object[] {
                        orderNumber,
                        canceledBy});
        }
        
        /// <remarks/>
        public void CancelOrderAsync(string orderNumber, string canceledBy) {
            this.CancelOrderAsync(orderNumber, canceledBy, null);
        }
        
        /// <remarks/>
        public void CancelOrderAsync(string orderNumber, string canceledBy, object userState) {
            if ((this.CancelOrderOperationCompleted == null)) {
                this.CancelOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelOrderOperationCompleted);
            }
            this.InvokeAsync("CancelOrder", new object[] {
                        orderNumber,
                        canceledBy}, this.CancelOrderOperationCompleted, userState);
        }
        
        private void OnCancelOrderOperationCompleted(object arg) {
            if ((this.CancelOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.com.vn/GetDayCancelList", RequestNamespace="http://vics.com.vn/", ResponseNamespace="http://vics.com.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HoseMsgOrder[] GetDayCancelList() {
            object[] results = this.Invoke("GetDayCancelList", new object[0]);
            return ((HoseMsgOrder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDayCancelListAsync() {
            this.GetDayCancelListAsync(null);
        }
        
        /// <remarks/>
        public void GetDayCancelListAsync(object userState) {
            if ((this.GetDayCancelListOperationCompleted == null)) {
                this.GetDayCancelListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDayCancelListOperationCompleted);
            }
            this.InvokeAsync("GetDayCancelList", new object[0], this.GetDayCancelListOperationCompleted, userState);
        }
        
        private void OnGetDayCancelListOperationCompleted(object arg) {
            if ((this.GetDayCancelListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDayCancelListCompleted(this, new GetDayCancelListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.com.vn/GetCurrentSession", RequestNamespace="http://vics.com.vn/", ResponseNamespace="http://vics.com.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentSession() {
            object[] results = this.Invoke("GetCurrentSession", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentSessionAsync() {
            this.GetCurrentSessionAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentSessionAsync(object userState) {
            if ((this.GetCurrentSessionOperationCompleted == null)) {
                this.GetCurrentSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentSessionOperationCompleted);
            }
            this.InvokeAsync("GetCurrentSession", new object[0], this.GetCurrentSessionOperationCompleted, userState);
        }
        
        private void OnGetCurrentSessionOperationCompleted(object arg) {
            if ((this.GetCurrentSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentSessionCompleted(this, new GetCurrentSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vics.com.vn/CheckStockHalt", RequestNamespace="http://vics.com.vn/", ResponseNamespace="http://vics.com.vn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckStockHalt(string stockCode) {
            object[] results = this.Invoke("CheckStockHalt", new object[] {
                        stockCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckStockHaltAsync(string stockCode) {
            this.CheckStockHaltAsync(stockCode, null);
        }
        
        /// <remarks/>
        public void CheckStockHaltAsync(string stockCode, object userState) {
            if ((this.CheckStockHaltOperationCompleted == null)) {
                this.CheckStockHaltOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStockHaltOperationCompleted);
            }
            this.InvokeAsync("CheckStockHalt", new object[] {
                        stockCode}, this.CheckStockHaltOperationCompleted, userState);
        }
        
        private void OnCheckStockHaltOperationCompleted(object arg) {
            if ((this.CheckStockHaltCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStockHaltCompleted(this, new CheckStockHaltCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vics.com.vn/")]
    public partial class HoseMsgOrder {
        
        private decimal oRDER_NUMBERField;
        
        private string sTATUSField;
        
        /// <remarks/>
        public decimal ORDER_NUMBER {
            get {
                return this.oRDER_NUMBERField;
            }
            set {
                this.oRDER_NUMBERField = value;
            }
        }
        
        /// <remarks/>
        public string STATUS {
            get {
                return this.sTATUSField;
            }
            set {
                this.sTATUSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetListForCancelCompletedEventHandler(object sender, GetListForCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListForCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListForCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HoseMsgOrder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HoseMsgOrder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CancelOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDayCancelListCompletedEventHandler(object sender, GetDayCancelListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDayCancelListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDayCancelListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HoseMsgOrder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HoseMsgOrder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrentSessionCompletedEventHandler(object sender, GetCurrentSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckStockHaltCompletedEventHandler(object sender, CheckStockHaltCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStockHaltCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStockHaltCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591